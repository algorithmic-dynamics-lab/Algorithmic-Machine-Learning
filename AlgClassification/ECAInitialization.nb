(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    715873,      15372]
NotebookOptionsPosition[    679258,      14796]
NotebookOutlinePosition[    679624,      14812]
CellTagsIndexPosition[    679581,      14809]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Classifying ECA by Their Initial State.", "Title",
 CellChangeTimes->{{3.7604637450772758`*^9, 3.7604637684139204`*^9}, {
  3.767562907340947*^9, 
  3.7675629241793065`*^9}},ExpressionUUID->"7e7ce25d-69cb-457d-9794-\
43456421d5ad"],

Cell[TextData[{
 "In this experiment, we will try to associate each automaton evolution \
string to its ",
 StyleBox["initialization. ",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.7604638723818254`*^9, 
  3.760463944557734*^9}},ExpressionUUID->"9f7f39b6-654b-4ccc-96e7-\
916d3b12f15e"],

Cell[CellGroupData[{

Cell["The Sets", "Subchapter",
 CellChangeTimes->{{3.760464000709871*^9, 
  3.7604640410219016`*^9}},ExpressionUUID->"b14af9c2-8923-4133-b655-\
96be83b8c98c"],

Cell[TextData[{
 "First, we get a random number of initialization of strings, with higher \
probability according to its BDM. Also, Let\[CloseCurlyQuote]s keep it ",
 StyleBox["small ",
  FontSlant->"Italic"],
 "for now."
}], "Text",
 CellChangeTimes->{{3.760464043605932*^9, 
  3.760464140583814*^9}},ExpressionUUID->"c14fd1da-fe0c-496c-8d65-\
0aaaf1fdab94"],

Cell["\<\
We will use an accuracy resolution of 16-bits for the inputs and 14-bits for \
the outputs.\
\>", "Text",
 CellChangeTimes->{{3.760468263948553*^9, 3.7604682866457896`*^9}, {
  3.761600423779743*^9, 
  3.761600439929515*^9}},ExpressionUUID->"b8b02f2c-0c5f-444c-8a48-\
f18d2d570beb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toBinaryInt", "[", 
   RowBox[{"n_", ",", "bits_"}], "]"}], ":=", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"n", ",", "2", ",", "bits"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.760466909105418*^9, 3.760466984285336*^9}, {
   3.7604671642959843`*^9, 3.76046720626229*^9}, {3.7604672530881796`*^9, 
   3.7604672755742083`*^9}, 3.761603681821744*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"b3abc2fb-f1ff-49f5-8fbe-0e871fba0d9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"set", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"2", "^", "12"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7604683121443925`*^9, 3.760468344690277*^9}, 
   3.7616690045826674`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"24f0a916-d946-4271-ba5e-1a258debe037"],

Cell[TextData[{
 "Computing the weights set using the ",
 StyleBox["square of the BDM ",
  FontSlant->"Italic"],
 "of the binary representations of the strings."
}], "Text",
 CellChangeTimes->{{3.7604684290570736`*^9, 3.760468434773091*^9}, {
  3.7604688226051836`*^9, 3.7604688265334387`*^9}, {3.7604689150209475`*^9, 
  3.7604689478630877`*^9}},ExpressionUUID->"330c34e0-aaa9-4fa1-9298-\
5019daa2abb5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "3012019", "]"}], "\[IndentingNewLine]", 
 RowBox[{"class", " ", "=", " ", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"set", ",", "10"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"classB", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"toBinaryInt", "[", 
     RowBox[{"#", ",", "12"}], "]"}], "&"}], "/@", "class"}]}]}], "Code",
 CellChangeTimes->{{3.7604691825994096`*^9, 3.7604693182457795`*^9}, {
   3.7604696568815546`*^9, 3.760469661406576*^9}, 3.7608350946356816`*^9, {
   3.7608358010804467`*^9, 3.7608358025718536`*^9}, {3.7616690577039857`*^9, 
   3.7616690579410133`*^9}, {3.762704523369776*^9, 3.7627045234908004`*^9}, {
   3.7627057507297597`*^9, 3.7627057516118336`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"79a8ebc7-a022-4fd9-bcb7-a1253552f629"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "704", ",", "3572", ",", "3067", ",", "3184", ",", "1939", ",", "2386", ",",
    "2896", ",", "205", ",", "828", ",", "3935"}], "}"}]], "Output",
 CellChangeTimes->{
  3.760469257975272*^9, {3.7604692967510824`*^9, 3.76046932946336*^9}, {
   3.760469646909689*^9, 3.76046966450469*^9}, 3.760803373471342*^9, 
   3.7608344657099676`*^9, 3.7608350537206163`*^9, 3.7608351199189425`*^9, 
   3.7608354797398777`*^9, 3.7608355271062727`*^9, 3.760835829391762*^9, 
   3.7615755621219077`*^9, 3.7615825820245595`*^9, 3.761582721336751*^9, 
   3.7615832180465555`*^9, 3.7615834042392235`*^9, 3.7615954071842766`*^9, 
   3.7616035976254935`*^9, {3.7616037702000237`*^9, 3.7616037980970297`*^9}, {
   3.7616079998849125`*^9, 3.7616080298370347`*^9}, {3.7616191642811747`*^9, 
   3.7616191644480777`*^9}, 3.76164119218051*^9, 3.761669065075196*^9, 
   3.761924089388037*^9, {3.7619307318883963`*^9, 3.761930740083085*^9}, 
   3.761941175331897*^9, 3.762015544092719*^9, 3.7620178587437944`*^9, 
   3.7620181125836153`*^9, 3.762033024972973*^9, 3.762033065176416*^9, {
   3.762094122174416*^9, 3.762094122582184*^9}, 3.7620949973117557`*^9, {
   3.762095110457983*^9, 3.7620951187992496`*^9}, 3.7620963409711723`*^9, {
   3.762097230607156*^9, 3.762097230872004*^9}, 3.762103160583171*^9, 
   3.7621850958816757`*^9, {3.7621951574932065`*^9, 3.762195165899747*^9}, {
   3.762195421381638*^9, 3.762195422447764*^9}, {3.7621961077113132`*^9, 
   3.762196115293714*^9}, 3.762632883449643*^9, {3.7626337132005987`*^9, 
   3.7626337135873804`*^9}, {3.762703063050996*^9, 3.7627030634347734`*^9}, {
   3.7627045511746683`*^9, 3.7627045515590825`*^9}, {3.7627057867963543`*^9, 
   3.7627057871948175`*^9}, 3.7627058316261578`*^9, 3.7627909656559153`*^9, {
   3.762793453366869*^9, 3.7627934631071615`*^9}, {3.7627945901986113`*^9, 
   3.7627945904786186`*^9}, 3.762802470536106*^9, 3.7628035509474707`*^9, {
   3.7628064748084517`*^9, 3.762806474992363*^9}, 3.7646832499972258`*^9, 
   3.7646843582221737`*^9, 3.764685482703437*^9, 3.7646857654946375`*^9, 
   3.7646860004610777`*^9, 3.7647044449538975`*^9, {3.7647054242774334`*^9, 
   3.7647054244598722`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"bcaa3621-513a-45f8-967c-dde521c68678"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.760469257975272*^9, {3.7604692967510824`*^9, 3.76046932946336*^9}, {
   3.760469646909689*^9, 3.76046966450469*^9}, 3.760803373471342*^9, 
   3.7608344657099676`*^9, 3.7608350537206163`*^9, 3.7608351199189425`*^9, 
   3.7608354797398777`*^9, 3.7608355271062727`*^9, 3.760835829391762*^9, 
   3.7615755621219077`*^9, 3.7615825820245595`*^9, 3.761582721336751*^9, 
   3.7615832180465555`*^9, 3.7615834042392235`*^9, 3.7615954071842766`*^9, 
   3.7616035976254935`*^9, {3.7616037702000237`*^9, 3.7616037980970297`*^9}, {
   3.7616079998849125`*^9, 3.7616080298370347`*^9}, {3.7616191642811747`*^9, 
   3.7616191644480777`*^9}, 3.76164119218051*^9, 3.761669065075196*^9, 
   3.761924089388037*^9, {3.7619307318883963`*^9, 3.761930740083085*^9}, 
   3.761941175331897*^9, 3.762015544092719*^9, 3.7620178587437944`*^9, 
   3.7620181125836153`*^9, 3.762033024972973*^9, 3.762033065176416*^9, {
   3.762094122174416*^9, 3.762094122582184*^9}, 3.7620949973117557`*^9, {
   3.762095110457983*^9, 3.7620951187992496`*^9}, 3.7620963409711723`*^9, {
   3.762097230607156*^9, 3.762097230872004*^9}, 3.762103160583171*^9, 
   3.7621850958816757`*^9, {3.7621951574932065`*^9, 3.762195165899747*^9}, {
   3.762195421381638*^9, 3.762195422447764*^9}, {3.7621961077113132`*^9, 
   3.762196115293714*^9}, 3.762632883449643*^9, {3.7626337132005987`*^9, 
   3.7626337135873804`*^9}, {3.762703063050996*^9, 3.7627030634347734`*^9}, {
   3.7627045511746683`*^9, 3.7627045515590825`*^9}, {3.7627057867963543`*^9, 
   3.7627057871948175`*^9}, 3.7627058316261578`*^9, 3.7627909656559153`*^9, {
   3.762793453366869*^9, 3.7627934631071615`*^9}, {3.7627945901986113`*^9, 
   3.7627945904786186`*^9}, 3.762802470536106*^9, 3.7628035509474707`*^9, {
   3.7628064748084517`*^9, 3.762806474992363*^9}, 3.7646832499972258`*^9, 
   3.7646843582221737`*^9, 3.764685482703437*^9, 3.7646857654946375`*^9, 
   3.7646860004610777`*^9, 3.7647044449538975`*^9, {3.7647054242774334`*^9, 
   3.764705424472866*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"18adb36b-41d4-4e8e-86aa-22f309824476"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now, the Data Sets.", "Subsection",
 CellChangeTimes->{{3.760469703529554*^9, 
  3.7604697164525805`*^9}},ExpressionUUID->"e7f144d5-af9c-44a2-823e-\
50eb89acd30b"],

Cell["Let\[CloseCurlyQuote]s use 20 samples per class. ", "Text",
 CellChangeTimes->{{3.760469784128128*^9, 3.7604697962451935`*^9}, {
  3.76046985585308*^9, 3.760469860373493*^9}, {3.7608356615569367`*^9, 
  3.7608356618277826`*^9}},ExpressionUUID->"4f631990-1d75-4ff5-954d-\
55702e0f7815"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nSamples", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", " ", "=", " ", "4"}], ";"}]}], "Code",
 CellChangeTimes->{{3.7604697717012396`*^9, 3.7604697779176826`*^9}, 
   3.760469875768682*^9, 3.76046993140784*^9, {3.7604699840926886`*^9, 
   3.760469987821554*^9}, 3.7604706117043605`*^9, 3.7608344139508495`*^9, {
   3.760835665345627*^9, 3.760835665974861*^9}, {3.761938797365055*^9, 
   3.761938797563941*^9}, {3.762033012313265*^9, 3.7620330126380816`*^9}, {
   3.7620949659174347`*^9, 3.762094966090336*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ff1ffc72-f9cd-47b3-a092-68a66916d13a"],

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "0103019", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrainingSample", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Catenate", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"With", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"aut", " ", "=", 
              RowBox[{"RandomInteger", "[", "128", "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Rest", "@", 
               RowBox[{"CellularAutomaton", "[", 
                RowBox[{"aut", ",", 
                 RowBox[{"classB", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "size"}], "]"}]}], 
              ")"}], "\[Rule]", 
             RowBox[{"class", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
           "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "nSamples"}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "class", "]"}]}], "}"}]}], "]"}]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ValidationSample", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Catenate", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"With", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"aut", " ", "=", 
              RowBox[{"RandomInteger", "[", "128", "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Rest", "@", 
               RowBox[{"CellularAutomaton", "[", 
                RowBox[{"aut", ",", 
                 RowBox[{"classB", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "size"}], "]"}]}], 
              ")"}], "\[Rule]", 
             RowBox[{"class", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
           "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "nSamples"}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "class", "]"}]}], "}"}]}], "]"}]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestSample", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"DeleteDuplicates", "@", 
    RowBox[{"Catenate", "@", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"With", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"aut", " ", "=", 
             RowBox[{"RandomInteger", "[", "128", "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Rest", "@", 
              RowBox[{"CellularAutomaton", "[", 
               RowBox[{"aut", ",", 
                RowBox[{"classB", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "size"}], "]"}]}], 
             ")"}], "\[Rule]", 
            RowBox[{"class", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
          "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "nSamples"}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "class", "]"}]}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQLcXIdLuN5Y3jhLOr7oLoJ6UL3oPolNZzP0H0q/dd
TO1Aerp6nBCIrrjiJgaivY79kAXRdifklUB0t9d5bRAd+U/QCUQHPanyBNEd
W3oDQDSHXXggiC61PRAGolsMvsWCaOlJTfUg+oaXYiuIjmvp5O8A0m4WZaIg
WqGeXQ1En9Z8qQ6ipe5U2INoNddHTiC67rBEEYj+0LGwBETHlNYf1GR948jG
9/UwiO65OYPREkgf+CDGDKKl9rzPB9Gvla8WguiA7vYyEO1qsbscRPcvCb28
hu2No8O6umsgeneR/V0Q3bNG6gWIXnfH/w2Inue1/wuIrig3brwApPv4djWD
6BZnP/0Q9jeO8S+zTUE0AKYun5s=
  "],
 CellLabel->"In[19]:=",ExpressionUUID->"39a6d33f-a5f1-45d3-a5c3-9468db0dafb8"],

Cell["The data sets are composed of elements of the form:", "Text",
 CellChangeTimes->{{3.7615783383864365`*^9, 
  3.761578358657618*^9}},ExpressionUUID->"1c23506d-e288-4136-98ae-\
081a32475c06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ex", "=", 
  RowBox[{"RandomChoice", "@", "TrainingSample"}]}]], "Input",
 CellChangeTimes->{{3.761578361466395*^9, 3.761578374652324*^9}, {
  3.761578417310545*^9, 3.7615784199304276`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"275e3797-b171-4bc1-a6c0-abd4fe1b4a31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
      "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
  "\[Rule]", "704"}]], "Output",
 CellChangeTimes->{
  3.761578375134238*^9, 3.761578420549529*^9, 3.7615825821624813`*^9, 
   3.7615827222554812`*^9, 3.76158321816049*^9, 3.761583404325173*^9, 
   3.761595407289242*^9, 3.7615960957234316`*^9, 3.7615961259853888`*^9, {
   3.7615961732994823`*^9, 3.761596185552706*^9}, {3.7615962298996325`*^9, 
   3.761596241664651*^9}, 3.761596275003414*^9, {3.7615963059869585`*^9, 
   3.761596328361635*^9}, 3.7616035978153877`*^9, 3.761603798214964*^9, {
   3.7616079999998455`*^9, 3.761608029935978*^9}, 3.7616191645350294`*^9, 
   3.7616411923014417`*^9, 3.761669155619446*^9, 3.76193074016004*^9, {
   3.7619388025056744`*^9, 3.761938862990937*^9}, 3.761941175506797*^9, 
   3.7620178588667235`*^9, 3.762018112689554*^9, 3.762033145157982*^9, 
   3.7620941227340965`*^9, 3.762094997444109*^9, 3.7620951189291763`*^9, 
   3.76209634115407*^9, 3.7620972311074753`*^9, 3.762103160749076*^9, 
   3.762185096041666*^9, 3.7621951660266743`*^9, 3.762195422667639*^9, 
   3.7621961153336906`*^9, 3.7626328835635777`*^9, 3.7626337137892623`*^9, 
   3.762703063657648*^9, 3.7627045518419204`*^9, 3.762705787401699*^9, 
   3.762705831821631*^9, 3.7627909657998333`*^9, 3.7627934632310905`*^9, 
   3.7627945906195374`*^9, 3.762802470618065*^9, 3.7628035510404186`*^9, 
   3.762806483981784*^9, 3.7646832500751796`*^9, 3.764685482841358*^9, 
   3.764685765597578*^9, 3.7646860005290375`*^9, 3.7647044450408473`*^9, 
   3.7647054323894567`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"fb7d87f9-4389-4e8d-bd9c-d2c3544641d7"]
}, Open  ]],

Cell["Which means that the matrix:", "Text",
 CellChangeTimes->{{3.761578387041438*^9, 3.761578414257577*^9}, {
  3.761938893388032*^9, 
  3.761938896202179*^9}},ExpressionUUID->"c41f58fb-aecc-4b9a-b457-\
03fe31aca1b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "@", 
  RowBox[{"ex", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7615784231776114`*^9, 3.7615784437465506`*^9}, {
  3.761596346854115*^9, 3.761596349154128*^9}, {3.7619388758113136`*^9, 
  3.761938876347006*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"658a3dfc-6c04-47d6-8a79-e07e49905f6b"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1}, {0, 0, 0, 0, 0, 0, 1, 0, 0,
    0, 0, 0}, {1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 0, 1, 0, 0, 
   0, 0, 0, 0}}, {{0, 0}, {12, 4}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.761578444462325*^9, 3.761582582290409*^9, 3.7615827224693594`*^9, 
   3.7615832182564354`*^9, 3.7615834044401083`*^9, 3.7615954073891892`*^9, {
   3.7615963419085555`*^9, 3.7615963495888796`*^9}, 3.761603606233953*^9, 
   3.761603806640193*^9, 3.7616080000448203`*^9, 3.761608030048914*^9, 
   3.7616191646589565`*^9, 3.761641192441365*^9, 3.761669174349256*^9, 
   3.761930740348936*^9, {3.761938870153593*^9, 3.761938898479973*^9}, 
   3.761941175587759*^9, 3.7620178668557477`*^9, 3.7620181127705083`*^9, 
   3.76203315226781*^9, 3.7620941228440337`*^9, 3.7620949975580454`*^9, 
   3.7620951190660973`*^9, 3.762096341320975*^9, 3.7620972312623873`*^9, 
   3.7621031608460197`*^9, 3.7621850962012796`*^9, 3.7621951661136255`*^9, 
   3.7621954305673094`*^9, 3.762196115398653*^9, 3.7626328836435328`*^9, 
   3.7626337138922043`*^9, 3.7627030638005657`*^9, 3.762704551952857*^9, 
   3.7627057875156336`*^9, 3.7627058319855366`*^9, 3.762790965988725*^9, 
   3.7627934633430257`*^9, 3.76279459072048*^9, 3.762802470706026*^9, 
   3.7628035511153746`*^9, 3.7628064840667334`*^9, 3.7646832501081595`*^9, 
   3.7646854828943276`*^9, 3.764685765725506*^9, 3.764686000640975*^9, 
   3.764704445171771*^9, 3.764705432501401*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"40f58b58-2432-4341-b8d1-b892d755aecf"]
}, Open  ]],

Cell["Was generated by the string ", "Text",
 CellChangeTimes->{{3.761578449547076*^9, 
  3.7615784587697816`*^9}},ExpressionUUID->"bbfe2385-96fd-4068-972f-\
8bdd07c9743b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "@", 
  RowBox[{"toBinaryInt", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ex", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", "16"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761578621556733*^9, 3.761578659434972*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"8237f6de-421e-439d-a2e8-d08077a229b3"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1}}, {{0, 0}, {16, 
   1}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.76157857521449*^9, 3.761578659846736*^9}, 
   3.7615825824043417`*^9, 3.76158272253732*^9, 3.7615832183184*^9, 
   3.7615834045030737`*^9, 3.7615954074291663`*^9, 3.7615963560917625`*^9, 
   3.7616036063368945`*^9, 3.7616038067371407`*^9, 3.761608000095791*^9, 
   3.761608037869017*^9, 3.7616191647159247`*^9, 3.76164119249533*^9, 
   3.7616691767091956`*^9, 3.761930740416897*^9, 3.761938900533147*^9, 
   3.7619411831035614`*^9, 3.7620178669686685`*^9, 3.7620181128334713`*^9, 
   3.762033155592911*^9, 3.762094122918991*^9, 3.7620949976599865`*^9, 
   3.762095119163042*^9, 3.7620963414548965`*^9, 3.7620972314043074`*^9, 
   3.762103160920977*^9, 3.7621850962382603`*^9, 3.762195166189581*^9, 
   3.7621954306692514`*^9, 3.7621961154186425`*^9, 3.7626328837094965`*^9, 
   3.76263371397116*^9, 3.7627030638845167`*^9, 3.7627045520228167`*^9, 
   3.762705787654554*^9, 3.7627058320763283`*^9, 3.762790966043694*^9, 
   3.7627934634259796`*^9, 3.762794590803432*^9, 3.762802470742999*^9, 
   3.7628035511683474`*^9, 3.7628064841556816`*^9, 3.7646832501471386`*^9, 
   3.7646854829413004`*^9, 3.7646857658194513`*^9, 3.76468600068495*^9, 
   3.764704445208751*^9, 3.7647054325573683`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"6a532833-c794-4b7d-9a2f-0fe64926d586"]
}, Open  ]],

Cell["For a randomly selected automaton.", "Text",
 CellChangeTimes->{{3.761578667514724*^9, 
  3.761578677642477*^9}},ExpressionUUID->"3c73f526-faef-4787-af58-\
fbc0346183ae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving the Classification Problem With NN.", "Chapter",
 CellChangeTimes->{{3.7604708093525114`*^9, 
  3.7604708276444836`*^9}},ExpressionUUID->"185fce28-9713-4a40-b449-\
63d035343cf5"],

Cell["Let\[CloseCurlyQuote]s see if we can solve this problem with NN.", \
"Text",
 CellChangeTimes->{{3.7604708515409317`*^9, 
  3.760470898068557*^9}},ExpressionUUID->"824e4c34-421f-46d1-a0df-\
733980801e02"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TrainingSample2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "}"}], "\[Rule]", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", 
    "TrainingSample"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ValidationSample2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "}"}], "\[Rule]", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", 
    "ValidationSample"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestSample2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "}"}], "\[Rule]", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", 
    "TestSample"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.761596581945383*^9, 3.761596624449348*^9}, {
  3.7615967016950073`*^9, 3.7615967644120398`*^9}, {3.761600107353366*^9, 
  3.761600109962874*^9}, {3.761938921469048*^9, 3.761938926637786*^9}, {
  3.762033306423826*^9, 3.7620333090868015`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"6f5bed40-b6b1-4aa8-b619-229b04d690f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrainingSample2", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.76468431455803*^9, 3.7646843188175993`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"ba55610e-e13d-4481-9666-e019bf7d7d04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], "}"}], 
  "\[Rule]", "704"}]], "Output",
 CellChangeTimes->{{3.7646843194622297`*^9, 3.7646843694917407`*^9}, 
   3.7646854829882746`*^9, 3.7646857658594284`*^9, 3.7646860007219286`*^9, 
   3.764704445266718*^9, 3.7647054326133366`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"8db416dc-eb42-400e-83fb-2ea7c4b0a9fa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nn", " ", "=", "  ", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"12", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", "Ramp", ",", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "9"}], "}"}], "]"}], ",", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", " ", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"Length", "@", "class"}], "]"}], ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "class"}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4", ",", "12"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760470926350521*^9, 3.7604709747671027`*^9}, {
   3.76047263501694*^9, 3.760472636213848*^9}, {3.7604727142249546`*^9, 
   3.7604727714779787`*^9}, {3.760834639848781*^9, 3.760834655158662*^9}, {
   3.7608347035135946`*^9, 3.7608347361908417`*^9}, {3.7615964452108707`*^9, 
   3.761596495329751*^9}, {3.7615965345946503`*^9, 3.761596541546938*^9}, 
   3.7616001150289793`*^9, {3.7616692013511667`*^9, 3.7616692114863834`*^9}, {
   3.7619391506308365`*^9, 3.7619391508447156`*^9}, {3.761939323069563*^9, 
   3.761939327878456*^9}, {3.7620331719227147`*^9, 3.762033172271064*^9}, {
   3.7620332513139043`*^9, 3.762033290096603*^9}, {3.76209505966292*^9, 
   3.762095059972347*^9}, {3.7646841413775697`*^9, 3.76468414207411*^9}, {
   3.7646849482674003`*^9, 3.764684951169888*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"7568163f-1c42-427a-8476-9044b65f2e44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"nn", ",", "TrainingSample2", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "ValidationSample2"}], ",", " ", 
    RowBox[{"TargetDevice", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GPU\>\"", ",", "2"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7604709868302627`*^9, 3.76047153494525*^9, {3.7608347827508016`*^9, 
   3.7608347841325903`*^9}, {3.7616001250452566`*^9, 
   3.7616001289560213`*^9}, {3.7619391666159344`*^9, 
   3.7619391690209703`*^9}, {3.762033326409733*^9, 3.762033332134094*^9}, {
   3.7647027468093243`*^9, 3.764702748772396*^9}, {3.7647053536301126`*^9, 
   3.764705354132941*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"046c6b85-8f7c-490a-a473-54b63f410a41"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"4\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{12, 1, 3, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{12}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 12, "KernelSize" -> {3, 2}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {4, 12}, 
                    "$OutputSize" -> {2, 11}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 4, 12}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{12, 2, 11}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {12, 2, 11}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12, 2, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{12, 2, 11}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 9}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 12, "$InputSize" -> {2, 11}, 
                    "$OutputSize" -> {1, 3}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12, 2, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{12, 1, 3}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12, 1, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 36}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 36, "$InputDimensions" -> {36}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 4, 12}, NeuralNetworks`RealT]],
                     "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {704, 3572, 3067, 3184, 1939, 2386, 2896, 205,
                     828, 3935}, "InputDepth" -> 1, "Dimensions" -> 10, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", "\"4\"",
                     "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\"", 
                    "\"2\"", "\"11\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\"", 
                    "\"2\"", "\"11\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\"", 
                    "\"1\"", "\"3\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7646858335524607`*^9, 3.7646860648224773`*^9, 
  3.7647027919655275`*^9, 3.764704495628043*^9, 3.7647054835976715`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"d52fef66-2c58-42f6-997f-32dd66142573"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net", ",", " ", "TestSample2", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{3.7604711705075035`*^9, 3.7608348448926497`*^9, 
  3.7616001791839647`*^9, 3.7619391748836346`*^9, 3.7620333731218443`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"96f00197-c666-4cab-b9e3-e263a2de3675"],

Cell[BoxData["0.17415730337078653`"], "Output",
 CellChangeTimes->{
  3.7604711735587797`*^9, 3.760472301234289*^9, 3.760472441053287*^9, 
   3.7604728222459507`*^9, 3.760473049600894*^9, 3.760803418749093*^9, 
   3.7608348590026474`*^9, 3.7608351042422514`*^9, 3.760835177829836*^9, 
   3.760835480851264*^9, 3.7608355885301166`*^9, 3.760835880170971*^9, 
   3.7615756140240264`*^9, 3.76158263808508*^9, 3.7615827779709864`*^9, 
   3.7615832823516865`*^9, 3.7615834676121016`*^9, 3.7615954603608446`*^9, {
   3.7616001745975313`*^9, 3.7616001800940485`*^9}, 3.761603648640934*^9, 
   3.761603858585599*^9, 3.761608105498925*^9, 3.761619227363163*^9, 
   3.7616412609273605`*^9, 3.761669431826181*^9, 3.7619307922115383`*^9, 
   3.7619392099761715`*^9, 3.761941249142192*^9, 3.7620179390635805`*^9, 
   3.7620181791038747`*^9, {3.762033370446203*^9, 3.762033373862012*^9}, 
   3.7620941877300777`*^9, 3.762095005023281*^9, 3.76209517546015*^9, 
   3.762096403373083*^9, 3.762097288028131*^9, 3.7621032331912365`*^9, 
   3.762185308691519*^9, 3.762195223450446*^9, 3.762195504957443*^9, 
   3.76219614966778*^9, 3.762632942310499*^9, 3.7626337594329014`*^9, 
   3.762703132354632*^9, 3.7627046091961727`*^9, 3.7627058858125486`*^9, 
   3.7627910878199396`*^9, 3.7627935765869083`*^9, 3.7627946844588203`*^9, 
   3.7628025270004773`*^9, 3.7628036074175854`*^9, 3.7628065280481243`*^9, 
   3.7646833272749386`*^9, 3.7646844259025507`*^9, 3.76468507078648*^9, 
   3.7646858343112736`*^9, 3.764686065631238*^9, 3.7647044979141655`*^9, 
   3.7647054842408886`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"ec290824-5cee-4098-8a9f-746fabe77af5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net", ",", " ", "TrainingSample2", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.764684432928542*^9, 3.7646844379746647`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"5d268186-8cca-46b4-8931-b667b892a195"],

Cell[BoxData["0.5227272727272727`"], "Output",
 CellChangeTimes->{3.764684439049388*^9, 3.764685072102729*^9, 
  3.764685834416214*^9, 3.76468606573218*^9, 3.76470449949673*^9, 
  3.764705484386806*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"f94058cd-b485-44b7-ad8c-92d6d0d01afe"]
}, Open  ]],

Cell["Classification is barely above random choice.", "Text",
 CellChangeTimes->{{3.7604711847404604`*^9, 3.760471218956582*^9}, {
  3.7604733639421215`*^9, 
  3.760473376646283*^9}},ExpressionUUID->"9536722d-333f-427e-a2ac-\
cb973287f4cb"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s see if a ",
 StyleBox["more general ",
  FontSlant->"Italic"],
 "model performs better."
}], "Text",
 CellChangeTimes->{{3.760471273423746*^9, 3.760471295348811*^9}, {
  3.760471367012345*^9, 
  3.760471386556308*^9}},ExpressionUUID->"0a201a19-8bdb-4742-8ce7-\
57d82a740b67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn2", " ", "=", " ", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FlattenLayer", "[", "]"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "48", "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "]"}], ",", "Ramp", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", "\n", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", "class"}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "12"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQbRSesqCd5Y3jjX+Mi0H0Qz/9rSB6qfy8PSD63KoN
h0F0b3LwMRDtdKnxGoh+sHY3mGb4+OweiJZw/g6mBaN6XoLoXRdmgel/Sr8/
g+iQJzJfQfTT9UF/QTSXfiKYjvl5Kb4DSIvFCWWBaK9M9lYQvUl7NZiu2B7b
B6It8zLAdHT/lGsgulrB4x6ILrrNrG7J+sbxbWa8Boje8fzDjXVsbxxVUrNv
gmi+3YtXXADSR35KrATRGQ68cSHsbxyDwqeCacdn7bFNQLrsa0MCiC76llm3
AEjPcqwB0x61Hzf95ADqO1mxGUTz7PF+OIHnjeM0jvOPQDRXyMQXYP5811cg
GgA2+qW4
  "],
 CellLabel->"In[34]:=",ExpressionUUID->"bf013759-4993-4cc4-af80-b4b37776fd29"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {704, 3572, 3067, 3184, 1939, 2386, 2896, 205,
                     828, 3935}, "InputDepth" -> 1, "Dimensions" -> 10, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7604715270834045`*^9, {3.7604715865380154`*^9, 3.760471603726272*^9}, 
   3.7604717355039654`*^9, 3.7604718015919247`*^9, 3.7604718854819508`*^9, {
   3.7604719733270884`*^9, 3.760471977487918*^9}, 3.7604720445639277`*^9, 
   3.7604723013922987`*^9, 3.7604724411882954`*^9, {3.7604728789850397`*^9, 
   3.76047291320603*^9}, 3.760473049761921*^9, 3.7604731345120335`*^9, 
   3.760473204306856*^9, 3.7604736574425774`*^9, 3.760473786568961*^9, 
   3.7604738359115944`*^9, 3.760803418892011*^9, {3.760834865245405*^9, 
   3.7608348850625143`*^9}, 3.760835104383171*^9, 3.760835177938774*^9, 
   3.7608354809072304`*^9, 3.7608355886120696`*^9, 3.7608356803954973`*^9, 
   3.7608358803118906`*^9, 3.761575614141958*^9, 3.761582638220004*^9, 
   3.761582778079925*^9, 3.761583282436638*^9, 3.7615834677560196`*^9, 
   3.7615954604378014`*^9, {3.761600192671026*^9, 3.761600204179303*^9}, 
   3.7616036487618637`*^9, 3.7616038587045317`*^9, 3.7616081056258526`*^9, 
   3.7616192274950876`*^9, 3.761641261076284*^9, 3.761669449839883*^9, 
   3.761930792375444*^9, {3.761939210168124*^9, 3.761939228540306*^9}, 
   3.761941249245132*^9, 3.7620179394250283`*^9, 3.762018179226799*^9, {
   3.7620334003696156`*^9, 3.762033414518751*^9}, 3.7620941878799915`*^9, 
   3.7620950053211255`*^9, 3.7620951755680885`*^9, 3.7620964035469837`*^9, 
   3.762097288166052*^9, 3.762103233312167*^9, 3.7621853089723597`*^9, 
   3.7621952235633817`*^9, 3.762195505126347*^9, 3.7621961497827144`*^9, 
   3.76263294241444*^9, 3.7626337595368414`*^9, 3.7627031327034364`*^9, 
   3.7627046093330946`*^9, 3.7627058859474716`*^9, 3.7627910881317625`*^9, 
   3.7627935767048397`*^9, 3.762794684589745*^9, 3.762802077396249*^9, 
   3.762802527098422*^9, 3.7628036075195274`*^9, 3.7628065282080326`*^9, 
   3.7646833273868694`*^9, 3.7646858345341473`*^9, 3.764686065825127*^9, 
   3.764704499656652*^9, 3.764705484489746*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"04ca0dd4-8974-425e-8d40-ec448fd70b18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "03012019", "]"}], "\[IndentingNewLine]", 
 RowBox[{"net2", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"nn2", ",", "TrainingSample", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "ValidationSample"}], ",", " ", 
    RowBox[{"TargetDevice", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GPU\>\"", ",", "2"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.76047155379906*^9, 3.7604715578142767`*^9}, {
  3.76047159220131*^9, 3.760471593405126*^9}, {3.7604738322056065`*^9, 
  3.7604738331203876`*^9}, {3.7616002110974646`*^9, 3.7616002138302107`*^9}, {
  3.761939234869136*^9, 3.761939237556319*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f3560168-2f5a-43fe-ac23-f7116aa06cd1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{48}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {704, 3572, 3067, 3184, 1939, 2386, 2896, 205,
                     828, 3935}, "InputDepth" -> 1, "Dimensions" -> 10, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7604715629028926`*^9, 3.760471595177123*^9, 3.760471653667965*^9, 
   3.760471791976941*^9, 3.7604718575186114`*^9, 3.7604719491909003`*^9, 
   3.760472031593925*^9, 3.7604721053369837`*^9, 3.7604723589602256`*^9, 
   3.760472497980749*^9, {3.7604728823289585`*^9, 3.760472903201062*^9}, 
   3.760472944373765*^9, 3.7604731056998625`*^9, 3.760473191924944*^9, 
   3.7604732896705885`*^9, 3.7604737098538437`*^9, 3.760473835532812*^9, 
   3.760473909267163*^9, 3.760803470862363*^9, 3.7608349518028326`*^9, 
   3.760835117882815*^9, 3.7608352510109844`*^9, 3.7608354811421027`*^9, 
   3.760835644291541*^9, 3.760835720469542*^9, 3.7608357802625084`*^9, 
   3.7608359319278173`*^9, 3.761575649913034*^9, 3.7615826898041105`*^9, 
   3.761582829999715*^9, 3.761583338556262*^9, 3.7615835265388155`*^9, 
   3.761595514626501*^9, 3.7616002531192675`*^9, 3.761603697584223*^9, 
   3.761603910455985*^9, 3.761608157776335*^9, 3.761619283141291*^9, 
   3.7616412979467573`*^9, 3.761669507881695*^9, 3.761930834753687*^9, 
   3.7619392297661715`*^9, 3.761939280587309*^9, 3.7619413153738475`*^9, 
   3.7620179983367987`*^9, 3.76201824617352*^9, 3.762033462552889*^9, 
   3.7620942965341077`*^9, 3.7620950054870415`*^9, 3.7620952865578394`*^9, 
   3.7620964728915052`*^9, 3.7620974122827935`*^9, 3.7621033356584744`*^9, 
   3.762185369656934*^9, 3.7621952735837846`*^9, 3.762195568014906*^9, 
   3.7621961959030094`*^9, 3.7626329793056574`*^9, 3.762633807780884*^9, 
   3.7627032017942066`*^9, 3.762704663708845*^9, 3.7627059563705482`*^9, 
   3.7627911509789877`*^9, 3.76279367425953*^9, 3.762794783122899*^9, 
   3.7628021256686916`*^9, 3.762802589554383*^9, 3.7628036629251814`*^9, 
   3.7628065773276424`*^9, 3.764683439071896*^9, 3.764685949973524*^9, 
   3.764686192498975*^9, 3.7647045502567024`*^9, 3.7647055384219465`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"d84ed597-7340-4e2a-a597-8d1dd2d2b4b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net2", ",", " ", "TestSample", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.760471662893244*^9, 3.760471669454029*^9}, 
   3.7616002395328064`*^9, 3.7619392984060993`*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"479442f9-a63a-4d8c-bd28-5e7b1b1546e1"],

Cell[BoxData["0.601123595505618`"], "Output",
 CellChangeTimes->{
  3.7604716700801764`*^9, 3.760471794418082*^9, 3.7604718693813534`*^9, 
   3.7604719493559494`*^9, 3.7604720317589283`*^9, {3.760472105549861*^9, 
   3.760472108329282*^9}, 3.7604723591642337`*^9, 3.7604724981401567`*^9, 
   3.76047294654387*^9, 3.760473105905859*^9, 3.760473197101988*^9, 
   3.760473289877503*^9, 3.7604737100807133`*^9, 3.7604738357306976`*^9, 
   3.7608034710872335`*^9, 3.7608349556906304`*^9, 3.7608351180487165`*^9, 
   3.760835251177888*^9, 3.760835481209066*^9, 3.760835644572379*^9, 
   3.7608357828925037`*^9, 3.76083593218567*^9, 3.7615756501009245`*^9, 
   3.7615826900169873`*^9, 3.7615828302696104`*^9, 3.7615833388400993`*^9, 
   3.7615835268052483`*^9, 3.7615955148559017`*^9, 3.7616002532591853`*^9, 
   3.761603697876054*^9, 3.761603910782798*^9, 3.761608158003205*^9, 
   3.7616192834920907`*^9, 3.7616412980706844`*^9, 3.7616696402650633`*^9, 
   3.7619308349535723`*^9, {3.7619392809501038`*^9, 3.761939299054509*^9}, 
   3.7619413156566916`*^9, 3.7620179985246906`*^9, 3.762018246464354*^9, 
   3.7620334722285604`*^9, 3.762094296830225*^9, 3.7620950060198264`*^9, 
   3.7620952868966866`*^9, 3.762096473196302*^9, 3.762097412627195*^9, 
   3.7621033359403114`*^9, 3.762185369837829*^9, 3.762195273793664*^9, 
   3.762195568266762*^9, 3.7621961961458693`*^9, 3.7626329795155373`*^9, 
   3.762633808054722*^9, 3.7627032020340676`*^9, 3.76270466397869*^9, 
   3.762705956634396*^9, 3.7627911511578836`*^9, 3.7627936745403795`*^9, 
   3.7627947834057355`*^9, 3.762802126313141*^9, 3.762802589806239*^9, 
   3.7628036631526165`*^9, 3.762806577589491*^9, 3.7646834392208104`*^9, 
   3.7646859502109275`*^9, 3.764686192734757*^9, 3.764704550506565*^9, 
   3.7647055386718025`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"d1670529-738f-4df4-b88f-28cab3a3af37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net2", ",", " ", "TrainingSample", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7646852709694214`*^9, {3.7646859587528267`*^9, 3.7646859589697046`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"2b2faf8b-6861-4d7c-939f-e5a64d94b2f2"],

Cell[BoxData["0.9886363636363636`"], "Output",
 CellChangeTimes->{3.7646859506944313`*^9, 3.764686192830702*^9, 
  3.7647045506185017`*^9, 3.764705538776743*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"68fc90ff-08c3-46c6-9665-f70987914d4d"]
}, Open  ]],

Cell[TextData[{
 "It indeed does much better, but 60% is still a ",
 StyleBox["low ",
  FontSlant->"Italic"],
 "value. I\[CloseCurlyQuote]m actually surprised that the network did this \
good, though."
}], "Text",
 CellChangeTimes->{{3.760472120445413*^9, 3.7604721295562305`*^9}, {
   3.7604732584052944`*^9, 3.760473266213848*^9}, {3.7604732977256594`*^9, 
   3.7604733138627625`*^9}, {3.7608357888123302`*^9, 3.760835789042952*^9}, {
   3.7608359384134293`*^9, 3.760835951747738*^9}, {3.761600265892239*^9, 
   3.7616002661800756`*^9}, {3.7616696466044397`*^9, 
   3.7616696526919594`*^9}, {3.761939306676448*^9, 3.7619393072601147`*^9}, {
   3.762033480789652*^9, 3.7620334824205976`*^9}, {3.7620347800933304`*^9, 
   3.7620347804371343`*^9}, 3.762095465386125*^9, {3.7622038112124615`*^9, 
   3.762203813884159*^9}, {3.762802137820252*^9, 3.762802138724327*^9}, {
   3.762803013732958*^9, 
   3.762803019660828*^9}},ExpressionUUID->"b272a8aa-15a4-45ea-a6b4-\
3f860f1c622f"],

Cell["Let\[CloseCurlyQuote]s see if a deeper model performs better.", "Text",
 CellChangeTimes->{{3.7622040387563086`*^9, 
  3.7622040750361156`*^9}},ExpressionUUID->"82cc9e35-e722-42c5-b27f-\
6d097c11e6b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn3", " ", "=", " ", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FlattenLayer", "[", "]"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "48", "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "48", "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "]"}], ",", "Ramp", ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", "\n", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", "class"}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "12"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7622040768940563`*^9, 3.7622040957412996`*^9}, {
  3.7622041649518023`*^9, 3.7622041652446365`*^9}, {3.7622043561996136`*^9, 
  3.7622043575499835`*^9}, {3.76220441389789*^9, 3.762204421446248*^9}, {
  3.7622044745177774`*^9, 3.7622044778852987`*^9}, {3.762802145887171*^9, 
  3.7628021513102517`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"aa2d1b7a-591b-4a0c-b459-aac580c61776"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"]
                     -> NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {704, 3572, 3067, 3184, 1939, 2386, 2896, 205,
                     828, 3935}, "InputDepth" -> 1, "Dimensions" -> 10, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.762204099575111*^9, 3.762204166670822*^9, 
  3.762204422452363*^9, 3.7626329796234765`*^9, 3.7626338082116327`*^9, 
  3.762703202181983*^9, 3.7627046641525927`*^9, 3.7627059567863083`*^9, 
  3.7627911513028007`*^9, 3.762793674673303*^9, 3.762794783542657*^9, 
  3.7628021542002068`*^9, 3.762802589952155*^9, 3.7628036632535586`*^9, 
  3.762806577733408*^9, 3.764683439328749*^9, 3.7646859507963743`*^9, 
  3.764686192946636*^9, 3.764704550747428*^9, 3.764705538920661*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"6fd9f6fc-4d21-4b2f-a209-24748fcd73b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net3", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"nn3", ",", "TrainingSample", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "ValidationSample"}], ",", " ", 
    RowBox[{"TargetDevice", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GPU\>\"", ",", "2"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.762204111573264*^9, 3.76220411664437*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"8567b610-7a35-49ca-933f-5109388488e7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{48}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{48}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {704, 3572, 3067, 3184, 1939, 2386, 2896, 205,
                     828, 3935}, "InputDepth" -> 1, "Dimensions" -> 10, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7622041184093647`*^9, 3.762204200583469*^9, 
  3.7622044599919376`*^9, 3.762633028300167*^9, 3.7626338577893734`*^9, 
  3.7627032691622734`*^9, 3.7627047152102404`*^9, 3.7627060478978214`*^9, 
  3.762791235981615*^9, 3.7627937595714693`*^9, 3.762794868893155*^9, 
  3.7628022034179163`*^9, 3.7628026474757977`*^9, 3.762803722603567*^9, 
  3.7628066240986147`*^9, 3.7646835532627263`*^9, 3.764685969097187*^9, 
  3.7646862994699755`*^9, 3.764704618121436*^9, 3.7647055919757605`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"be5f9544-bb52-4bfb-a832-4ec1b7be662f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net3", ",", " ", "TestSample", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7622042061642847`*^9, 3.7622042089167137`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"91205fac-5b8c-41b7-94dd-581a85001996"],

Cell[BoxData["0.5786516853932584`"], "Output",
 CellChangeTimes->{3.7622042108016367`*^9, 3.7622044622626677`*^9, 
  3.7626330284830627`*^9, 3.7626338580402293`*^9, 3.7627032693971386`*^9, 
  3.7627047154690905`*^9, 3.7627060481496754`*^9, 3.762791236151516*^9, 
  3.762793759764364*^9, 3.7627948690640554`*^9, 3.7628022035778227`*^9, 
  3.762802647629708*^9, 3.762803722755479*^9, 3.7628066242665167`*^9, 
  3.76468355346361*^9, 3.764686299632245*^9, 3.764704618270349*^9, 
  3.764705592132676*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"a2b238f4-2c0a-4fd1-9f8c-a177462d9ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net3", ",", " ", "TrainingSample", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.764685255434286*^9, 3.764685260971123*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"563bf8fc-8f98-45cc-a17c-f1f69da7a800"],

Cell[BoxData["0.9602272727272727`"], "Output",
 CellChangeTimes->{3.764686299726191*^9, 3.764704618363296*^9, 
  3.7647055922576046`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"6c542516-f93f-43a1-b804-6a082ab05e5c"]
}, Open  ]],

Cell["\<\
It performed worse. So, what if we dramatically increase the depth of the \
network and give it ample time to optimize it?\
\>", "Text",
 CellChangeTimes->{{3.762204226637952*^9, 3.7622042647249255`*^9}, {
   3.762204470364369*^9, 3.762204470756145*^9}, {3.762204618124343*^9, 
   3.762204626572047*^9}, 3.7622108054547386`*^9, {3.7628030364051433`*^9, 
   3.7628030373406086`*^9}},ExpressionUUID->"78b4d022-cf3a-423c-8e5a-\
596c308a005b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn4", " ", "=", " ", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FlattenLayer", "[", "]"}], ",", " ", 
      RowBox[{"LinearLayer", "[", "48", "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "48", "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "48", "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "48", "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "48", "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "48", "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "]"}], ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", "\n", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", "class"}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "12"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7622042713856735`*^9, 3.7622043485410576`*^9}, {
  3.7622044876048546`*^9, 3.7622045014450274`*^9}, {3.762802212682478*^9, 
  3.762802228172695*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"7d0f15f8-8faf-4697-bf31-6c4a5a6c8478"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["21", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "13" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "14" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "15" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "16" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "17" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "18" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "19" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "20" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 48}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "21" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {704, 3572, 3067, 3184, 1939, 2386, 2896, 205,
                     828, 3935}, "InputDepth" -> 1, "Dimensions" -> 10, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"20\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7622045027489095`*^9, 3.7626330286509657`*^9, 
  3.7626338582080083`*^9, 3.762703269564066*^9, 3.762704715673973*^9, 
  3.76270604833657*^9, 3.762791236359397*^9, 3.7627937599620943`*^9, 
  3.7627948692619424`*^9, 3.7628026478136024`*^9, 3.7628037229373746`*^9, 
  3.7628066244214287`*^9, 3.764683553655501*^9, 3.764686299923079*^9, 
  3.76470461853322*^9, 3.7647055924325075`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"63c051ba-80fe-40da-909f-7df85c5838a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net4", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"nn4", ",", "TrainingSample", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "ValidationSample"}], ",", " ", 
    RowBox[{"TargetDevice", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GPU\>\"", ",", "2"}], "}"}]}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "10000"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.762204515933529*^9, 3.762204524175825*^9}, {
  3.7622045608149147`*^9, 3.7622045924768476`*^9}, {3.7622046908622246`*^9, 
  3.7622046922443438`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"cf679df0-ab00-43f0-9abb-bc26fd845a82"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["21", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{48}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{48}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{48}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{48}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "13" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "14" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{48}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "15" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "16" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "17" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{48}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {48}, "$OutputSize" -> 48, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "18" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "19" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "20" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 48}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 48, "$InputDimensions" -> {48}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "21" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {704, 3572, 3067, 3184, 1939, 2386, 2896, 205,
                     828, 3935}, "InputDepth" -> 1, "Dimensions" -> 10, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"20\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7622045548453207`*^9, 3.762204595779961*^9, 
  3.762204695017562*^9, 3.762204900755146*^9, 3.762633238623377*^9, 
  3.7626340603195457`*^9, 3.762703656136299*^9, 3.7627055081865916`*^9, 
  3.7627064397442713`*^9, 3.762791629716757*^9, 3.762794144404046*^9, 
  3.7627952317668304`*^9, 3.762802871032295*^9, 3.7628039706100483`*^9, 
  3.7628068406533923`*^9, 3.764683980294414*^9, 3.764686696424198*^9, 
  3.764704893460586*^9, 3.764705787970975*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"a2effc5c-9eb8-478b-afcf-616dab5cd8f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net4", ",", " ", "TestSample", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.762204537955961*^9, 3.762204541525922*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"7aade69d-ec5f-403a-b23c-971452e2baf7"],

Cell[BoxData["0.19101123595505617`"], "Output",
 CellChangeTimes->{3.7622045550202208`*^9, 3.7622046951864643`*^9, 
  3.762204900927966*^9, 3.7626332388022747`*^9, 3.7626340606283693`*^9, 
  3.762703656386154*^9, 3.762705508529991*^9, 3.7627064400111237`*^9, 
  3.762791629937629*^9, 3.76279414461098*^9, 3.7627952319487257`*^9, 
  3.7628028712281833`*^9, 3.762803970807935*^9, 3.7628068408343086`*^9, 
  3.7646839805332766`*^9, 3.764686696635076*^9, 3.764704893671464*^9, 
  3.7647057881878157`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"c0eb8de8-b878-4290-bdcb-ddc956741eaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net4", ",", " ", "TrainingSample", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7622049951918173`*^9, 3.7622050028418083`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"fc81d96e-2c76-400e-9326-81edcae54e98"],

Cell[BoxData["0.2556818181818182`"], "Output",
 CellChangeTimes->{3.762205003512106*^9, 3.762633238903217*^9, 
  3.76263406076629*^9, 3.762703656510084*^9, 3.762705508701893*^9, 
  3.762706440151043*^9, 3.7627916300305758`*^9, 3.762794144714921*^9, 
  3.762795232058663*^9, 3.762802871324128*^9, 3.7628039709228697`*^9, 
  3.7628068409252563`*^9, 3.764683980636218*^9, 3.764686696736018*^9, 
  3.764704893782401*^9, 3.764705788323738*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"5a06cac5-3f66-41b8-aee0-b35bf3f51ed4"]
}, Open  ]],

Cell["Even with dropout layers, we found a plateau.", "Text",
 CellChangeTimes->{{3.7622047035641823`*^9, 3.7622047222283087`*^9}, {
  3.762204981838696*^9, 3.762204982085554*^9}, {3.7628030516270275`*^9, 
  3.762803055164772*^9}, {3.762803303772791*^9, 
  3.762803316604615*^9}},ExpressionUUID->"4ba9015c-e5f7-42a1-9932-\
d2e718871d06"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving the Problem With an Algorithmic Classifier ", "Chapter",
 CellChangeTimes->{{3.7615758007078514`*^9, 3.761575808663387*^9}, {
  3.7615758636640177`*^9, 
  3.761575872391656*^9}},ExpressionUUID->"05d2e5cf-1ec6-45de-95f1-\
e3c492411593"],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["Tools.",
  FontSlant->"Italic"]
}], "Subchapter",
 CellChangeTimes->{{3.761580674085075*^9, 
  3.7615806822918863`*^9}},ExpressionUUID->"9ad25ff9-3b52-477b-9db8-\
8916466eae33"],

Cell[CellGroupData[{

Cell["Relationships :", "Subsubsection",
 CellChangeTimes->{{3.76221085962665*^9, 
  3.762210862233097*^9}},ExpressionUUID->"98c33cfe-5504-4a66-946e-\
4cc01426da38"],

Cell[TextData[{
 "We will say that a ",
 StyleBox["relationship s1->s2",
  FontWeight->"Bold"],
 " ",
 StyleBox["exists for the automaton A ",
  FontWeight->"Bold"],
 "if the string s2 is an output of the automaton A with input s1."
}], "Text",
 CellChangeTimes->{
  3.7622108973549643`*^9},ExpressionUUID->"518bc4dd-542b-446e-a67a-\
32efd912514f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Conditional ",
  FontSlant->"Italic"],
 "ECA CTM."
}], "Section",
 CellChangeTimes->{{3.7615766536315727`*^9, 3.7615766740245123`*^9}, {
  3.761580663891842*^9, 
  3.7615806651241384`*^9}},ExpressionUUID->"d22f02e5-b828-40f4-a74d-\
1ef35c286df4"],

Cell[TextData[{
 "Given two strings ",
 StyleBox["s1 ",
  FontWeight->"Bold"],
 "and ",
 StyleBox["s2",
  FontWeight->"Bold"],
 ", K(s2|s1) is defined as the amount of information required to ",
 StyleBox["construct ",
  FontSlant->"Italic"],
 "or ",
 StyleBox["define ",
  FontSlant->"Italic"],
 StyleBox["s2 ",
  FontWeight->"Bold"],
 "from ",
 StyleBox["s1",
  FontWeight->"Bold"],
 ". In formal terms, K(s2|s1) is the smallest program that that produces ",
 StyleBox["s2 ",
  FontWeight->"Bold"],
 "with ",
 StyleBox["s1 ",
  FontWeight->"Bold"],
 "as input. Following the coding theorem method, in algorithmic probability \
theory this value is related to the ",
 StyleBox["probability that a randomly chosen Turing Machine ",
  FontWeight->"Bold"],
 "will produce ",
 StyleBox["s2 ",
  FontWeight->"Bold"],
 "given ",
 StyleBox["s1 ",
  FontWeight->"Bold"],
 "as an input. "
}], "Text",
 CellChangeTimes->{{3.762210997807053*^9, 3.7622111093826723`*^9}, {
  3.762213334594411*^9, 3.762213390433546*^9}, {3.7622134334912357`*^9, 
  3.7622136790421996`*^9}},ExpressionUUID->"fe75cbd9-33fc-4a69-a9da-\
f2cc61b0768c"],

Cell["\<\
Therefore, we will do the following: We will compute a database of all \
12-bits strings and their 12x4 outputs for all cellular automatons, \
partitioned in pairs of 4 and 4x4, 6 and 6x4, and 12 and 12x4. This is done \
to avoid frontier issues that are present in the way Mathematica computes CA.\
\>", "Text",
 CellChangeTimes->{{3.7622136888026304`*^9, 
  3.762213867074894*^9}},ExpressionUUID->"b01d8c44-c8cb-4c2e-b342-\
c9f34dbb91ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.761924110716772*^9, 3.7619241185181637`*^9}, {
  3.761924225434791*^9, 3.7619242269660625`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e9627754-aa0b-4d0c-b243-a1fe999aab2f"],

Cell[TextData[{
 "The following object contains the precomputed relationships of all pairs of \
6-bit strings within all ECA initialized with 16 bits. Then, we will count \
how many times each pair is ",
 StyleBox["associated",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.7619244810450897`*^9, 3.761924573285391*^9}, {
  3.761924857509863*^9, 3.761924874877823*^9}, {3.762018752712999*^9, 
  3.7620187568414383`*^9}, {3.762213882195265*^9, 
  3.762213919194152*^9}},ExpressionUUID->"f2de6c5b-9056-4ba4-82a3-\
f78158d67fde"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dist", " ", "=", 
   RowBox[{"<<", " ", "\"\<dataB6-4v2.m\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7620158751863785`*^9, 3.762015909421405*^9}, 
   3.7620352509715753`*^9, {3.762094569358532*^9, 3.762094569506036*^9}, {
   3.762632869495631*^9, 3.762632869917389*^9}, {3.7626334280463743`*^9, 
   3.762633428260251*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"3102c833-01de-45fb-821e-d564dff4fc76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dist"}]}]], "Input",
 CellChangeTimes->{{3.7619267355113273`*^9, 3.7619267472964706`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"ef3e63d7-dd6e-4c46-99be-21d8b50434b9"],

Cell[BoxData["90534"], "Output",
 CellChangeTimes->{3.7619267478631463`*^9, 3.761930835303381*^9, 
  3.7619317357576632`*^9, 3.761939503169582*^9, 3.7619395399221015`*^9, 
  3.7619413175518847`*^9, 3.762015923484111*^9, 3.76201799885419*^9, 
  3.762018255549159*^9, 3.762035258188816*^9, 3.7620942987746*^9, 
  3.762095008128956*^9, 3.762095289032*^9, 3.762096475192252*^9, 
  3.762097415107691*^9, 3.762103337873184*^9, 3.762185372239128*^9, 
  3.7621952758401985`*^9, 3.7621955709244256`*^9, 3.7621961981556616`*^9, 
  3.762633255234205*^9, 3.762633542663248*^9, 3.7626340787072525`*^9, 
  3.762703675322776*^9, 3.7627055265417213`*^9, 3.762706457732709*^9, 
  3.762791647690397*^9, 3.762794162177412*^9, 3.762795249842496*^9, 
  3.7628028890051775`*^9, 3.7628039881539674`*^9, 3.762806858791581*^9, 
  3.764683999570854*^9, 3.7646867143542533`*^9, 3.7647049114521713`*^9, 
  3.7647058060236535`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"df16cc08-8ec2-45a4-abb5-33b6d39b421c"]
}, Open  ]],

Cell["The data has the form:", "Text",
 CellChangeTimes->{{3.7620940029511223`*^9, 
  3.7620940423947506`*^9}},ExpressionUUID->"4dbe268f-de4e-4978-88d4-\
8f0a79ec196b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Keys", "@", "dist"}], ")"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Values", "@", "dist"}], ")"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7620939925150013`*^9, 3.7620939959480696`*^9}, {
  3.7620940455627236`*^9, 3.762094083563529*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b4e18a5f-75c6-4d81-87f5-13b62108e15b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
       "}"}]}], "}"}]}], "}"}], "\[Rule]", "1232"}]], "Output",
 CellChangeTimes->{3.7620940907988577`*^9, 3.7620942988315673`*^9, 
  3.7620945762158637`*^9, 3.7620950082059126`*^9, 3.7620952890949645`*^9, 
  3.7620964752702074`*^9, 3.7620974151746535`*^9, 3.7621033379351482`*^9, 
  3.762185372292098*^9, 3.7621952758801823`*^9, 3.762195570988389*^9, 
  3.762196198205632*^9, 3.7626332553611355`*^9, 3.762633544797378*^9, 
  3.7626340787673435`*^9, 3.7627036753857408`*^9, 3.7627055265946884`*^9, 
  3.762706457799671*^9, 3.762791647745364*^9, 3.762794162233381*^9, 
  3.7627952499034605`*^9, 3.762802889047152*^9, 3.7628039882109337`*^9, 
  3.7628068588405547`*^9, 3.7646839996118317`*^9, 3.764686714392233*^9, 
  3.764704911517131*^9, 3.764705806063631*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"5dbed850-e55d-459e-95f8-6075a027ad51"]
}, Open  ]],

Cell["\<\
The following function will be a convenient way to consult the previous \
database. \
\>", "Text",
 CellChangeTimes->{{3.761925827965536*^9, 3.7619258337022667`*^9}, {
  3.761926629206667*^9, 
  3.7619266540091405`*^9}},ExpressionUUID->"31b91aa7-24d4-4b52-9df7-\
06d32bd045d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fRel", "[", 
   RowBox[{"s1_", ",", "s2_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", " ", "=", " ", 
      RowBox[{"dist", "[", 
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2"}], "}"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MissingQ", "@", "out"}], ",", "\[IndentingNewLine]", "0", ",", 
      "\[IndentingNewLine]", "out"}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7619266609531193`*^9, 3.761926685626501*^9}, {
  3.761926719686329*^9, 3.761926769010439*^9}, {3.761927089845617*^9, 
  3.7619271210385666`*^9}, {3.7619271879274855`*^9, 3.7619272077293634`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"f98bd51d-4010-4ab0-b15f-9b0f98e8e5c7"],

Cell[CellGroupData[{

Cell["Algorithmic Probability", "Subsection",
 CellChangeTimes->{{3.7615811946105537`*^9, 
  3.7615812028205113`*^9}},ExpressionUUID->"e7f3b51f-8746-4d86-9f82-\
da7a9642e3c1"],

Cell[TextData[{
 "We will define the algorithmic probability of two strings as the \
probability that, for a ",
 StyleBox["randomly chosen ",
  FontSlant->"Italic"],
 "ECA, an string containing s1 will output and string containing s2 ",
 StyleBox["at the same position",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.761581212644429*^9, 3.761581273004668*^9}, {
  3.761581740717377*^9, 3.761581752036764*^9}, {3.7619248989906406`*^9, 
  3.761924959510916*^9}},ExpressionUUID->"775a5f4c-3655-43c9-8f17-\
e80ebec1f92d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Values", "@", "dist"}]}]], "Input",
 CellChangeTimes->{{3.761939578972493*^9, 3.7619395865642056`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"8e11c054-c6eb-4c87-b640-1fef669b5f0b"],

Cell[BoxData["90534"], "Output",
 CellChangeTimes->{3.7619395873534365`*^9, 3.7619413176456985`*^9, 
  3.7620159369281707`*^9, 3.76201799895813*^9, 3.7620182557010736`*^9, 
  3.7620352639125032`*^9, 3.762094298913531*^9, 3.7620950082898645`*^9, 
  3.762095289186911*^9, 3.7620964754341125`*^9, 3.762097415285591*^9, 
  3.762103338080065*^9, 3.762185372383047*^9, 3.762195275939148*^9, 
  3.762195571050358*^9, 3.7621961982625985`*^9, 3.7626332555450983`*^9, 
  3.7626335512331457`*^9, 3.762634078922262*^9, 3.7627036755476475`*^9, 
  3.7627055266436605`*^9, 3.762706457911607*^9, 3.7627916478303165`*^9, 
  3.7627941622863503`*^9, 3.762795249982418*^9, 3.7628028890931263`*^9, 
  3.7628039882788944`*^9, 3.7628068588895264`*^9, 3.7646839996797915`*^9, 
  3.7646867144531965`*^9, 3.7647049115780973`*^9, 3.7647058061146026`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"d749f0a3-2f61-4598-8927-bb0cadb0caa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"total", " ", "=", " ", 
  RowBox[{"Total", "@", 
   RowBox[{"Values", "@", "dist"}]}]}]], "Input",
 CellChangeTimes->{{3.7619257817028275`*^9, 3.7619258027821755`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"7e32bb5a-4fe8-4208-aa78-d2cd89390d26"],

Cell[BoxData["528384"], "Output",
 CellChangeTimes->{3.7620182558150086`*^9, 3.7620352668125935`*^9, 
  3.7620942989663534`*^9, 3.762095008342249*^9, 3.7620952892488756`*^9, 
  3.762096475508072*^9, 3.7620974153565483`*^9, 3.7621033381190453`*^9, 
  3.7621853724460106`*^9, 3.762195275972129*^9, 3.762195571132311*^9, 
  3.762196198317568*^9, 3.762633255614056*^9, 3.762633552958397*^9, 
  3.7626340789852247`*^9, 3.7627036756116123`*^9, 3.7627055266696463`*^9, 
  3.762706457983564*^9, 3.7627916478942795`*^9, 3.7627941623173323`*^9, 
  3.762795250019395*^9, 3.762802889117113*^9, 3.7628039883278685`*^9, 
  3.762806858913513*^9, 3.764683999719767*^9, 3.764686714485179*^9, 
  3.764704911620072*^9, 3.7647058061465826`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"14f1f76c-faad-453e-ae16-df6b798eacb4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "[", 
   RowBox[{"s1_", ",", "s2_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fRel", "[", 
    RowBox[{"s1", ",", "s2"}], "]"}], "/", "total"}]}]], "Input",
 CellChangeTimes->{{3.7615812924443913`*^9, 3.7615813522695813`*^9}, {
   3.761581681908111*^9, 3.7615816826216784`*^9}, {3.7615818365670137`*^9, 
   3.761581927871081*^9}, {3.7615820040851946`*^9, 3.7615820072084217`*^9}, {
   3.761582052229056*^9, 3.7615820676688147`*^9}, {3.761582103702078*^9, 
   3.7615822307973423`*^9}, 3.761583916090781*^9, {3.761585033151269*^9, 
   3.7615850460786424`*^9}, 3.761585106207693*^9, {3.7619272788785963`*^9, 
   3.761927294287334*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"28314e95-58db-4a2f-ab06-18940a4a8301"],

Cell["For example:", "Text",
 CellChangeTimes->{{3.7615822373030777`*^9, 
  3.761582240284416*^9}},ExpressionUUID->"23ff0a64-0c7b-4c37-b395-\
021db6a9bab2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CellularAutomaton", "[", 
  RowBox[{"110", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", "4"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7619398178845553`*^9, 3.7619398377167225`*^9}, {
  3.761939903810388*^9, 3.7619399177073717`*^9}, {3.7620174916611214`*^9, 
  3.762017505075248*^9}, {3.762035277526767*^9, 3.762035277708666*^9}, {
  3.762094599143224*^9, 3.7620945993471074`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"ab775d2e-9e63-48ca-944d-7c8fa1de41f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7619398384672956`*^9, {3.7619399111016865`*^9, 3.7619399182976694`*^9}, 
   3.761941317725658*^9, 3.7620175057875533`*^9, 3.7620179990640697`*^9, 
   3.762018255871975*^9, {3.762035270477399*^9, 3.762035278371282*^9}, 
   3.762094299020323*^9, 3.7620946011018953`*^9, 3.762095008433196*^9, 
   3.762095289305843*^9, 3.762096475592024*^9, 3.762097415435504*^9, 
   3.7621033381860056`*^9, 3.762185372490985*^9, 3.7621952760301337`*^9, 
   3.7621955711904764`*^9, 3.7621961983705387`*^9, 3.7626332556890163`*^9, 
   3.7626335632741575`*^9, 3.762634079114227*^9, 3.762703675747533*^9, 
   3.762705526692631*^9, 3.762706458106495*^9, 3.7627916479412527`*^9, 
   3.762794162378297*^9, 3.7627952500773616`*^9, 3.7628028891560907`*^9, 
   3.7628039883788395`*^9, 3.7628068589504905`*^9, 3.7646839997907286`*^9, 
   3.7646867145241575`*^9, 3.764704911679039*^9, 3.7647058062025537`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"b8e244c6-7ce8-4841-b9f9-fc0f1e90e740"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7615819053658886`*^9, 3.761581934582077*^9}, {
  3.7619273034905195`*^9, 3.761927304209685*^9}, {3.761939845776537*^9, 
  3.7619398840056925`*^9}, {3.7619399273369937`*^9, 3.7619399397645245`*^9}, {
  3.7620175174923687`*^9, 3.762017527008045*^9}, {3.7620352901776266`*^9, 
  3.762035290570402*^9}, {3.7620353207653904`*^9, 3.762035336908408*^9}, {
  3.762094618929637*^9, 3.762094636724639*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"7a5b22d6-cad0-492a-88c4-028cef1fb818"],

Cell[BoxData[
 FractionBox["3", "176128"]], "Output",
 CellChangeTimes->{
  3.761581935022851*^9, 3.7615820088751383`*^9, {3.7615821114230285`*^9, 
   3.7615821244686937`*^9}, {3.7615821677420635`*^9, 
   3.7615821851069307`*^9}, {3.7615822156771116`*^9, 3.761582244970482*^9}, 
   3.761582702401656*^9, 3.761582843318118*^9, 3.7615829458420715`*^9, 
   3.7615833397801676`*^9, 3.761583527739731*^9, 3.7615850580936165`*^9, 
   3.761595515726246*^9, 3.761603698746314*^9, 3.761603911738251*^9, 
   3.76160815874678*^9, 3.7616192842806406`*^9, 3.7616412987812786`*^9, {
   3.761927300189507*^9, 3.761927304890293*^9}, 3.7619308354263153`*^9, 
   3.7619317677592278`*^9, 3.7619395976744204`*^9, {3.761939865236576*^9, 
   3.761939884680301*^9}, 3.761939940400705*^9, 3.761941317753642*^9, 
   3.762017529598441*^9, 3.7620179991070457`*^9, 3.7620182559029584`*^9, 
   3.762035273227666*^9, 3.7620353381333575`*^9, 3.762094299051306*^9, {
   3.7620946085727615`*^9, 3.762094637946508*^9}, 3.7620950084831686`*^9, 
   3.7620952893408217`*^9, 3.7620964756379957`*^9, 3.7620974154804783`*^9, 
   3.7621033382229834`*^9, 3.762185372512972*^9, 3.7621952760641155`*^9, 
   3.762195571222458*^9, 3.7621961983955245`*^9, 3.762633255730997*^9, 
   3.7626335654621*^9, 3.762634079156206*^9, 3.762703675812498*^9, 
   3.762705526724615*^9, 3.7627064581634626`*^9, 3.7627916479712358`*^9, 
   3.7627941624092784`*^9, 3.7627952501093435`*^9, 3.762802889181077*^9, 
   3.7628039884072313`*^9, 3.7628068589694796`*^9, 3.7646839998217106`*^9, 
   3.7646867145481434`*^9, 3.764704911708023*^9, 3.764705806240529*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"c7222dac-fb84-4854-a8d2-c7e8d8118999"]
}, Open  ]],

Cell["After changing a single bit:", "Text",
 CellChangeTimes->{{3.7620946883329477`*^9, 
  3.762094703353677*^9}},ExpressionUUID->"1fbef7b2-3058-401f-a9f8-\
454d6ea7298f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761928438967416*^9, 3.761928451577096*^9}, 
   3.7620946468378053`*^9, {3.7620946813990808`*^9, 3.762094681596967*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"18b5c3f9-2c98-4305-a4d7-4cf381ae88ef"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.761928452124325*^9, 3.7619308354532995`*^9, 3.761931769483253*^9, 
   3.7619399458075123`*^9, 3.7619413177862473`*^9, 3.762017534444042*^9, 
   3.7620179991390266`*^9, 3.762018255935939*^9, 3.762035341958495*^9, 
   3.762094299087285*^9, {3.762094675138248*^9, 3.762094682245596*^9}, 
   3.7620950085261436`*^9, 3.7620952893748055`*^9, 3.762096475685969*^9, 
   3.762097415526452*^9, 3.762103338264962*^9, 3.7621853725589457`*^9, 
   3.7621952760931044`*^9, 3.762195571255439*^9, 3.762196198425508*^9, 
   3.762633255774973*^9, 3.762633568559655*^9, 3.7626340792002707`*^9, 
   3.762703675878459*^9, 3.762705526759593*^9, 3.7627064582094364`*^9, 
   3.762791647999221*^9, 3.7627941624402623`*^9, 3.7627952501383266`*^9, 
   3.76280288920706*^9, 3.7628039884362154`*^9, 3.7628068589904675`*^9, 
   3.7646839998566914`*^9, 3.7646867145671315`*^9, 3.7647049117400045`*^9, 
   3.764705806269515*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"d24fac32-0c0c-407a-bd55-a6d40d5198dd"]
}, Open  ]],

Cell["Thus, the ECA CTM is defined as:", "Text",
 CellChangeTimes->{{3.761582268900553*^9, 
  3.7615822937971315`*^9}},ExpressionUUID->"83ddaf1e-d52b-4e98-8222-\
f2aed3301b47"],

Cell["\<\
When the probability of obtaining one string from the other, we will assign a \
penalty value of 21, which is greater than -Log[2,1/total].\
\>", "Text",
 CellChangeTimes->{{3.761594053079085*^9, 3.761594122461439*^9}, {
  3.7615941786623263`*^9, 3.7615941994384537`*^9}, {3.761600313331339*^9, 
  3.7616003163473864`*^9}, {3.761929180512493*^9, 3.761929185134268*^9}, {
  3.7619318038633947`*^9, 
  3.7619318040642786`*^9}},ExpressionUUID->"ed822238-bd4e-4ed4-9359-\
379fd2c1e964"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"(", 
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     RowBox[{"2", ",", 
      RowBox[{"1", "/", "total"}]}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7619317788480864`*^9, 3.761931799739165*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"30e58d5e-893b-453b-a23f-8734de043880"],

Cell[BoxData["19.011227255423254`"], "Output",
 CellChangeTimes->{{3.7619317795072813`*^9, 3.76193180019248*^9}, 
   3.761941317812231*^9, 3.762017542078625*^9, 3.762017999193996*^9, 
   3.7620182559639225`*^9, 3.762035345503443*^9, 3.7620942991192675`*^9, 
   3.762094713925749*^9, 3.762095008565121*^9, 3.7620952894077845`*^9, 
   3.762096475713953*^9, 3.762097415570428*^9, 3.762103338310933*^9, 
   3.7621853725859313`*^9, 3.7621952761250873`*^9, 3.762195571286422*^9, 
   3.7621961984544916`*^9, 3.762633255818947*^9, 3.762633572844092*^9, 
   3.762634079243246*^9, 3.7627036759244347`*^9, 3.7627055267745843`*^9, 
   3.762706458256408*^9, 3.762791648032201*^9, 3.762794162474242*^9, 
   3.7627952501656904`*^9, 3.7628028892300467`*^9, 3.7628039884642005`*^9, 
   3.762806859008457*^9, 3.764683999885674*^9, 3.764686714586121*^9, 
   3.7647049117689877`*^9, 3.7647058063064933`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"31e70168-c8e8-4aa0-a8f8-16158f692e7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"penalty", " ", "=", " ", "21"}], ";"}]], "Input",
 CellChangeTimes->{{3.761594017406469*^9, 3.7615940268910484`*^9}, 
   3.761594125535682*^9, {3.761594333282494*^9, 3.761594333631645*^9}, {
   3.7615944650833454`*^9, 3.761594466839193*^9}, {3.761929189411623*^9, 
   3.761929190235153*^9}, {3.7619318072682753`*^9, 3.7619318074651623`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"311e7515-5a1e-4aa9-ab59-9aeb94fff8c1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"caCTM", "[", 
    RowBox[{"s1_", ",", "s2_"}], "]"}], "Input"], 
  StyleBox[":=", "Input"], 
  StyleBox["\[IndentingNewLine]", "Input"], 
  RowBox[{
   StyleBox["With", "Input"], 
   StyleBox["[", "Input"], 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"m", "[", 
        RowBox[{"s1", ",", "s2"}], "]"}]}], "}"}], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     StyleBox["If", "Input"], 
     StyleBox["[", "Input"], 
     StyleBox["\[IndentingNewLine]", "Input"], 
     RowBox[{
      RowBox[{
       StyleBox["p", "Input"], 
       StyleBox["<=", "Input"], "0"}], ",", "penalty", ",", 
      StyleBox["\[IndentingNewLine]", "Input"], 
      StyleBox[" ", "Input"], 
      StyleBox[
       RowBox[{"-", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "p"}], "]"}]}], "Input"]}], 
     StyleBox["\[IndentingNewLine]", "Input"], 
     StyleBox["]", "Input"]}]}], 
   StyleBox["\[IndentingNewLine]", "Input"], 
   StyleBox["]", "Input"]}]}]], "Input",
 CellChangeTimes->{{3.7615824672388983`*^9, 3.7615824758741417`*^9}, 
   3.7615829726423664`*^9, {3.7615939614309797`*^9, 3.761593997896805*^9}, {
   3.761594132456729*^9, 3.76159417127055*^9}, {3.7615942122971067`*^9, 
   3.761594216215867*^9}, {3.7616003816128387`*^9, 3.761600383852557*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"79045886-39e0-42c0-aab4-6d15371dbce6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"caCTM", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7615829578863497`*^9, 3.7615829665434685`*^9}, 
   3.761600373872261*^9, 3.7619273571724997`*^9, {3.7619295640605536`*^9, 
   3.761929568523426*^9}, 3.7620175727163954`*^9, 3.7620353792575073`*^9, 
   3.7620947422439137`*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"b23e1b8d-7355-4de3-b766-d3fdcfc87ed3"],

Cell[BoxData["15.84130225398094`"], "Output",
 CellChangeTimes->{{3.7615829674346895`*^9, 3.7615829741972632`*^9}, 
   3.7615833398341355`*^9, 3.761583527785713*^9, 3.7615838429338207`*^9, 
   3.76158506136716*^9, 3.761595515785211*^9, 3.7616003446602154`*^9, {
   3.7616003747977314`*^9, 3.761600385830428*^9}, 3.7616036988052816`*^9, 
   3.761603911805215*^9, 3.7616081588027477`*^9, 3.761619284348604*^9, 
   3.761641298825263*^9, {3.761927350241962*^9, 3.7619273580700016`*^9}, 
   3.761929194275195*^9, 3.7619295690446854`*^9, 3.761930835515728*^9, 
   3.761931810277333*^9, 3.761941317883192*^9, {3.7620175612395873`*^9, 
   3.762017573958481*^9}, 3.7620179993019323`*^9, 3.7620182560508738`*^9, {
   3.7620353554886456`*^9, 3.762035380272947*^9}, 3.762037729969719*^9, 
   3.762094299204217*^9, 3.7620947432367277`*^9, 3.762095008680055*^9, 
   3.762095289497734*^9, 3.762096475798905*^9, 3.762097415689359*^9, 
   3.76210333840288*^9, 3.7621853726508937`*^9, 3.7621952762207575`*^9, 
   3.7621955713703766`*^9, 3.7621961985314465`*^9, 3.76263325595187*^9, 
   3.7626335779921074`*^9, 3.762634079422382*^9, 3.762703676066351*^9, 
   3.762705526823556*^9, 3.7627064583803377`*^9, 3.762791648088168*^9, 
   3.7627941625481997`*^9, 3.762795250228654*^9, 3.762802889293014*^9, 
   3.762803988517168*^9, 3.7628068590534334`*^9, 3.764683999966628*^9, 
   3.7646867146390934`*^9, 3.764704911842946*^9, 3.7647058063794518`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"a3af0628-5c5d-472a-92c8-c410bd125c3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"caCTM", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7619284927831125`*^9, 3.7619284971282063`*^9}, {
  3.762035391099202*^9, 3.7620353950064087`*^9}, {3.7620947474808617`*^9, 
  3.762094755236433*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"d819c1b6-c57b-41e7-8a5c-4ffd50d8cdc3"],

Cell[BoxData["21"], "Output",
 CellChangeTimes->{
  3.7619284980442734`*^9, 3.7619291952746286`*^9, 3.761930835539713*^9, 
   3.7619318115904856`*^9, 3.7619413179061785`*^9, {3.762017563091219*^9, 
   3.7620175776155634`*^9}, 3.7620179993429093`*^9, 3.762018256081856*^9, {
   3.762035382018408*^9, 3.762035395580629*^9}, 3.7620377312644205`*^9, 
   3.7620942992352*^9, 3.762094755809002*^9, 3.762095008721032*^9, 
   3.762095289522719*^9, 3.7620964758328853`*^9, 3.762097415729336*^9, 
   3.7621033384358616`*^9, 3.762185372681876*^9, 3.7621952762587357`*^9, 
   3.7621955714123526`*^9, 3.762196198557431*^9, 3.7626332560718107`*^9, 
   3.7626335797632737`*^9, 3.762634079473354*^9, 3.762703676108327*^9, 
   3.762705526845545*^9, 3.7627064584263105`*^9, 3.762791648110157*^9, 
   3.7627941625811815`*^9, 3.762795250254642*^9, 3.762802889320996*^9, 
   3.762803988539157*^9, 3.7628068590774174`*^9, 3.764683999995611*^9, 
   3.764686714658085*^9, 3.7647049118729305`*^9, 3.7647058064054365`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"236962b8-af31-4318-ae7b-b48109f096c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ECA Conditional BDM", "Section",
 CellChangeTimes->{{3.761578757178212*^9, 
  3.7615787631621714`*^9}},ExpressionUUID->"89e68c1a-a124-47fa-8fe6-\
3915ad386378"],

Cell["Let us now define the conditional ECABDM of two strings.", "Text",
 CellChangeTimes->{{3.76157876708593*^9, 3.7615787783305044`*^9}, {
  3.7615789732901754`*^9, 
  3.761578981170623*^9}},ExpressionUUID->"3781c310-9325-493d-84cd-\
c1a2d85efc33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pairs", "[", 
   RowBox[{"l1_", ",", "l2_"}], "]"}], ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l1", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"l2", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "@", "l1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.7620971486981087`*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"ea0752b8-fc06-470f-b44c-0292c92ed67d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condBDM", "[", 
   RowBox[{"s1_", ",", "s2_", ",", " ", 
    RowBox[{"part_:", "6"}], ",", 
    RowBox[{"disp_:", "6"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"N", "@", 
   RowBox[{"Total", "@", 
    RowBox[{"With", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"adj1", "=", " ", 
         RowBox[{"Partition", "[", 
          RowBox[{"s1", ",", "part", ",", "disp"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"adj2", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"s2", ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "part"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "part"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"prs", " ", "=", " ", 
          RowBox[{"Pairs", "[", 
           RowBox[{"adj1", ",", "adj2"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"caCTM", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "prs"}]}], 
       " ", "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7616188977143116`*^9, 3.7616189183495197`*^9}, {
   3.761618953476447*^9, 3.7616190856988945`*^9}, {3.7619296947896004`*^9, 
   3.7619296952899384`*^9}, {3.7619400604610567`*^9, 3.761940092403631*^9}, {
   3.7620176059264994`*^9, 3.7620176098196945`*^9}, {3.7620354937328863`*^9, 
   3.7620354952200356`*^9}, {3.7620383503957*^9, 3.7620383506905317`*^9}, {
   3.76209477474326*^9, 3.762094774955782*^9}, 3.7620962985337257`*^9, {
   3.762097155540547*^9, 3.7620971566495304`*^9}, {3.7620971923660803`*^9, 
   3.762097193791836*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"7dbcb2bc-811d-4eff-9fbf-940519166bfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"condBDM", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
       "1", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
   "6", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.7619285195199566`*^9, 3.761928534567217*^9}, {
   3.761929029452034*^9, 3.7619290409201584`*^9}, {3.7619295497074337`*^9, 
   3.7619295545936403`*^9}, {3.7619399574987755`*^9, 3.761939965940779*^9}, 
   3.761940189783433*^9, {3.7620354244135036`*^9, 3.7620354427653027`*^9}, 
   3.7620948151700535`*^9, {3.762195849380083*^9, 3.7621958501531906`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"c2c8fdd8-17e8-4108-a6b6-ec164faaa5a1"],

Cell[BoxData["42.`"], "Output",
 CellChangeTimes->{
  3.7619285357131777`*^9, 3.7619290674990664`*^9, {3.7619292004825087`*^9, 
   3.7619292106395164`*^9}, {3.7619295505785246`*^9, 3.7619295552212696`*^9}, 
   3.7619297009115195`*^9, 3.7619308355896835`*^9, 3.7619317461920633`*^9, 
   3.7619399669499598`*^9, 3.761940094864519*^9, 3.7619401914719515`*^9, 
   3.761941317951153*^9, {3.7620175896101475`*^9, 3.7620176118525467`*^9}, 
   3.7620179994418535`*^9, 3.762018256131826*^9, 3.7620354440401497`*^9, 
   3.762035498292274*^9, 3.7620383544171124`*^9, 3.762094299292167*^9, 
   3.7620947812635117`*^9, 3.7620948184523487`*^9, 3.762095008789993*^9, 
   3.7620952895642757`*^9, 3.7620964758878517`*^9, 3.762097158697065*^9, 
   3.7620971960480003`*^9, 3.7620974158492684`*^9, 3.762103338514493*^9, 
   3.76218537274584*^9, 3.762195276347686*^9, 3.7621955714923115`*^9, 
   3.762196198626392*^9, 3.762633256192741*^9, 3.7626335880194893`*^9, 
   3.762634079692226*^9, 3.7627036763202047`*^9, 3.762705526899514*^9, 
   3.7627064585562377`*^9, 3.7627916481711216`*^9, 3.762794162660137*^9, 
   3.7627952503116083`*^9, 3.7628028893679743`*^9, 3.7628039885961275`*^9, 
   3.762806859119395*^9, 3.764684000079563*^9, 3.764686714714056*^9, 
   3.7647049119478855`*^9, 3.7647058064733963`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"93017bc2-609a-486e-ac45-9e227e5f135c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CellularAutomaton", "[", 
  RowBox[{"110", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "4"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7619401343478484`*^9, 3.7619401521318846`*^9}, {
  3.7620354506795692`*^9, 3.7620354508684616`*^9}, {3.7620948430874243`*^9, 
  3.7620948433138213`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"fcefae1f-7845-4c90-b832-9ee57f832b50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.761940152885453*^9, 3.761941317989131*^9, {3.762017592816428*^9, 
   3.762017613226247*^9}, 3.762017999473835*^9, 3.7620182561608095`*^9, 
   3.762035451563759*^9, 3.762035499650498*^9, 3.7620377360449286`*^9, 
   3.762038355438526*^9, 3.7620942993181515`*^9, 3.762094784392789*^9, 
   3.7620948440523987`*^9, 3.762095008830969*^9, 3.76209528958926*^9, 
   3.762096475919838*^9, 3.7620971782473903`*^9, 3.7620974158982396`*^9, 
   3.762103338554471*^9, 3.762185372765833*^9, 3.7621952763716717`*^9, 
   3.7621955715162973`*^9, 3.762196198656375*^9, 3.762633256239973*^9, 
   3.762633591218274*^9, 3.762634079739199*^9, 3.7627036763781724`*^9, 
   3.7627055269264984`*^9, 3.762706458600758*^9, 3.762791648206102*^9, 
   3.7627941626961155`*^9, 3.762795250336594*^9, 3.7628028893879623`*^9, 
   3.7628039886201124`*^9, 3.762806859137387*^9, 3.764684000110546*^9, 
   3.76468671473704*^9, 3.7647049119788675`*^9, 3.764705806503381*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"883d75f5-d1f0-4104-bbdb-538531e056f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"condBDM", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "1", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   "6", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.7619295866795917`*^9, 3.761929626415843*^9}, {
  3.76194016405342*^9, 3.761940175323207*^9}, {3.7620354799257975`*^9, 
  3.76203548023462*^9}, {3.762037780594932*^9, 3.7620377889328303`*^9}, {
  3.762094853574578*^9, 3.7620948585314846`*^9}, {3.762094896356633*^9, 
  3.762094902770725*^9}, {3.7621958539490786`*^9, 3.7621958545523343`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"898392fc-5e85-4172-a764-7d051e092435"],

Cell[BoxData["32.93499166959617`"], "Output",
 CellChangeTimes->{{3.7619296067268114`*^9, 3.7619296273988657`*^9}, 
   3.761929702074398*^9, 3.761930835610674*^9, 3.7619317476144414`*^9, 
   3.76194017577849*^9, 3.7619413180161157`*^9, {3.7620175957746377`*^9, 
   3.7620176146091113`*^9}, 3.762017999506815*^9, 3.7620182561947904`*^9, {
   3.7620354813799644`*^9, 3.762035502268998*^9}, 3.7620355609027476`*^9, 
   3.762037737182678*^9, 3.7620377894215484`*^9, 3.7620383567827563`*^9, 
   3.7620942993431396`*^9, 3.7620948591778517`*^9, 3.7620949048514185`*^9, 
   3.7620950088609514`*^9, 3.7620952896142464`*^9, 3.762096475971808*^9, {
   3.7620971801644764`*^9, 3.762097199734293*^9}, 3.762097415949212*^9, 
   3.7621033385834537`*^9, 3.7621853727868156`*^9, 3.762195276402653*^9, 
   3.7621955715502806`*^9, 3.7621961986793623`*^9, 3.762633256283948*^9, 
   3.762633592890812*^9, 3.7626340797781773`*^9, 3.7627036764301424`*^9, 
   3.762705526949486*^9, 3.7627064587266855`*^9, 3.7627916482340856`*^9, 
   3.7627941627310953`*^9, 3.7627952503625793`*^9, 3.762802889406954*^9, 
   3.7628039886411*^9, 3.762806859157374*^9, 3.764684000141529*^9, 
   3.7646867147720194`*^9, 3.764704912012848*^9, 3.7647058065353627`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"334d8297-4a1b-4a59-b31d-2f819428a8ee"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Model", "Subchapter",
 CellChangeTimes->{
  3.761580658608181*^9, {3.761580690356516*^9, 
   3.7615806924678793`*^9}},ExpressionUUID->"a804a73c-37ad-4916-b223-\
63fe141eee9c"],

Cell["\<\
For this problem, the model for each class is going to be a 12-bit string.\
\>", "Text",
 CellChangeTimes->{{3.761580695028001*^9, 3.761580709332858*^9}, {
   3.761580745612005*^9, 3.761580791940027*^9}, 
   3.76263284001151*^9},ExpressionUUID->"ba20ef52-30ac-470f-8200-\
6a5027c944f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model1", " ", "=", " ", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"0", ",", "12"}], "]"}], "&"}], ",", "class"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7615856384404635`*^9, 3.761585648641112*^9}, {
   3.7615856877290235`*^9, 3.761585688169337*^9}, {3.7615857183833256`*^9, 
   3.7615857508972607`*^9}, 3.7619277324356585`*^9, 3.7621949856782703`*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"d81acffa-9668-4776-acb5-852f100552d3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.761585751696398*^9, {3.761594449671443*^9, 3.761594478027804*^9}, 
   3.7615955158511724`*^9, 3.7616036988802385`*^9, 3.761603911883169*^9, 
   3.761608159836158*^9, 3.7616192855559125`*^9, 3.7616412998954535`*^9, 
   3.761927417543557*^9, 3.7619277333091664`*^9, 3.7619292128310966`*^9, 
   3.7619308356426554`*^9, 3.7619402333556924`*^9, 3.761941318050095*^9, 
   3.762017622779516*^9, 3.7620179995427957`*^9, 3.762018256225773*^9, 
   3.762038366811241*^9, 3.7620942993921103`*^9, 3.7620949183924913`*^9, 
   3.7620950088909345`*^9, 3.762095289644229*^9, 3.7620964760287733`*^9, 
   3.7620974160431557`*^9, 3.762103338624431*^9, 3.7621853728088026`*^9, 
   3.7621952764266396`*^9, 3.7621955715792646`*^9, 3.7621961987093444`*^9, 
   3.7626332563379145`*^9, 3.7626335956255407`*^9, 3.762634079830369*^9, 
   3.7627036764921074`*^9, 3.762705526983466*^9, 3.762706458776657*^9, 
   3.7627916482621717`*^9, {3.7627930424555225`*^9, 3.7627930695683365`*^9}, 
   3.762794162764078*^9, 3.7627952503915625`*^9, 3.7628028894299374`*^9, 
   3.762803988665085*^9, 3.762806859183357*^9, 3.764684000178506*^9, 
   3.7646867147960052`*^9, 3.76470491204583*^9, 3.7647058065673423`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"f1e70342-854b-46a8-a158-99b85867358b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training the Model", "Subsection",
 CellChangeTimes->{{3.7616010777482567`*^9, 
  3.7616010982119246`*^9}},ExpressionUUID->"6fe75526-2e3d-4688-88e0-\
0440365fcc71"],

Cell["Let' s start by defining a the cost function(s).", "Text",
 CellChangeTimes->{{3.7616016068847475`*^9, 
  3.7616016498280873`*^9}},ExpressionUUID->"03176702-842b-4fc4-81fc-\
cfeb79858fa3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChooseDat", "[", 
   RowBox[{"data_", ",", " ", "dig_"}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "dig"}], ")"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7616011018714323`*^9, 3.761601102599017*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"4fca058b-e24c-4b6e-8724-e8333317c628"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cost", "[", 
   RowBox[{"center_", ",", " ", "set_", ",", " ", 
    RowBox[{"dim_:", "6"}], ",", " ", 
    RowBox[{"disp_:", "6"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Total", "@", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"condBDM", "[", 
       RowBox[{"center", ",", 
        RowBox[{"set", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "dim", ",", "disp"}], 
       "]"}], "^", "2"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "set"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7616016776129932`*^9, 3.761601724924907*^9}, {
  3.7616027804882383`*^9, 3.7616028520015697`*^9}, {3.761603012238434*^9, 
  3.761603022095869*^9}, {3.761604264431939*^9, 3.7616042658932962`*^9}, {
  3.7616375564439025`*^9, 3.7616375597949877`*^9}, {3.761658418864567*^9, 
  3.761658423647755*^9}, {3.762195809154152*^9, 3.762195835873434*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"b2478de8-ad8f-4b0f-988a-ab84f72dbc3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrainingSample", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.762094944538769*^9, 3.7620949461315336`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"f61de796-dca9-4123-8eab-b2d12a44c3e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
  "\[Rule]", "704"}]], "Output",
 CellChangeTimes->{3.762094946550291*^9, 3.7620950089628983`*^9, 
  3.7620952897161875`*^9, 3.7620964762276573`*^9, 3.762097416139103*^9, 
  3.762103338707383*^9, 3.762185372862773*^9, 3.7621952764926023`*^9, 
  3.7621955716478834`*^9, 3.7621961987882996`*^9, 3.7626332564747562`*^9, 
  3.7626340799592943`*^9, 3.7627036766290283`*^9, 3.7627055270304394`*^9, 
  3.7627064589125795`*^9, 3.7627916483341312`*^9, 3.7627941628380337`*^9, 
  3.7627952504505277`*^9, 3.762802889471919*^9, 3.7628039887110586`*^9, 
  3.7628068592323303`*^9, 3.7646840002624583`*^9, 3.7646867148479843`*^9, 
  3.7647049121187887`*^9, 3.7647058066413026`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"ef829601-986b-47df-bbf5-94350695fdbd"]
}, Open  ]],

Cell["For example:", "Text",
 CellChangeTimes->{{3.7616030812451143`*^9, 3.7616030849409943`*^9}, {
  3.761603540821761*^9, 
  3.761603541093606*^9}},ExpressionUUID->"005350aa-c297-49bb-a91b-\
894b1e755683"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cost", "[", 
  RowBox[{
   RowBox[{"classB", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ChooseDat", "[", 
    RowBox[{"TrainingSample", ",", 
     RowBox[{"class", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", "6", ",", "6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7616028654059362`*^9, 3.7616028830244484`*^9}, {
  3.7616029276826196`*^9, 3.7616029503024817`*^9}, {3.7616042711152725`*^9, 
  3.7616042729180384`*^9}, {3.7621957774348745`*^9, 3.762195794473847*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"d648c8aa-f99f-4386-8924-84256f66e2ec"],

Cell[BoxData["14313.715645617978`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQB+J1OzM0N7C9cZx2+oMBiF43W9YKRJcE5fWB6J5bnCtB
9C21qmsgepbH392bgPSMd5u1dgBpvqK6V4eAtPJX4wV+7G8cz7+raPAH0iYJ
AftAtMHWMq8AIP04KfEoiO74y/0oBEjnMRzJCAXSFYuPra4C0h6hP2+CaJGH
nL9AdE3toTMtQFpnRp70AiC97ml2JohO6JEvAdFN682ng+hpdh3aC4G0Wibr
QhD9oT68dQmQPuI+Z/IZIN1WPiHzIpB+X1/aB6L/y926A6IVJIRdl3O8cZQ7
X1oAoq1aGdaAaCbdactPAum59x72nQLSP97GMZ8G0kvWcc/5AqRztkVf+wqk
vdj8474B6TR2A8lfQPptzvRFIDpBOYPzD5C2K+GcM4HnjeOcc9HvJwLpCbtY
Ls0C0llRVx1nA2kA2Aq1rQ==
  "],
 CellLabel->"Out[74]=",ExpressionUUID->"427d1b8b-5e28-4475-b21d-9125fffd3306"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cost", "[", 
  RowBox[{
   RowBox[{"classB", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ChooseDat", "[", 
    RowBox[{"TrainingSample", ",", 
     RowBox[{"class", "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "]"}], ",", " ", "6", ",", "6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7616030338956394`*^9, 3.761603041392354*^9}, {
   3.761603359230736*^9, 3.7616034184845552`*^9}, {3.7616042797632875`*^9, 
   3.7616042806473246`*^9}, 3.7621957993319926`*^9},
 CellLabel->"In[75]:=",ExpressionUUID->"f66e6171-148d-492e-81e2-a921b9b5a162"],

Cell[BoxData["30204.186035397775`"], "Output",
 CellChangeTimes->{
  3.7616030461126585`*^9, {3.761603360948809*^9, 3.7616034201137104`*^9}, 
   3.7616037002101297`*^9, 3.7616039133193493`*^9, 3.7616042824698954`*^9, 
   3.7616081599420977`*^9, 3.761619285650857*^9, 3.7616412999794054`*^9, 
   3.7619274311997595`*^9, 3.7619292212947197`*^9, 3.7619297158826895`*^9, 
   3.7619308357386007`*^9, 3.761931820506099*^9, 3.7619402420324535`*^9, 
   3.761941318154035*^9, 3.7620176315455523`*^9, 3.7620179998956103`*^9, 
   3.7620182563337107`*^9, 3.7620383752986975`*^9, 3.762094299484057*^9, 
   3.762094925911646*^9, 3.762095009011995*^9, 3.7620952897671585`*^9, 
   3.762096476294619*^9, 3.762097416201065*^9, 3.7621033387673492`*^9, 
   3.762185372900751*^9, 3.7621952765395775`*^9, 3.7621955716978526`*^9, 
   3.762196198838271*^9, 3.7626332569824533`*^9, 3.762633605826082*^9, 
   3.762634080070355*^9, 3.76270367674996*^9, 3.7627055270864058`*^9, 
   3.762706459015519*^9, 3.762791648386056*^9, 3.762794162896003*^9, 
   3.7627952504915047`*^9, 3.762802889533883*^9, 3.762803988758031*^9, 
   3.7628068592753067`*^9, 3.7646840003284197`*^9, 3.76468671488796*^9, 
   3.7647049121827526`*^9, 3.76470580669827*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"299480a8-9d04-4e1e-a1a7-05757747bdab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cost", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"ChooseDat", "[", 
    RowBox[{"TrainingSample", ",", 
     RowBox[{"class", "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "]"}], ",", " ", "6", ",", "6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.761928363639452*^9, 3.761928378065154*^9}, {
   3.761928566136101*^9, 3.76192857138398*^9}, {3.7619287817724457`*^9, 
   3.761928786320187*^9}, {3.7619295090763135`*^9, 3.761929509352738*^9}, {
   3.762017645359225*^9, 3.762017645683654*^9}, 3.7621958025311594`*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"cb58006a-a07f-4455-ac87-5d54a3ab3b95"],

Cell[BoxData["30322.682269246696`"], "Output",
 CellChangeTimes->{
  3.761928379737008*^9, {3.761928562175038*^9, 3.761928572425948*^9}, {
   3.761928782562993*^9, 3.7619287867839217`*^9}, 3.761929224730256*^9, 
   3.7619295102048817`*^9, 3.7619297190046377`*^9, 3.761930835768584*^9, 
   3.7619318253305664`*^9, 3.7619402444489117`*^9, 3.7619413181800203`*^9, {
   3.7620176352891626`*^9, 3.7620176463092937`*^9}, 3.7620180001063147`*^9, 
   3.7620182563686905`*^9, 3.7620383798881607`*^9, 3.762094299513042*^9, 
   3.7620949270994387`*^9, 3.7620950090759563`*^9, 3.7620952897931433`*^9, 
   3.7620964763286*^9, 3.7620974162480392`*^9, 3.762103338796333*^9, 
   3.76218537291974*^9, 3.7621952765665584`*^9, 3.7621955717258368`*^9, 
   3.762196198865256*^9, 3.762633257517148*^9, 3.762633607653145*^9, 
   3.7626340801173267`*^9, 3.762703676798932*^9, 3.762705527115391*^9, 
   3.7627064590644927`*^9, 3.7627916484030466`*^9, 3.7627941629309826`*^9, 
   3.762795250515492*^9, 3.7628028895682087`*^9, 3.7628039887820168`*^9, 
   3.762806859298291*^9, 3.764684000358405*^9, 3.7646867149079504`*^9, 
   3.764704912212735*^9, 3.764705806723254*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"2cd2f3a6-2ff4-43a6-9490-7c4f32adee17"]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"searchSet", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"toBinaryInt", "[", 
       RowBox[{"#", ",", "12"}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"2", "^", "12"}], "-", "1"}]}], "]"}]}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.761585862408203*^9, 3.7615858668321896`*^9}, {
   3.7615859128823867`*^9, 3.761585938159336*^9}, 3.7615859692281733`*^9, {
   3.7615861817725153`*^9, 3.7615861839694223`*^9}, {3.761586250588484*^9, 
   3.761586265601491*^9}, {3.7615864156095533`*^9, 3.761586420696647*^9}, {
   3.761603554521681*^9, 3.761603587935644*^9}, {3.7616037514722986`*^9, 
   3.7616037526614447`*^9}, 3.7616037869533854`*^9, {3.7616047245870686`*^9, 
   3.7616047249841385`*^9}, {3.761927571601571*^9, 3.761927572550728*^9}, {
   3.7619277264830627`*^9, 3.761927726759905*^9}, {3.7619303247807455`*^9, 
   3.761930331185172*^9}, {3.7619307131369867`*^9, 3.761930715152031*^9}, {
   3.761941106776043*^9, 3.7619411095885177`*^9}, {3.762017661262225*^9, 
   3.762017663955451*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"713e5033-6e8d-4bba-a810-57797a2a2f34"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s try to ",
 StyleBox["train the model",
  FontWeight->"Bold"],
 " by ",
 StyleBox["brute",
  FontSlant->"Italic"],
 " force."
}], "Text",
 CellChangeTimes->{{3.761603956920435*^9, 3.7616039715650673`*^9}, {
  3.7616081048003244`*^9, 
  3.7616081219280977`*^9}},ExpressionUUID->"68e6b6ab-ab1d-41b4-8343-\
d000279c30d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ss", " ", "=", " ", 
         RowBox[{"ChooseDat", "[", 
          RowBox[{"TrainingSample", ",", 
           RowBox[{"class", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"cls", " ", "=", " ", 
         RowBox[{"class", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"model1", "[", "cls", "]"}], "=", 
       RowBox[{
        RowBox[{"MinimalBy", "[", 
         RowBox[{"searchSet", ",", " ", 
          RowBox[{
           RowBox[{"cost", "[", 
            RowBox[{"#", ",", "ss", ",", "6", ",", "6"}], "]"}], "&"}], ",", 
          "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "@", "model1"}]}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7616040941630435`*^9, 3.7616042553580694`*^9}, {
   3.7616042933183165`*^9, 3.761604301239956*^9}, {3.7616044308387284`*^9, 
   3.761604433215991*^9}, {3.7616051051803007`*^9, 3.761605118546462*^9}, {
   3.761605154364334*^9, 3.761605156608533*^9}, {3.7616053039907393`*^9, 
   3.7616053085189543`*^9}, {3.7616053917269583`*^9, 3.761605399529458*^9}, {
   3.7616054415293846`*^9, 3.7616054771156006`*^9}, {3.7616056276465387`*^9, 
   3.761605631731861*^9}, {3.7616056713048134`*^9, 3.761605673224882*^9}, {
   3.7616057609916396`*^9, 3.761605880481887*^9}, {3.761606142355873*^9, 
   3.7616061458998485`*^9}, 3.7616062280613165`*^9, {3.7616063060961585`*^9, 
   3.7616063084678135`*^9}, {3.761607332718031*^9, 3.7616073357416525`*^9}, {
   3.76160741708947*^9, 3.761607475048355*^9}, {3.7616076683665237`*^9, 
   3.761607679801721*^9}, {3.761607710731*^9, 3.7616077205789576`*^9}, {
   3.761607819831214*^9, 3.761607825353011*^9}, 3.76160786488614*^9, 
   3.761607899997229*^9, 3.761607993230264*^9, {3.761608190917405*^9, 
   3.7616081917129507`*^9}, {3.761941100136837*^9, 3.7619411006375494`*^9}, {
   3.761941162765011*^9, 3.761941164187936*^9}, 3.76202151777649*^9, {
   3.7620958009561567`*^9, 3.762095802018197*^9}, {3.7621953276432433`*^9, 
   3.762195328847213*^9}, {3.7621958757381907`*^9, 3.7621958763695726`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"a15a4f8c-1639-4fa4-b434-0a0584b98e94"],

Cell[CellGroupData[{

Cell[BoxData["model1"], "Input",
 CellChangeTimes->{{3.7616079905382223`*^9, 3.761607991265806*^9}, 
   3.76219533024164*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"99b81959-ed09-4b5a-acf2-8f085ada8fe6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.761608160353862*^9, 3.7616114822219534`*^9, 3.7616216089370813`*^9, 
   3.7616434952242794`*^9, 3.761927940998908*^9, 3.76192798370207*^9, 
   3.761928992037277*^9, 3.76192906255249*^9, 3.761929457699559*^9, {
   3.7619301836942225`*^9, 3.761930183744192*^9}, 3.7619303543767166`*^9, 
   3.7619313100857925`*^9, {3.7619323341257863`*^9, 3.7619323342577114`*^9}, 
   3.76194079905674*^9, 3.7620180193698483`*^9, 3.762021545320739*^9, 
   3.76203859488998*^9, 3.7620943280208125`*^9, 3.76209504178432*^9, 
   3.76209532211697*^9, 3.7620965092974987`*^9, 3.762097439675217*^9, 
   3.762103361925949*^9, 3.7621853948376536`*^9, 3.7621952766315227`*^9, 
   3.762195594540634*^9, 3.762196221047705*^9, 3.762633325064528*^9, 
   3.762633637662456*^9, 3.762634102034137*^9, 3.7627036998992844`*^9, 
   3.7627055711545324`*^9, 3.762706481620409*^9, 3.7627916701102257`*^9, 
   3.762793050797858*^9, 3.762793097083681*^9, 3.762794185076166*^9, 
   3.7627952728705115`*^9, 3.7628029117416*^9, 3.7628040100389657`*^9, 
   3.7628068812507544`*^9, 3.764684023727049*^9, 3.764686736412555*^9, 
   3.764704934139616*^9, 3.7647058290133114`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"bc87dca7-6cd7-47fe-9321-e397d002f180"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "@", 
  RowBox[{"Values", "@", "model1"}]}]], "Input",
 CellChangeTimes->{{3.761930257256126*^9, 3.7619302781946893`*^9}, {
   3.761938101445796*^9, 3.761938103548752*^9}, 3.7621953311331315`*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"c76b7f57-5792-4ac4-a5a5-31f8384487d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
       "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "1", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
       "1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
       "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
       "0", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "1"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.76193026359149*^9, 3.761930278685087*^9}, 
   3.76193037209776*^9, 3.761931310172744*^9, {3.7619323341897507`*^9, 
   3.7619323343276725`*^9}, 3.761938104129419*^9, 3.7619408246768365`*^9, 
   3.762018019426815*^9, 3.762021549837157*^9, 3.762038599478599*^9, 
   3.7620943280967684`*^9, 3.7620950418562775`*^9, 3.7620953221869307`*^9, 
   3.7620965093974533`*^9, 3.762097439765166*^9, 3.762103362005904*^9, 
   3.762185394873632*^9, 3.7621952767624493`*^9, 3.7621955945706186`*^9, 
   3.7621962210916843`*^9, 3.762633325121495*^9, 3.7626336485855417`*^9, 
   3.7626341020961018`*^9, 3.7627036999792385`*^9, 3.762705571229495*^9, 
   3.762706481691368*^9, 3.7627916701641912`*^9, 3.7627941851111465`*^9, 
   3.76279527292848*^9, 3.762802911770584*^9, 3.7628040100729456`*^9, 
   3.7628068812827334`*^9, 3.7646840237800164`*^9, 3.764686736436539*^9, 
   3.764704934179592*^9, 3.764705829045293*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"f4235757-473c-4ddb-b760-e8a1d7dc6d6a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model Accuracy", "Subchapter",
 CellChangeTimes->{{3.7620234387129574`*^9, 
  3.7620234486274486`*^9}},ExpressionUUID->"e942fb1a-1cf8-4f25-b798-\
190a9b2be271"],

Cell["Lets test the accuracy of the model.", "Text",
 CellChangeTimes->{{3.7620234535312696`*^9, 
  3.7620234622124057`*^9}},ExpressionUUID->"9b61cdc4-a961-4008-bda2-\
846ed5280990"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pred", "[", 
   RowBox[{"m_", ",", "x_", ",", 
    RowBox[{"dim_:", "6"}], ",", 
    RowBox[{"disp_:", "6"}]}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"MinimalBy", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "m"}], ",", " ", 
     RowBox[{
      RowBox[{"condBDM", "[", 
       RowBox[{
        RowBox[{"m", "[", "#", "]"}], ",", "x", ",", "dim", ",", "disp"}], 
       "]"}], "&"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.762023642444933*^9, 3.762023676468896*^9}, {
  3.762023737740456*^9, 3.7620238500126224`*^9}, {3.7620243391206875`*^9, 
  3.762024339829173*^9}, {3.762195894441635*^9, 3.7621959280331097`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"3aa4477a-e46b-4bbc-bd18-db21b3488342"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pred", "[", 
  RowBox[{"model1", ",", 
   RowBox[{"TrainingSample", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7620238558128667`*^9, 3.762023878934534*^9}, 
   3.762195340681312*^9, {3.762195734308706*^9, 3.7621957582332544`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"17e0edd1-9535-4a9d-861f-d20daf656dbe"],

Cell[BoxData["704"], "Output",
 CellChangeTimes->{{3.762023868563945*^9, 3.762023879386922*^9}, 
   3.762024341385026*^9, 3.762038606740617*^9, 3.7620943281967134`*^9, 
   3.7620950419582195`*^9, 3.7620953223018646`*^9, 3.7620965095815887`*^9, 
   3.7620974399130774`*^9, 3.76210336216881*^9, 3.762185394956586*^9, 
   3.7621952769133625`*^9, 3.7621955946165905`*^9, 3.7621962211406517`*^9, 
   3.7626333253123837`*^9, 3.7626336530821724`*^9, 3.762634102201045*^9, 
   3.76270370010017*^9, 3.7627055713484325`*^9, 3.762706481821294*^9, 
   3.7627916702071657`*^9, 3.762794185160118*^9, 3.7627952729824486`*^9, 
   3.7628029118135595`*^9, 3.762804010124916*^9, 3.76280688132471*^9, 
   3.764684023834986*^9, 3.7646867364835153`*^9, 3.764704934234562*^9, 
   3.7647058290982623`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"b2b430cc-3656-4a34-be54-079169dab068"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrong", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pred", "[", "\[IndentingNewLine]", 
        RowBox[{"model1", ",", " ", 
         RowBox[{
          RowBox[{"TestSample", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
       "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TestSample", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrong", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrong", ",", 
         RowBox[{"TestSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TestSample", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7620242333259373`*^9, 3.762024235453884*^9}, {
   3.7620242969987583`*^9, 3.762024313373273*^9}, {3.7620243558548126`*^9, 
   3.762024356808889*^9}, 3.7621953446172376`*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"55de0096-97ef-4f34-b5a3-be955ba2537a"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7620243762799277`*^9, 3.7620244664203196`*^9, 
  3.762038608435772*^9, 3.762094328260674*^9, 3.7620950420461693`*^9, 
  3.76209532237682*^9, 3.76209650962856*^9, 3.762097439954056*^9, 
  3.7621033622197824`*^9, 3.762185394996563*^9, 3.7621952769373484`*^9, 
  3.7621955946565676`*^9, 3.762196221185629*^9, 3.762633325377349*^9, 
  3.7626336564883595`*^9, 3.7626341022560153`*^9, 3.7627037001721277`*^9, 
  3.7627055714193916`*^9, 3.7627064818892603`*^9, 3.762791670229154*^9, 
  3.7627931041937323`*^9, 3.762794185189103*^9, 3.7627952730074344`*^9, 
  3.762802911836545*^9, 3.7628040101528997`*^9, 3.7628068813526955`*^9, 
  3.7646840238989487`*^9, 3.7646867365274873`*^9, 3.7647049342845373`*^9, 
  3.7647058291462364`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"2ae0fa78-db18-47b5-b6f1-5ed4beaf84f2"]
}, Open  ]],

Cell["And the accuracy is:", "Text",
 CellChangeTimes->{{3.7620243947008533`*^9, 
  3.7620243997007*^9}},ExpressionUUID->"1e25dbed-aad5-467b-acf7-6e036db139e2"],

Cell[CellGroupData[{

Cell[BoxData["right"], "Input",
 CellChangeTimes->{{3.7620244590915112`*^9, 3.7620244596521907`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"e5c3c409-f786-4ce5-915c-6c7e1e9c4480"],

Cell[BoxData["170"], "Output",
 CellChangeTimes->{3.76202446024985*^9, 3.762038611643536*^9, 
  3.7620943283746104`*^9, 3.7620950422210712`*^9, 3.7620953224847603`*^9, 
  3.7620965097374954`*^9, 3.7620974400619946`*^9, 3.7621033623297315`*^9, 
  3.762185395073518*^9, 3.762195277138234*^9, 3.7621955947495146`*^9, 
  3.762196221243595*^9, 3.76263332553026*^9, 3.7626336596132994`*^9, 
  3.7626341023909364`*^9, 3.7627037002850647`*^9, 3.7627055717296476`*^9, 
  3.762706482010197*^9, 3.7627916703630795`*^9, 3.7627931078330755`*^9, 
  3.7627941853120394`*^9, 3.7627952731223683`*^9, 3.7628029119184985`*^9, 
  3.762804010227859*^9, 3.7628068814336486`*^9, 3.764684024102348*^9, 
  3.764686736581457*^9, 3.7647049343534975`*^9, 3.7647058292101994`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"dcae0356-de32-493d-9705-a4b5ad04f2a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "right"}], "/", 
  RowBox[{"Length", "[", "TestSample", "]"}]}]], "Input",
 CellChangeTimes->{{3.762024380058734*^9, 3.762024403656578*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"143f2708-cbfa-412c-a62e-242a054a02cf"],

Cell[BoxData["0.9550561797752809`"], "Output",
 CellChangeTimes->{{3.762024381287667*^9, 3.7620244053275948`*^9}, 
   3.7620386136038995`*^9, 3.7620943284115973`*^9, 3.762095042255048*^9, 
   3.7620953225137434`*^9, 3.7620965097734766`*^9, 3.7620974401079683`*^9, 
   3.762103362366707*^9, 3.7621853951015015`*^9, 3.762195277162221*^9, 
   3.762195594781496*^9, 3.7621962212825727`*^9, 3.7626333255712366`*^9, 
   3.7626336615522966`*^9, 3.76263410243591*^9, 3.7627037003530254`*^9, 
   3.7627055717866173`*^9, 3.7627064820631666`*^9, 3.7627916704100513`*^9, 
   3.7627931154098787`*^9, 3.7627941853430214`*^9, 3.7627952731593475`*^9, 
   3.762802911942485*^9, 3.7628040102588396`*^9, 3.762806881455636*^9, 
   3.764684024127334*^9, 3.764686736602445*^9, 3.76470493438148*^9, 
   3.764705829270165*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"75832b34-f54b-4f96-addc-8ee2c00c6263"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "TestSample"}]], "Input",
 CellChangeTimes->{{3.7620244322376437`*^9, 3.7620244507507286`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"766103ec-b00e-42ae-b3b8-d9261dafecba"],

Cell[BoxData["178"], "Output",
 CellChangeTimes->{3.762634102474889*^9, 3.76270370041499*^9, 
  3.762705571855577*^9, 3.7627064821101427`*^9, 3.762791670441032*^9, 
  3.7627941853710065`*^9, 3.762795273184334*^9, 3.76280291196747*^9, 
  3.7628040102888236`*^9, 3.7628068814826193`*^9, 3.7646840241583166`*^9, 
  3.764686736623433*^9, 3.764704934409465*^9, 3.7647058293101425`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"5830530d-0bc4-46bd-93ef-640044fa17c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["178"], "Input",
 CellChangeTimes->{3.7626336638202696`*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"4c112ff3-71eb-4cd8-accd-e978221b6997"],

Cell[BoxData["178"], "Output",
 CellChangeTimes->{3.762633663881234*^9, 3.762634102513874*^9, 
  3.7627037004629617`*^9, 3.7627055719215393`*^9, 3.7627064821621127`*^9, 
  3.7627916704720163`*^9, 3.7627941854039855`*^9, 3.7627952732173147`*^9, 
  3.7628029119944544`*^9, 3.7628040103228045`*^9, 3.762806881508604*^9, 
  3.7646840241843014`*^9, 3.7646867366444235`*^9, 3.7647049344374495`*^9, 
  3.7647058293381257`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"ceb6bd1c-61b7-4446-8478-72d25665d4c4"]
}, Open  ]],

Cell["Furthermore, the wrong samples were:", "Text",
 CellChangeTimes->{{3.76202447570901*^9, 3.762024541100701*^9}, {
  3.762038851914316*^9, 
  3.7620388530811787`*^9}},ExpressionUUID->"1927dca6-014f-48e2-ae12-\
350a9dae1ecf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "@", 
  RowBox[{"Values", "@", "wrong"}]}]], "Input",
 CellChangeTimes->{{3.762038854758465*^9, 3.7620388602094*^9}, {
  3.7620943479580717`*^9, 3.762094370173411*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"2e8b3b2c-c587-4736-b534-bb4388d18749"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3572", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3067", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1939", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2896", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3935", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.762024480318447*^9, 3.7620388610769043`*^9, 3.762094328634091*^9, {
   3.7620943640297213`*^9, 3.762094370726093*^9}, 3.762095042331005*^9, 
   3.762095322578717*^9, 3.762096509855431*^9, 3.762097440203912*^9, 
   3.762103362440665*^9, 3.7621853951364822`*^9, 3.7621952772123337`*^9, 
   3.7621955948344665`*^9, 3.76219622133654*^9, 3.7626333256661816`*^9, 
   3.762633666132584*^9, 3.762634102551853*^9, 3.7627037005119343`*^9, 
   3.762705571998499*^9, 3.7627064822170844`*^9, 3.7627916704960003`*^9, 
   3.762794185435968*^9, 3.7627952732482967`*^9, 3.7628029120194407`*^9, 
   3.7628040103517866`*^9, 3.7628068815355887`*^9, 3.764684024216284*^9, 
   3.764686736666408*^9, 3.764704934471405*^9, 3.76470582936611*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"d8ac7ae3-338e-4e67-a846-e81b63312aba"]
}, Open  ]],

Cell["Which were assigned to the samples:", "Text",
 CellChangeTimes->{{3.762024545193612*^9, 
  3.762024555220626*^9}},ExpressionUUID->"259c1b44-9850-4db5-956c-\
e199e9097641"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"pred", "[", 
      RowBox[{"model1", ",", " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "6", ",", "6"}], "]"}], "&"}], "/@",
     "wrong"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7620246018366146`*^9, 3.76202464109988*^9}, {
   3.762094387317402*^9, 3.76209439583563*^9}, 3.76219534986511*^9, {
   3.762195940572178*^9, 3.762195941176447*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"1530797a-f531-4ce0-aaf5-b8dd07aff0e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"828", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"704", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2896", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"205", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7620246419661584`*^9, 3.762038867479348*^9, 3.762094328743027*^9, {
   3.7620943890387697`*^9, 3.76209439665874*^9}, 3.7620950424069605`*^9, 
   3.7620953226675844`*^9, 3.762096509950531*^9, 3.7620974402588806`*^9, 
   3.762103362481735*^9, 3.7621853951594696`*^9, 3.762195277237319*^9, 
   3.7621955948634496`*^9, 3.7621962213665237`*^9, 3.7626333258225746`*^9, 
   3.7626336689072266`*^9, 3.762634102598832*^9, 3.762703700554911*^9, 
   3.7627055721174307`*^9, 3.7627064822620587`*^9, 3.7627916705179877`*^9, 
   3.762794185461953*^9, 3.7627952732752814`*^9, 3.762802912042427*^9, 
   3.7628040103777742`*^9, 3.762806881563573*^9, 3.76468402432722*^9, 
   3.764686736689394*^9, 3.764704934504387*^9, 3.7647058293990912`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"8ba4aff9-dbd5-4d9a-b2fe-1848f26055ce"]
}, Open  ]],

Cell["\<\
The performance is much better than the neural network classifiers.\
\>", "Text",
 CellChangeTimes->{{3.762095514825336*^9, 3.7620956065772324`*^9}, {
  3.7620957109132795`*^9, 3.7620957409051104`*^9}, {3.7620974837200537`*^9, 
  3.762097498599842*^9}},ExpressionUUID->"c24163c4-5ba3-42b2-9780-\
67ddeb1788cb"],

Cell["\<\
Let' s see if we increasing the \[OpenCurlyQuote]penalty; can improve the \
accuracy. \
\>", "Text",
 CellChangeTimes->{{3.7620959043292465`*^9, 
  3.7620959542650547`*^9}},ExpressionUUID->"aac1761b-75ff-4e26-a79f-\
b47d02608444"],

Cell[BoxData[
 RowBox[{
  RowBox[{"penalty", " ", "=", " ", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.762096025954047*^9, 3.76209602873827*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"185ac22e-e241-4fd9-bb66-63ff06742c70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"condBDM", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
       "1", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
   "6", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{
  3.762096057658888*^9, {3.7621959606999903`*^9, 3.7621959617054296`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"cb094d41-b389-4055-8065-1f014f4750c2"],

Cell[BoxData["200.`"], "Output",
 CellChangeTimes->{3.762096058632896*^9, 3.7620965100034995`*^9, 
  3.76209744033384*^9, 3.762097505252877*^9, 3.7621033626136894`*^9, 
  3.762185395227431*^9, 3.7621952773099527`*^9, 3.7621955949464025`*^9, 
  3.762196221410499*^9, 3.7626333259135227`*^9, 3.762633674639289*^9, 
  3.7626341026727915`*^9, 3.762703700639862*^9, 3.762705572204384*^9, 
  3.762706482350011*^9, 3.762791670564965*^9, 3.762794185506935*^9, 
  3.7627952733402433`*^9, 3.762802912080405*^9, 3.762804010428688*^9, 
  3.7628068816135445`*^9, 3.7646840243731933`*^9, 3.7646867367323704`*^9, 
  3.7647049345553627`*^9, 3.7647058294610567`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"079f8fc0-292b-4401-a339-9659be38a403"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"condBDM", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "1", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   "6", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{
  3.762096073881308*^9, {3.762195964716019*^9, 3.7621959653280077`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"e41b7ab9-e123-4c5f-abc0-abffe72efd20"],

Cell[BoxData["32.93499166959617`"], "Output",
 CellChangeTimes->{3.7620960753331256`*^9, 3.7620965100334854`*^9, 
  3.7620974404048047`*^9, 3.7620975065638294`*^9, 3.7621033626606617`*^9, 
  3.7621853952474194`*^9, 3.7621952773359394`*^9, 3.762195594976385*^9, 
  3.762196221435485*^9, 3.762633326022459*^9, 3.762633676056062*^9, 
  3.762634102710779*^9, 3.7627037007028255`*^9, 3.762705572251357*^9, 
  3.7627064824019847`*^9, 3.7627916705899487`*^9, 3.7627941855359187`*^9, 
  3.7627952733672276`*^9, 3.7628029121103888`*^9, 3.7628040104586735`*^9, 
  3.7628068816375313`*^9, 3.764684024402176*^9, 3.7646867367683496`*^9, 
  3.764704934584347*^9, 3.7647058294917617`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"7f8946bf-8145-4432-98ea-027783661c9e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ss", " ", "=", " ", 
         RowBox[{"ChooseDat", "[", 
          RowBox[{"TrainingSample", ",", 
           RowBox[{"class", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"cls", " ", "=", " ", 
         RowBox[{"class", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"model1", "[", "cls", "]"}], "=", 
       RowBox[{
        RowBox[{"MinimalBy", "[", 
         RowBox[{"searchSet", ",", " ", 
          RowBox[{
           RowBox[{"cost", "[", 
            RowBox[{"#", ",", "ss", ",", "6", ",", "6"}], "]"}], "&"}], ",", 
          "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "@", "model1"}]}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7620975292071657`*^9, {3.7621953593377943`*^9, 3.762195360288252*^9}, {
   3.762195974290348*^9, 3.7621959834082584`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"a4e22edc-e972-4f96-b8c5-57ffdd1958ff"],

Cell["And the accuracy:", "Text",
 CellChangeTimes->{{3.762103085492633*^9, 
  3.7621030903795114`*^9}},ExpressionUUID->"50e933ac-a487-48c0-90fe-\
4dc731e3910a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrong", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pred", "[", "\[IndentingNewLine]", 
        RowBox[{"model1", ",", " ", 
         RowBox[{
          RowBox[{"TestSample", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "6", ",", "6"}], 
        "\[IndentingNewLine]", "]"}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TestSample", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrong", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrong", ",", 
         RowBox[{"TestSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TestSample", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7621030763521004`*^9, {3.7621953624661818`*^9, 3.7621953642823114`*^9}, {
   3.7621959952910953`*^9, 3.7621959961613984`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"d07f782e-badb-432e-baaf-72f3def4c80e"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.762103386036823*^9, 3.762185417619131*^9, 
  3.762195277379915*^9, 3.7621956175705304`*^9, 3.762196243445035*^9, 
  3.7626333930882225`*^9, 3.7626341243707247`*^9, 3.7627037235022063`*^9, 
  3.7627056161235657`*^9, 3.76270650485165*^9, 3.7627916918926415`*^9, 
  3.7627942072612247`*^9, 3.762795295785864*^9, 3.762802934337364*^9, 
  3.7628040320540943`*^9, 3.762806903481554*^9, 3.764684048017228*^9, 
  3.764686758297404*^9, 3.764704956588627*^9, 3.7647058514768004`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"5913f64c-2447-4956-aa3f-98067906a831"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "right"}], "/", 
  RowBox[{"Length", "[", "TestSample", "]"}]}]], "Input",
 CellChangeTimes->{3.762097609705926*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"1a1c63fa-02ce-4786-8686-2bde25f75ca2"],

Cell[BoxData["0.9550561797752809`"], "Output",
 CellChangeTimes->{3.762097611652938*^9, 3.7621033861497564`*^9, 
  3.7621854176751013`*^9, 3.762195277573803*^9, 3.762195617649485*^9, 
  3.762196243500001*^9, 3.762633393224147*^9, 3.762634124472664*^9, 
  3.762703723615141*^9, 3.7627056164178543`*^9, 3.762706504976579*^9, 
  3.762791691993582*^9, 3.7627942073801537`*^9, 3.762795295855823*^9, 
  3.7628029344133196`*^9, 3.7628040321370463`*^9, 3.7628069035695047`*^9, 
  3.764684048079193*^9, 3.7646867583533735`*^9, 3.764704956657587*^9, 
  3.76470585154676*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"c2be46f4-2564-4737-b90d-732c4758cb71"]
}, Open  ]],

Cell["\<\
Performance is identical, therefore the choice of 21-bits for the penalty was \
right.\
\>", "Text",
 CellChangeTimes->{{3.7620976247609005`*^9, 
  3.7620976800407133`*^9}},ExpressionUUID->"161650d8-ca0f-41c1-b871-\
21ec6845e924"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Perfect Model", "Subchapter",
 CellChangeTimes->{{3.762196924036272*^9, 
  3.7621969299532804`*^9}},ExpressionUUID->"33fdfe77-6dfb-4579-a6cd-\
1bd64b00bb3a"],

Cell["Now, lets see the model that the algorithm chose", "Text",
 CellChangeTimes->{{3.762196936497086*^9, 3.7621969514732275`*^9}, {
  3.7626341851953745`*^9, 
  3.762634197107667*^9}},ExpressionUUID->"1333d468-ad7a-4576-8e9d-\
bebc9885eca9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Values", "@", "model1"}], " ", "\[Equal]", " ", 
  "classB"}]], "Input",
 CellChangeTimes->{{3.762196953795248*^9, 3.762196968674921*^9}, {
  3.76263417958811*^9, 3.7626342182444415`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"c32d9e77-0664-4cca-8860-a5cb1d0acb24"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7621969754580574`*^9, 3.7626333932801123`*^9, 3.7626341245326314`*^9, {
   3.7626342038432245`*^9, 3.762634218765142*^9}, 3.7627037236741076`*^9, 
   3.7627056164758205`*^9, 3.7627065050425425`*^9, 3.762791692030577*^9, 
   3.76279420740814*^9, 3.762795295878811*^9, 3.762802934437305*^9, 
   3.762804032175024*^9, 3.762806903597489*^9, 3.764684048108176*^9, 
   3.7646867583733616`*^9, 3.7647049566855717`*^9, 3.7647058515777416`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"7cc8b0e9-adfc-4e52-ac8f-e13761f4bb38"]
}, Open  ]],

Cell["\<\
The model chose the binary strings corresponding to the sample generators!\
\>", "Text",
 CellChangeTimes->{{3.762197469081972*^9, 3.762197548210122*^9}, {
  3.762634235971738*^9, 
  3.762634242587679*^9}},ExpressionUUID->"2d252f8b-1516-4f24-ac5c-\
cd3f8de2ea4f"],

Cell[TextData[{
 "This means the ",
 StyleBox["model itself, ",
  FontSlant->"Italic"],
 "if we can call it like that, is ",
 StyleBox["nearly perfect. ",
  FontSlant->"Italic"],
 "However, is the ",
 StyleBox["prediction ",
  FontSlant->"Italic"],
 "which is determining the accuracy of the model itself. I believe that this \
an important point of difference with the ",
 StyleBox["traditional ",
  FontSlant->"Italic"],
 "AI",
 StyleBox[" ",
  FontSlant->"Italic"],
 "models, given that tuning the prediction function is the model in itself. "
}], "Text",
 CellChangeTimes->{{3.762197550066074*^9, 3.762197552098279*^9}, {
  3.762199386373828*^9, 3.76219942673285*^9}, {3.762201257888378*^9, 
  3.762201377399914*^9}},ExpressionUUID->"6a20b7fc-2006-424d-bb5b-\
5ef238e693c6"],

Cell[TextData[{
 "So, how lets see how the ",
 StyleBox["perfect ",
  FontSlant->"Italic"],
 "classifier would perform. This is the one who, for each  input, searches \
directly for the input string."
}], "Text",
 CellChangeTimes->{{3.7622013836968594`*^9, 3.7622013889606285`*^9}, {
  3.762201806802062*^9, 3.762201826224963*^9}, {3.762203727300432*^9, 
  3.762203769635273*^9}},ExpressionUUID->"b2e0ae44-f910-4105-9fc8-\
c8b299d38b6f"],

Cell["\<\
The following function will tell us if there exists an automaton that \
produces x given the input.\
\>", "Text",
 CellChangeTimes->{{3.762202434750124*^9, 3.762202459153016*^9}, {
  3.762202631545349*^9, 
  3.7622026558172836`*^9}},ExpressionUUID->"a31fcf37-30c9-43db-9ed8-\
69d0cfa73bbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"existA", "[", 
   RowBox[{"in_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Count", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"CellularAutomaton", "[", 
         RowBox[{"i", ",", "in", ",", "4"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", "5"}], "]"}], "]"}], "\[Equal]", "x"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "128"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", "True"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7622026583894033`*^9, 3.762202714882821*^9}, 
   3.762202745555421*^9, {3.762202897987979*^9, 3.762202941941908*^9}, {
   3.762203156833228*^9, 3.762203220978541*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"8775897f-63e0-4a6a-b2a4-c011091f7c2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"indx", " ", "=", " ", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"classB", ",", "class"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7622034973953285`*^9, 3.762203523427504*^9}, 
   3.7622037773938446`*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"8ed3a49f-90a4-4e34-966f-ab7ea9df55ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"perfPred", "[", "x_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"indx", "[", 
   RowBox[{
    RowBox[{"MaximalBy", "[", 
     RowBox[{"classB", ",", 
      RowBox[{
       RowBox[{"existA", "[", 
        RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.762201923641641*^9, 3.762202033921487*^9}, {
  3.762202206612033*^9, 3.762202253361943*^9}, {3.7622023147247477`*^9, 
  3.762202333836171*^9}, {3.7622023647861156`*^9, 3.7622023660579495`*^9}, {
  3.7622032803482847`*^9, 3.7622033096275215`*^9}, {3.7622034517185163`*^9, 
  3.7622034729812894`*^9}, {3.762203531307692*^9, 3.762203536148452*^9}, {
  3.762203573908967*^9, 3.7622035780116267`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"2bcf0c89-fb5e-4338-b537-72a6f47e6c88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"perfPred", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.7622033151710987`*^9, 3.762203340899455*^9}, 
   3.7622034249232063`*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"4bb29281-352d-4141-aca2-c6257ad88c37"],

Cell[BoxData["704"], "Output",
 CellChangeTimes->{{3.7622034270353613`*^9, 3.7622034545065575`*^9}, 
   3.7622035388109093`*^9, 3.762203580781046*^9, 3.762633393719945*^9, 
   3.762634125050333*^9, 3.762703723895979*^9, 3.762705616722679*^9, 
   3.762706505377351*^9, 3.762791692144495*^9, 3.762794207508089*^9, 
   3.76279529600074*^9, 3.762802934513261*^9, 3.7628040322629786`*^9, 
   3.7628069036714554`*^9, 3.7646840482281075`*^9, 3.7646867584623103`*^9, 
   3.7647049567955084`*^9, 3.7647058516856804`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"25a51c5b-7c0f-43af-87c1-199f3a2b9ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrongP", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"perfPred", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TestSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", "]"}], 
       "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TestSample", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrongP", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrongP", ",", 
         RowBox[{"TestSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TestSample", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.762203610501086*^9, 3.7622036340696373`*^9}, {
  3.7627945530281563`*^9, 3.762794559944214*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"af3b1068-f792-4d05-a90b-e1e02f89b779"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.7622036133224764`*^9, 3.7622036373207808`*^9}, 
   3.7626333937679157`*^9, 3.7626341250983057`*^9, 3.7627037239499507`*^9, 
   3.7627056167836447`*^9, 3.762706505434318*^9, 3.762791692193466*^9, 
   3.762794207530069*^9, 3.7627952960237274`*^9, 3.7628029345432444`*^9, 
   3.7628040322889605`*^9, 3.7628069036914454`*^9, 3.764684048296069*^9, 
   3.764686758511282*^9, 3.7647049568354864`*^9, 3.764705851726657*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"827e1e02-be5d-4474-bd00-95db67f8a4d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["right"], "Input",
 CellChangeTimes->{{3.762203641940146*^9, 3.762203642571784*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"7e86ae91-b08c-4bc6-ad2c-5ba46de7a4c0"],

Cell[BoxData["174"], "Output",
 CellChangeTimes->{3.762203643217415*^9, 3.76263339515035*^9, 
  3.762634126581294*^9, 3.7627037254950643`*^9, 3.762705622480523*^9, 
  3.7627065070124693`*^9, 3.762791693487726*^9, 3.7627942088333797`*^9, 
  3.762795297323985*^9, 3.7628029358225126`*^9, 3.7628040335812206`*^9, 
  3.7628069049686885`*^9, 3.7646840495971007`*^9, 3.7646867597202034`*^9, 
  3.7647049580827827`*^9, 3.764705852949421*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"abaa9d2a-be74-4edc-8bca-72e0a21a536a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "right"}], "/", 
  RowBox[{"Length", "[", "TestSample", "]"}]}]], "Input",
 CellChangeTimes->{3.762203656499837*^9},
 CellLabel->
  "In[109]:=",ExpressionUUID->"7b4f0d4d-7a86-4b3b-b63a-8ed04dce51e6"],

Cell[BoxData["0.9775280898876404`"], "Output",
 CellChangeTimes->{3.7622036583068037`*^9, 3.7626333952452974`*^9, 
  3.762634126632265*^9, 3.7627037255540323`*^9, 3.7627056225414877`*^9, 
  3.7627065071004195`*^9, 3.7627916935386972`*^9, 3.762794208881353*^9, 
  3.762795297353967*^9, 3.7628029358604913`*^9, 3.7628040336112022`*^9, 
  3.7628069049876766`*^9, 3.764684049628084*^9, 3.764686759750187*^9, 
  3.76470495812376*^9, 3.7647058529844027`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"f856b8dd-e684-4b82-b02c-ff1549b7ae2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrongP", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"perfPred", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TrainingSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", "]"}], 
       "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TestSample", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrongP", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrongP", ",", 
         RowBox[{"TestSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TestSample", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7647032151841526`*^9, 3.764703241118528*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"e1788dce-def5-4002-86f0-22649b2ed108"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.764704958168172*^9, 3.764705853039372*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"eb29a64a-0e22-4c8f-9cf5-d982202147b0"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"177\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\
\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\
\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\
\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\
\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\"\[Rule]\\\", \\\"704\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\
\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\
\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\
\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\
\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[Rule]\\\", \\\"704\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"47\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\
\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\
\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\
\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\
\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[Rule]\\\", \\\"3067\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"126\\\", \\\"\[RightSkeleton]\
\\\"}]}], \\\"}\\\"}]\\) does not exist.\"",2,112,13,31251749893659040866,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7647049593498154`*^9, 3.7647058541942673`*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"376ac7d4-6cfc-47af-ac03-7e4f8852c40e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"178\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\
\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\
\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\
\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\
\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\"\[Rule]\\\", \\\"704\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\
\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\
\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\
\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\
\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[Rule]\\\", \\\"704\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"47\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\
\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\
\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\
\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\
\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[Rule]\\\", \\\"3067\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"126\\\", \\\"\[RightSkeleton]\
\\\"}]}], \\\"}\\\"}]\\) does not exist.\"",2,112,14,31251749893659040866,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7647049593498154`*^9, 3.764705854222247*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"91caf25e-a571-494a-88d3-4326f5c73595"]
}, Open  ]],

Cell[TextData[{
 StyleBox["As we can see from this, the ",
  FontWeight->"Bold"],
 StyleBox["algorithmic classifier ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["with partition size of 12 is already as good as we can expect it \
to be, ",
  FontWeight->"Bold"],
 "which is an expected result."
}], "Text",
 CellChangeTimes->{{3.762203662979138*^9, 3.7622037176429434`*^9}, {
  3.7622038173805456`*^9, 
  3.7622038265308933`*^9}},ExpressionUUID->"aca2d8e7-5d03-4f84-980f-\
dc21928054a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["An Smarter Training Method.", "Subchapter",
 CellChangeTimes->{{3.7626395079569983`*^9, 
  3.762639518961698*^9}},ExpressionUUID->"7a2fa883-52f0-4bb5-bb9b-\
b5f2ef741599"],

Cell[TextData[{
 "Will do ",
 StyleBox["greedy ",
  FontSlant->"Italic"],
 "approaches on training the previous model."
}], "Text",
 CellChangeTimes->{{3.762640607490966*^9, 3.7626406239225583`*^9}, {
  3.7627044074910293`*^9, 
  3.762704410627133*^9}},ExpressionUUID->"0ee2c19d-c4e2-45d2-9f4a-\
bb59cf8859d4"],

Cell[BoxData[
 RowBox[{"Remove", "[", " ", 
  RowBox[{
  "model2", ",", " ", "model3", ",", " ", "train", ",", " ", "fullTrain"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.762788224456382*^9, 3.7627882565243196`*^9}, 
   3.7627917819507265`*^9},
 CellLabel->
  "In[113]:=",ExpressionUUID->"c11e0086-8da1-4f37-8384-02617b6008e6"],

Cell[CellGroupData[{

Cell["First Algorithm.", "Section",
 CellChangeTimes->{{3.762704419964593*^9, 
  3.7627044273392467`*^9}},ExpressionUUID->"e5fd90db-66c9-4ffc-969c-\
dd47ec636c46"],

Cell["\<\
The first algorithm will, first, train the first 6-bits and then the second.\
\>", "Text",
 CellChangeTimes->{{3.762704432209942*^9, 
  3.762704486676195*^9}},ExpressionUUID->"4a241345-1a39-434e-8ed6-\
f12c09e3121c"],

Cell["Let\[CloseCurlyQuote]s reset the model.", "Text",
 CellChangeTimes->{{3.762641832273828*^9, 
  3.762641836570863*^9}},ExpressionUUID->"08d73047-be6e-4de6-98ce-\
0b50ef4c3a5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model2", " ", "=", " ", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"0", ",", "12"}], "]"}], "&"}], ",", "class"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7626418388232355`*^9, 3.762641846875209*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"d57c97da-b70f-4494-8181-8e17fe443a56"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7626418417039223`*^9, 3.762641847564814*^9}, 
   3.762700898528325*^9, 3.762701647190651*^9, 3.762701685736432*^9, 
   3.7627018020479255`*^9, 3.7627028516842813`*^9, 3.762702943182222*^9, 
   3.762703725623991*^9, 3.7627056226106396`*^9, 3.7627065071873703`*^9, 
   3.76270739671441*^9, 3.7627880385095873`*^9, 3.76278810225943*^9, 
   3.762788402025412*^9, 3.7627884436156054`*^9, 3.762788622271201*^9, 
   3.7627887142888365`*^9, 3.7627891697051663`*^9, 3.762789219378503*^9, 
   3.7627916935906687`*^9, 3.7627942089323254`*^9, 3.762795297415931*^9, 
   3.7628029359084644`*^9, 3.7628040336721687`*^9, 3.7628069050276546`*^9, 
   3.764684049692048*^9, 3.764686759790163*^9, 3.7647049595287123`*^9, 
   3.7647058543321867`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"a07d8b9e-5864-4584-a4e5-a228617e1e02"]
}, Open  ]],

Cell["\<\
The following function will find the best sub-vector of size 4 that minimizes \
the cost function on each specific position.\
\>", "Text",
 CellChangeTimes->{{3.7626423549860473`*^9, 3.762642387513426*^9}, 
   3.762699032652255*^9, {3.762699070083976*^9, 
   3.762699088429368*^9}},ExpressionUUID->"c45afb69-5fda-4185-9b84-\
c06111de1616"],

Cell[BoxData[
 RowBox[{
  RowBox[{"searchSet", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"#", ",", "6"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", "^", "6"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762646774897809*^9, 3.762646819105506*^9}, {
  3.7626990468261595`*^9, 3.7626990525019956`*^9}, {3.762701925780429*^9, 
  3.7627019287406826`*^9}, {3.7627873863940735`*^9, 3.7627873883645105`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"355aa621-65f4-490c-9425-def591c70bb6"],

Cell["Useful for the training function.", "Text",
 CellChangeTimes->{{3.7626998346030817`*^9, 3.762699844683857*^9}, {
  3.7626999787481165`*^9, 
  3.7626999863879023`*^9}},ExpressionUUID->"d9cf0d8d-1b7e-4c4c-b5b1-\
bb1dcf319daa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Replaces", " ", "a", " ", "part", " ", "of", " ", "a", " ", 
    RowBox[{"vector", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"replace", "[", 
    RowBox[{"vect_", ",", "new_", ",", "st_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"st", "-", "1"}], ")"}], " ", "<", " ", 
      RowBox[{"Length", "@", "vect"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Catenate", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"vect", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "st"}], "]"}], "]"}], "\[IndentingNewLine]", ",",
         "new", ",", "\[IndentingNewLine]", 
        RowBox[{"vect", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"st", "+", 
            RowBox[{"(", 
             RowBox[{"Length", "@", "new"}], ")"}], "+", "1"}], ";;", "All"}],
           "]"}], "]"}]}], "}"}], "\[IndentingNewLine]", "]"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Catenate", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"vect", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "st"}], "]"}], "]"}], ",", "new"}], "}"}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7626998470000844`*^9, 3.7626998487093678`*^9}, {
  3.7626999881731586`*^9, 3.7626999936132317`*^9}, {3.7627027533472576`*^9, 
  3.7627028340064707`*^9}, {3.762702877332076*^9, 3.7627028846344094`*^9}, {
  3.7628131092328496`*^9, 3.762813111493745*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"2fb878be-6b43-4b7c-b157-c4fc928b1987"],

Cell["The training function. We will iterate over this function.", "Text",
 CellChangeTimes->{{3.76270001777219*^9, 
  3.762700036803898*^9}},ExpressionUUID->"4e1525cd-8e14-4950-b9fa-\
e2e796d20ce2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"train", "[", 
   RowBox[{"st_", ",", "model_", ",", 
    RowBox[{"searchSet_:", "searchSet"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Keys", "@", "model"}], " ", "->", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"cls", " ", "=", " ", 
           RowBox[{"class", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"old", " ", "=", " ", 
           RowBox[{"model", "[", 
            RowBox[{"class", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ss", " ", "=", " ", 
           RowBox[{"ChooseDat", "[", 
            RowBox[{"TrainingSample", ",", 
             RowBox[{"class", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"With", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", " ", "=", " ", 
            RowBox[{
             RowBox[{"MinimalBy", "[", "\[IndentingNewLine]", 
              RowBox[{"searchSet", ",", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"cost", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"replace", "[", 
                   RowBox[{"old", ",", "#", ",", "st"}], "]"}], ",", 
                  "\[IndentingNewLine]", "ss", ",", "\[IndentingNewLine]", 
                  "6", ",", "6"}], "\[IndentingNewLine]", "]"}], 
                "\[IndentingNewLine]", "&"}], ",", "1"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"replace", "[", 
           RowBox[{"old", ",", "r", ",", "st"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "@", "class"}]}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.762646524674843*^9, 3.7626467699066668`*^9}, {
   3.7626990930861473`*^9, 3.7626991241172457`*^9}, {3.7627000436380153`*^9, 
   3.762700258468769*^9}, {3.7627002896990128`*^9, 3.762700357923586*^9}, 
   3.7627005621492033`*^9, {3.7627007042326*^9, 3.7627007328395367`*^9}, {
   3.762700765462982*^9, 3.7627007668718667`*^9}, {3.7627008638935084`*^9, 
   3.7627008793017225`*^9}, {3.7627009165768375`*^9, 
   3.7627009195158567`*^9}, {3.762701572132706*^9, 3.7627016796214795`*^9}, 
   3.7627018093458624`*^9, 3.7627083984358625`*^9, 3.7627086314312334`*^9, {
   3.7627873939875617`*^9, 3.762787402021514*^9}, {3.762787891150546*^9, 
   3.762787925795124*^9}, {3.762787957227227*^9, 3.762787988506471*^9}, {
   3.762788533455036*^9, 3.7627885748343554`*^9}, {3.762792143694335*^9, 
   3.762792144916172*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"2ca21aee-58a1-49a1-b6a5-8a13d937322e"],

Cell["Now, we train this model.", "Text",
 CellChangeTimes->{{3.762701812003106*^9, 
  3.7627018198195553`*^9}},ExpressionUUID->"88b35a71-18e2-4c2a-9eb0-\
a347ce2bc4bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"intervals", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7627018223516703`*^9, 3.762701862604314*^9}, {
  3.762701906268444*^9, 3.7627019125007143`*^9}, {3.762702955927587*^9, 
  3.762702956187441*^9}, {3.7628064131599536`*^9, 3.7628064140120497`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"4564b195-c829-44c4-8b4e-48eba7ca57dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullTrain", "[", 
   RowBox[{"model_", ",", "interval_", ",", " ", 
    RowBox[{"searchSet_:", "searchSet"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Fold", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"train", "[", 
      RowBox[{"#2", ",", "#1", ",", "searchSet"}], "]"}], "&"}], ",", " ", 
    "model", ",", "interval"}], "\[IndentingNewLine]", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.762701942372544*^9, 3.7627019883764205`*^9}, {
   3.7627086427762637`*^9, 3.762708660824917*^9}, {3.7627087098578205`*^9, 
   3.7627087624991293`*^9}, {3.7627874190923843`*^9, 3.762787442734291*^9}, {
   3.762788002636408*^9, 3.7627880188762035`*^9}, {3.762788981034494*^9, 
   3.762789033281887*^9}, {3.7627890797616997`*^9, 3.7627891622453995`*^9}, 
   3.7627891935521955`*^9, {3.7627893948131256`*^9, 3.7627894189180756`*^9}, {
   3.762790920150506*^9, 3.7627909548001285`*^9}, 3.7627917696753798`*^9, {
   3.7627918708672996`*^9, 3.762791872504434*^9}, {3.7627919444759336`*^9, 
   3.7627919490973635`*^9}, {3.7627920574335747`*^9, 
   3.7627920696146116`*^9}, {3.762792280111081*^9, 3.762792291008195*^9}, {
   3.7627930103846207`*^9, 3.76279301174465*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"1a75405c-2052-4165-8030-43617d55ca07"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model2", " ", "=", " ", 
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"toBinaryInt", "[", 
       RowBox[{"0", ",", "12"}], "]"}], "&"}], ",", "class"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7627893184193535`*^9, 3.762789319938048*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"852f62df-8453-4d38-a437-8d10179c1813"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model2", " ", "=", " ", 
  RowBox[{"fullTrain", "[", 
   RowBox[{"model2", ",", " ", "intervals", ",", " ", "searchSet"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7627020196277485`*^9, 3.762702021388424*^9}, {
  3.762708777244031*^9, 3.7627087908521323`*^9}, {3.762788428550229*^9, 
  3.7627884310288086`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"3c6e4f04-cae0-4d54-82e5-ab025de8d1eb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7627020220445304`*^9, 3.762702983134048*^9, 3.762703726939243*^9, 
   3.762705624736562*^9, 3.762706508596304*^9, 3.7627074206643076`*^9, 
   3.7627087930749855`*^9, 3.7627874562811165`*^9, 3.7627880497701273`*^9, 
   3.7627884076681833`*^9, 3.7627884588948584`*^9, 3.762788585775093*^9, 
   3.762789198415242*^9, 3.7627892844451294`*^9, 3.7627893300145044`*^9, 
   3.7627916938275323`*^9, 3.7627918012439933`*^9, 3.7627918783754406`*^9, {
   3.7627919315314136`*^9, 3.7627919546811757`*^9}, 3.762792301758726*^9, 
   3.7627942098343697`*^9, 3.7627952983094187`*^9, 3.762802936785963*^9, 
   3.7628040345406704`*^9, 3.762806905919876*^9, 3.7646840506961403`*^9, 
   3.7646867606757298`*^9, 3.764704960467761*^9, 3.7647058555512266`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"d07ed396-faad-441f-b171-0c529fc198a3"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s measure the accuracy of the model.", "Text",
 CellChangeTimes->{{3.7627040342612925`*^9, 
  3.762704050499288*^9}},ExpressionUUID->"f916bf52-15b1-41e1-a56e-\
dec62470ee07"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrong2", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pred", "[", "\[IndentingNewLine]", 
        RowBox[{"model2", ",", " ", 
         RowBox[{
          RowBox[{"TestSample", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "6", ",", "6"}], 
        "\[IndentingNewLine]", "]"}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TestSample", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrong2", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrong2", ",", 
         RowBox[{"TestSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TestSample", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7627040535035086`*^9, 3.762704070447143*^9}, {
  3.762704130034604*^9, 3.762704135379854*^9}, {3.7627933705072937`*^9, 
  3.7627933913758907`*^9}, {3.762793429992198*^9, 3.76279343417706*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"524ba3e5-c2c2-40fa-807b-7849980416e3"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.762704073746077*^9, 3.76270414052941*^9, 
  3.762705624871488*^9, 3.7627065087851954`*^9, 3.762708799817089*^9, 
  3.7627874594784913`*^9, 3.7627916938705063`*^9, 3.762792314716537*^9, 
  3.76279420991932*^9, 3.762795298378379*^9, 3.762802936853923*^9, 
  3.762804034599637*^9, 3.762806905939865*^9, 3.764684050806074*^9, 
  3.7646867607167068`*^9, 3.7647049605457163`*^9, 3.7647058556362643`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"2f6122cf-7972-4b58-b334-cc7d1e946256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "right"}], "/", 
  RowBox[{"Length", "[", "TestSample", "]"}]}]], "Input",
 CellChangeTimes->{3.762704092101237*^9},
 CellLabel->
  "In[125]:=",ExpressionUUID->"b3b840cd-65ad-4fdd-8e60-30425634f566"],

Cell[BoxData["0.9550561797752809`"], "Output",
 CellChangeTimes->{3.762704095188755*^9, 3.76270414337728*^9, 
  3.7627056252839193`*^9, 3.7627065089371166`*^9, 3.7627088030820923`*^9, 
  3.762787462378111*^9, 3.762791693989441*^9, 3.762792316664001*^9, 
  3.762794210028261*^9, 3.7627952984503374`*^9, 3.7628029369328785`*^9, 
  3.762804034673594*^9, 3.7628069060388083`*^9, 3.764684050916011*^9, 
  3.7646867608056564`*^9, 3.764704960611676*^9, 3.764705855776187*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"1c174761-d227-4606-8dcf-3662a64409d8"]
}, Open  ]],

Cell["The performance remains high.", "Text",
 CellChangeTimes->{{3.762704155691352*^9, 3.7627041804027987`*^9}, {
  3.762806945594011*^9, 
  3.7628069546578236`*^9}},ExpressionUUID->"c9710ae7-e3e1-4e5c-891b-\
f2f4e5e3da07"],

Cell["Now on the test sample.", "Text",
 CellChangeTimes->{{3.7646853593519063`*^9, 
  3.7646853663279276`*^9}},ExpressionUUID->"c6a15976-f518-42a8-a108-\
d9129ee696cd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrong3", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pred", "[", "\[IndentingNewLine]", 
        RowBox[{"model2", ",", " ", 
         RowBox[{
          RowBox[{"TrainingSample", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "6", ",", "6"}], 
        "\[IndentingNewLine]", "]"}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TrainingSample", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrong2", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrong2", ",", 
         RowBox[{"TrainingSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TrainingSample", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.764685369491123*^9, 3.7646854105856724`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"87304602-74de-48f4-8782-321d3f8f1f7f"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7646867608456373`*^9, 3.7647049606506557`*^9, 
  3.7647058558201613`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"b5be46bf-e99e-4d3f-915a-894a9873a122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "right"}], "/", 
  RowBox[{"Length", "[", "TrainingSample", "]"}]}]], "Input",
 CellChangeTimes->{{3.7646853835830812`*^9, 3.7646853882244315`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"d654745a-9a37-4bec-a981-d2e13c41da76"],

Cell[BoxData["0.9602272727272727`"], "Output",
 CellChangeTimes->{3.764686760904599*^9, 3.764704960726613*^9, 
  3.764705855935096*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"535e48d8-ec78-4e93-a151-f83298727e96"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other Methods.", "Subsubsection",
 CellChangeTimes->{{3.7627049912628627`*^9, 3.762705010499095*^9}, {
  3.762806965394677*^9, 
  3.762806969690219*^9}},ExpressionUUID->"b156e1cb-3e08-4c47-b74c-\
21e420a3f381"],

Cell["First, let us try a different searching order.", "Text",
 CellChangeTimes->{{3.7627050126670246`*^9, 
  3.762705047875078*^9}},ExpressionUUID->"db2a88ee-0b60-48b2-bee4-\
88a3a84c2b9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model3", " ", "=", " ", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"0", ",", "12"}], "]"}], "&"}], ",", "class"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.762706544903462*^9, 3.7627065502024713`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"2a33c4d9-1abb-4e97-9000-3c6932ff4cf8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7627065523198967`*^9, 3.76270742635246*^9, 3.762708533559269*^9, 
   3.7627876742073803`*^9, 3.7627878272775607`*^9, 3.7627880610395555`*^9, 
   3.7627881183204546`*^9, {3.7627881870450115`*^9, 3.7627882020663233`*^9}, 
   3.7627882850024834`*^9, 3.762791694032416*^9, 3.762792321690711*^9, {
   3.762792365393009*^9, 3.762792403413731*^9}, 3.7627942100602403`*^9, 
   3.7627952984793215`*^9, 3.762802936958863*^9, 3.762804034701578*^9, 
   3.762806906065793*^9, 3.764684050946994*^9, 3.764686760930585*^9, 
   3.7647049607665887`*^9, 3.7647058559740734`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"7b16af06-9032-4649-a9e0-05b541d5f20d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"intervals2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762707238668564*^9, 3.762707243931097*^9}, 
   3.76278762902888*^9, {3.7627876654525695`*^9, 3.76278766581773*^9}, {
   3.7627924009069986`*^9, 3.7627924010808983`*^9}, {3.762806424111848*^9, 
   3.7628064246108313`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"0e3a2675-85d8-4784-a045-4d137ab174e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model3", " ", "=", "  ", 
  RowBox[{"fullTrain", "[", 
   RowBox[{"model3", ",", " ", "intervals2", ",", " ", "searchSet"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.762707257476225*^9, 3.7627073633761816`*^9, 3.762708524439109*^9, {
   3.762708579872053*^9, 3.762708582766182*^9}, {3.7627874966535416`*^9, 
   3.762787497732542*^9}, {3.7627876132161226`*^9, 3.7627876452255425`*^9}, {
   3.762792354968219*^9, 3.7627923917776847`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"6b1345e4-8d2c-4051-9355-7bb876048060"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.762708528527177*^9, {3.7627085586993504`*^9, 3.762708584521572*^9}, {
   3.7627874851567144`*^9, 3.762787499686306*^9}, {3.7627876480921245`*^9, 
   3.762787678693651*^9}, 3.7627878306132097`*^9, 3.7627880664822903`*^9, 
   3.762788121491184*^9, {3.762788192279174*^9, 3.7627882051604033`*^9}, 
   3.7627882897724047`*^9, 3.762791694154344*^9, {3.7627923689161034`*^9, 
   3.7627924071021924`*^9}, 3.7627942108799906`*^9, 3.76279529925088*^9, 
   3.762802937735419*^9, 3.762804035467143*^9, 3.762806907049862*^9, 
   3.764684052240476*^9, 3.764686761718733*^9, 3.7647049615708666`*^9, 
   3.7647058568243103`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"0cca9c64-564e-48fb-a082-43b6a953cd53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Values", "@", "model3"}], "==", 
  RowBox[{"Values", "@", "model2"}]}]], "Input",
 CellChangeTimes->{{3.762708427389231*^9, 3.7627084326149187`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"fd333718-8fb2-4295-9fc6-c0f287caa34a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7627084338918657`*^9, 3.7627875057361684`*^9, 
  3.7627876574899836`*^9, 3.7627916942512903`*^9, 3.7627924105530405`*^9, 
  3.7627942109479513`*^9, 3.7627952992878594`*^9, 3.762802937771398*^9, 
  3.7628040354941254`*^9, 3.7628069071418076`*^9, 3.764684052362407*^9, 
  3.76468676175771*^9, 3.7647049616368284`*^9, 3.7647058568972683`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"8a9cc738-cd2d-48c3-94ab-0df9fa744cb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Values", "@", "model3"}], ")"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Values", "@", "model2"}], ")"}], "[", 
     RowBox[{"[", "i", "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "@", "model3"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7627927719837465`*^9, 3.762792783433674*^9}, {
  3.7627928231836815`*^9, 3.762792886555828*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"ee61b7ec-483f-460d-aaa1-0d3dc6f82359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.7627928680625124`*^9, 3.762792887400059*^9}, 
   3.7627942109979844`*^9, 3.762795299320841*^9, 3.7628029377963824`*^9, 
   3.7628040355191126`*^9, 3.762806907169791*^9, 3.7646840524033833`*^9, 
   3.764686761774701*^9, 3.7647049616648135`*^9, 3.764705856923253*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"1f884925-33cd-4b3d-a547-12246aa08846"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrong3", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pred", "[", "\[IndentingNewLine]", 
        RowBox[{"model3", ",", " ", 
         RowBox[{
          RowBox[{"TestSample", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "6", ",", "6"}], 
        "\[IndentingNewLine]", "]"}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TestSample", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrong3", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrong3", ",", 
         RowBox[{"TestSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TestSample", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.762792528779724*^9, 3.762792549784561*^9}, {
  3.7627934073298187`*^9, 3.7627934116413045`*^9}, {3.7627954145250072`*^9, 
  3.762795426952134*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"f9acf1c8-ad19-4d90-99c7-a10422ec1c63"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.762792530848934*^9, 3.76279255086504*^9}, 
   3.762794211118193*^9, 3.7627952994617577`*^9, {3.7627954162913804`*^9, 
   3.762795427871617*^9}, 3.7628029379303074`*^9, 3.7628040356640306`*^9, 
   3.762806907273732*^9, 3.764684052459352*^9, 3.764686761824671*^9, 
   3.764704961709787*^9, 3.764705856951237*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"d219139a-450f-49cf-95eb-3035d29a2215"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "right"}], "/", 
  RowBox[{"Length", "[", "TestSample", "]"}]}]], "Input",
 CellChangeTimes->{3.7627925426258574`*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"ad3ca5f1-3881-4387-b8a8-808890a2b499"],

Cell[BoxData["0.9550561797752809`"], "Output",
 CellChangeTimes->{{3.762792544680266*^9, 3.762792552531697*^9}, 
   3.7627942112561035`*^9, 3.7627952995477095`*^9, {3.762795418849184*^9, 
   3.7627954297199726`*^9}, 3.762802938005263*^9, 3.762804035738985*^9, 
   3.762806907396663*^9, 3.76468405258628*^9, 3.7646867619066243`*^9, 
   3.7647049617897415`*^9, 3.7647058570681705`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"bb6618d6-43e2-4d68-9e19-17fde5763a6b"]
}, Open  ]],

Cell["The performance is the same,?", "Text",
 CellChangeTimes->{{3.7627944084238195`*^9, 3.7627944298619223`*^9}, {
  3.7628069970508966`*^9, 
  3.7628069975705986`*^9}},ExpressionUUID->"94ba56d1-8fbf-41b7-83ff-\
43439a688c9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another Option.", "Subsection",
 CellChangeTimes->{{3.7627954591948137`*^9, 
  3.7627954691186647`*^9}},ExpressionUUID->"b2148fbf-6011-4bbc-a4ab-\
455620907acd"],

Cell[TextData[{
 "Another method would be to decrease the size of the ",
 StyleBox["training block ",
  FontSlant->"Italic"],
 "with blocks of size 12 being effectively ",
 StyleBox["exhaustive search",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.762707958417279*^9, 3.7627080462336693`*^9}, {
  3.7627082284345317`*^9, 
  3.7627082309943085`*^9}},ExpressionUUID->"c9be1b2a-b78d-42a1-832f-\
0ef864eb6e30"],

Cell[CellGroupData[{

Cell["For example:", "Subsubsection",
 CellChangeTimes->{{3.76270823759424*^9, 
  3.762708240361519*^9}},ExpressionUUID->"56edc8f4-e7ae-49b4-b283-\
9e6f279c79ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"searchSetS8", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"#", ",", "8"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", "^", "8"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7627082441354475`*^9, 3.7627083386350203`*^9}, {
  3.762787530886403*^9, 3.7627875322923965`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"205d4bfd-6cb1-4a55-8c68-cf878a189fc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"searchSetS4", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"#", ",", "4"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", "^", "4"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762708320523095*^9, 3.762708345074196*^9}, {
  3.76278753789303*^9, 3.762787564617324*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"84ce7a10-7c44-4035-842c-70a8eca21ce8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model4", " ", "=", " ", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"0", ",", "12"}], "]"}], "&"}], ",", "class"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7627960132898417`*^9, 3.7627960177505894`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"1d26d946-7432-4be1-82e8-40326817225a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7627960197424955`*^9, {3.7627966479682426`*^9, 3.7627966727927694`*^9}, 
   3.7627971398639174`*^9, 3.76280293814918*^9, 3.7628040358379297`*^9, 
   3.762806907496606*^9, 3.7646840526902194`*^9, 3.764686761962594*^9, 
   3.7647049618607*^9, 3.7647058571451273`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"27516a97-9013-4d70-a63c-d2a943d61612"]
}, Open  ]],

Cell["First, we will search for a bigger segment of 8-bits.", "Text",
 CellChangeTimes->{{3.7627961705820684`*^9, 3.7627961749576883`*^9}, {
  3.762796449581763*^9, 
  3.762796471846019*^9}},ExpressionUUID->"2e13d31e-1998-4627-85be-\
43babced8cfd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model4", " ", "=", 
  RowBox[{"train", "[", 
   RowBox[{"0", ",", "model4", ",", "searchSetS8"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7627960548000774`*^9, 3.7627960781644745`*^9}, {
  3.762796133663769*^9, 3.7627961636306562`*^9}, {3.762806439071629*^9, 
  3.7628064394838943`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"e093ac02-e503-465f-89c2-41aa20c42bdb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.762796138786709*^9, 3.762796167718915*^9}, {
   3.7627966519499645`*^9, 3.7627966758879995`*^9}, 3.762797144682576*^9, 
   3.7628029395583744`*^9, 3.76280403723413*^9, 3.762806909387595*^9, 
   3.7646840550024366`*^9, 3.764686763560554*^9, 3.764704963268897*^9, 
   3.764705858932889*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"4812194f-2944-40c0-8ac1-93cb325d98d9"]
}, Open  ]],

Cell["Now, we add the last 4 bits.", "Text",
 CellChangeTimes->{{3.762796510917652*^9, 
  3.762796520213332*^9}},ExpressionUUID->"119bd202-560f-4d9c-a215-\
a4c1c75cbbd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model4", " ", "=", 
  RowBox[{"train", "[", 
   RowBox[{"8", ",", "model4", ",", "searchSetS4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.762796529833833*^9, 3.762796553848093*^9}, {
  3.7627965964607*^9, 3.7627965969824023`*^9}, {3.7627966394051175`*^9, 
  3.762796681326886*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"82cf5747-a18e-47e6-872a-4af1f932bb85"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "0", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.762796541304274*^9, 3.7627965550324154`*^9}, 
   3.76279659817072*^9, {3.7627966409942083`*^9, 3.7627966824332533`*^9}, {
   3.7627971661624403`*^9, 3.762797179065545*^9}, 3.762802939736272*^9, 
   3.762804037397035*^9, 3.7628069095694895`*^9, 3.7646840552672863`*^9, 
   3.764686763816407*^9, 3.7647049634537935`*^9, 3.76470585914077*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"49c2061f-fb49-40fd-bb12-b6421074c266"]
}, Open  ]],

Cell["Let us test the accuracy of this model.", "Text",
 CellChangeTimes->{{3.7627966940625963`*^9, 
  3.7627967097096395`*^9}},ExpressionUUID->"71850fc1-8ba4-480b-876f-\
c494b93e0a60"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrong4", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pred", "[", "\[IndentingNewLine]", 
        RowBox[{"model4", ",", " ", 
         RowBox[{
          RowBox[{"TestSample", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "6", ",", "6"}], 
        "\[IndentingNewLine]", "]"}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TestSample", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrong4", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrong4", ",", 
         RowBox[{"TestSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TestSample", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.762796903355445*^9, 3.7627969214639425`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"10705c40-ec8e-49ec-8de3-ae77cfb76d48"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.762796922435384*^9, 3.762797148671566*^9, 
  3.7627971846834536`*^9, 3.7628029397652583`*^9, 3.762804037424021*^9, 
  3.762806909609473*^9, 3.7646840553262534`*^9, 3.764686763840395*^9, 
  3.764704963480777*^9, 3.7647058591887426`*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"beb42127-8d98-4f70-8d62-ce99aad578cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "right"}], "/", 
  RowBox[{"Length", "[", "TestSample", "]"}]}]], "Input",
 CellChangeTimes->{3.762796934218395*^9},
 CellLabel->
  "In[147]:=",ExpressionUUID->"ec0cd2ba-b34a-441d-8200-61b1d2884a5a"],

Cell[BoxData["0.8820224719101123`"], "Output",
 CellChangeTimes->{
  3.7627969352816477`*^9, {3.762797152064412*^9, 3.762797186160925*^9}, 
   3.7628029399031763`*^9, 3.762804037496978*^9, 3.7628069097084246`*^9, 
   3.7646840554341908`*^9, 3.764686763957327*^9, 3.7647049635947123`*^9, 
   3.764705859295681*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"4b01f3de-2261-4482-a049-c2a17e6ec639"]
}, Open  ]],

Cell["Performance unexpectedly dropped compared to 6-bit strings.", "Text",
 CellChangeTimes->{{3.762797048644884*^9, 3.762797072054891*^9}, {
  3.76279719485373*^9, 
  3.7627972231258554`*^9}},ExpressionUUID->"b5463b30-9aa9-4f6b-ae31-\
f0945f558c80"],

Cell["Let\[CloseCurlyQuote]s try 10-bit strings.", "Text",
 CellChangeTimes->{{3.7627972280220532`*^9, 
  3.7627972333819833`*^9}},ExpressionUUID->"481939cf-d97b-4b57-a641-\
6a5233a1930d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model5", " ", "=", " ", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"0", ",", "12"}], "]"}], "&"}], ",", "class"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.762797427699159*^9, 3.762797456428933*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"98231863-565e-467b-a3c8-84ac86a2d869"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7627974573169603`*^9, 3.76279756704235*^9, {3.7627976710554066`*^9, 
   3.7627976981122*^9}, 3.762802939929161*^9, 3.762804037533959*^9, 
   3.7628069097374077`*^9, 3.764684055475173*^9, 3.7646867639893084`*^9, 
   3.764704963631689*^9, 3.7647058593386555`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"7b6e286b-d7bf-4520-8576-a788d08ebf98"]
}, Open  ]],

Cell["First, we will search for a bigger segment of 10 - bits.", "Text",
 CellChangeTimes->{{3.7627974760433435`*^9, 
  3.7627974931740255`*^9}},ExpressionUUID->"c1321681-0df1-4b24-83a7-\
286cf66795c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"searchSetS10", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"#", ",", "10"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", "^", "10"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762797532928305*^9, 3.762797543918816*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"864c0851-d854-4179-80ce-895e6bd744e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"searchSetS2", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"toBinaryInt", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", "^", "2"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762797627592903*^9, 3.7627976371989717`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"caace4e9-8f22-4fe3-9f91-10ffea5ebd90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model5", " ", "=", 
  RowBox[{"train", "[", 
   RowBox[{"0", ",", "model5", ",", "searchSetS10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7627975032109303`*^9, 3.7627975153671637`*^9}, {
  3.7627975523509336`*^9, 3.7627975640138736`*^9}, {3.7628064484722137`*^9, 
  3.7628064493966856`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"0be57e80-aeeb-4a61-9d81-fa0e8704355f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
      "1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.762797557681966*^9, 3.7627975762262754`*^9}, 
   3.7627977111377754`*^9, 3.762802945986695*^9, 3.762804043522609*^9, 
   3.7628069156497655`*^9, 3.7646840617991743`*^9, 3.764686769701375*^9, 
   3.7647049694748554`*^9, 3.764705865303336*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"0248cb77-c3a0-4ee9-9d1e-3f22006ab19a"]
}, Open  ]],

Cell["Then, the last 2-bits.", "Text",
 CellChangeTimes->{{3.7627975797697735`*^9, 
  3.762797601158017*^9}},ExpressionUUID->"1d81ee2c-8a02-4311-8146-\
637627a92129"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model5", " ", "=", 
  RowBox[{"train", "[", 
   RowBox[{"10", ",", "model5", ",", "searchSetS2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.762797619074189*^9, 3.762797688238908*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"a0dd6f19-9eb6-4282-a263-d0dabddf45f3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"704", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3572", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3067", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
      "1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"3184", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"1939", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
      "1", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"2386", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", 
   RowBox[{"2896", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"205", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"828", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"3935", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.76279766105875*^9, 3.7627977112831345`*^9, 
  3.7628029460956326`*^9, 3.762804043618552*^9, 3.7628069157627*^9, 
  3.764684061911111*^9, 3.7646867697793317`*^9, 3.764704969572713*^9, 
  3.7647058654032803`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"489079e2-fb4e-4d11-9bdb-d286b67366df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrong5", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pred", "[", "\[IndentingNewLine]", 
        RowBox[{"model5", ",", " ", 
         RowBox[{
          RowBox[{"TestSample", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "6", ",", "6"}], 
        "\[IndentingNewLine]", "]"}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TestSample", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrong5", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrong5", ",", 
         RowBox[{"TestSample", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TestSample", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.762801047598611*^9, 3.76280106635054*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"aa8c9061-6d1a-4c73-b3f9-87b85bf82b20"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.762801067632743*^9, 3.7628029461276145`*^9, 
  3.76280404365853*^9, 3.7628069157926807`*^9, 3.764684061969078*^9, 
  3.764686769825305*^9, 3.7647049696070642`*^9, 3.7647058654542513`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"f5b6dc90-bdbf-448d-aae3-2eecbd84ac7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "right"}], "/", 
  RowBox[{"Length", "[", "TestSample", "]"}]}]], "Input",
 CellChangeTimes->{3.7628010829416895`*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"7f2de653-ae01-4edc-8339-a15fe41529bf"],

Cell[BoxData["0.9269662921348314`"], "Output",
 CellChangeTimes->{3.762801085424473*^9, 3.7628029461995726`*^9, 
  3.7628040437294884`*^9, 3.762806915883629*^9, 3.7646840620320406`*^9, 
  3.7646867698902674`*^9, 3.7647049696890173`*^9, 3.764705865510219*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"1cb97f08-520a-46fa-9db5-7ebf2eab715d"]
}, Open  ]],

Cell["\<\
Better than size 8/4 but worse than 6/6. The reason is that Conditional ECA \
BDM uses partition of size 6.\
\>", "Text",
 CellChangeTimes->{{3.762801106141903*^9, 3.762801139459998*^9}, {
  3.762801387556842*^9, 
  3.762801464364704*^9}},ExpressionUUID->"b8eca864-e1ea-4ab8-ad4e-\
12737703333e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generalization of Algorithmic Learning.", "Subchapter",
 CellChangeTimes->{
  3.7628011513425245`*^9, {3.7628014711655703`*^9, 
   3.762801486835919*^9}},ExpressionUUID->"d07a1918-1c49-43d9-aa4e-\
0f943315b1a0"],

Cell["\<\
Let us try a harder problem. We will now classify problems of size 24x4.\
\>", "Text",
 CellChangeTimes->{{3.7628014895395803`*^9, 3.7628014957888823`*^9}, {
  3.76280160511722*^9, 
  3.762801630108556*^9}},ExpressionUUID->"490b2a65-4f03-4ea7-adce-\
6b11f6074dd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"set24", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"2", "^", "24"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7628015080094595`*^9, 3.7628015417404118`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"a4f9d2bc-5034-4d7c-8dce-68a74d73ea48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nClasses", " ", "=", " ", "20"}], ";"}]], "Input",
 CellChangeTimes->{{3.762801680805677*^9, 3.762801688029059*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"4fcc3790-975b-4e42-b320-3928b9c9db7d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"class", "=", " ", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"set24", ",", "nClasses"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"classB", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"toBinaryInt", "[", 
     RowBox[{"#", ",", "24"}], "]"}], "&"}], "/@", "class"}]}]}], "Input",
 CellChangeTimes->{{3.762801670286872*^9, 3.7628017198298187`*^9}, {
  3.762802419134165*^9, 3.7628024466303225`*^9}, {3.7628070710345464`*^9, 
  3.762807071404337*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"92f45d98-710b-4c87-b08c-89658e2a6ba9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2883060", ",", "12561520", ",", "7940434", ",", "11858125", ",", "3391327",
    ",", "15102130", ",", "12095037", ",", "13072823", ",", "466994", ",", 
   "8530001", ",", "5792212", ",", "8468973", ",", "14092741", ",", "4325655",
    ",", "14975215", ",", "15915716", ",", "1580403", ",", "13925119", ",", 
   "14202249", ",", "11583503"}], "}"}]], "Output",
 CellChangeTimes->{3.762801709327853*^9, 3.7628029463205028`*^9, 
  3.762804043841424*^9, 3.7628069159955673`*^9, 3.7628070795136213`*^9, 
  3.7646840621429787`*^9, 3.7646867699882116`*^9, 3.76470496979996*^9, 
  3.764705865626153*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"942e9591-4886-4392-b601-812992aac0da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.762801709327853*^9, 3.7628029463205028`*^9, 
  3.762804043841424*^9, 3.7628069159955673`*^9, 3.7628070795136213`*^9, 
  3.7646840621429787`*^9, 3.7646867699882116`*^9, 3.76470496979996*^9, 
  3.7647058656431503`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"8ea8d3b9-22d4-42ee-b5ba-1867333e9af2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "2803019", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrainingSample24", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Catenate", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"With", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"aut", " ", "=", 
              RowBox[{"RandomInteger", "[", "128", "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Rest", "@", 
               RowBox[{"CellularAutomaton", "[", 
                RowBox[{"aut", ",", 
                 RowBox[{"classB", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "size"}], "]"}]}], 
              ")"}], "\[Rule]", 
             RowBox[{"class", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
           "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "nSamples"}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "class", "]"}]}], "}"}]}], "]"}]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ValidationSample24", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Catenate", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"With", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"aut", " ", "=", 
              RowBox[{"RandomInteger", "[", "128", "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Rest", "@", 
               RowBox[{"CellularAutomaton", "[", 
                RowBox[{"aut", ",", 
                 RowBox[{"classB", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "size"}], "]"}]}], 
              ")"}], "\[Rule]", 
             RowBox[{"class", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
           "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "nSamples"}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "class", "]"}]}], "}"}]}], "]"}]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestSample24", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"DeleteDuplicates", "@", 
    RowBox[{"Catenate", "@", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"With", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"aut", " ", "=", 
             RowBox[{"RandomInteger", "[", "128", "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Rest", "@", 
              RowBox[{"CellularAutomaton", "[", 
               RowBox[{"aut", ",", 
                RowBox[{"classB", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "size"}], "]"}]}], 
             ")"}], "\[Rule]", 
            RowBox[{"class", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
          "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "nSamples"}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "class", "]"}]}], "}"}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7628015630936737`*^9, 3.7628016016198416`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"cc87bdcf-9f1b-44b7-a73b-80b988780969"],

Cell["\<\
We will now train the best performing neural network on this data.\
\>", "Text",
 CellChangeTimes->{{3.762801755140388*^9, 3.7628017574203596`*^9}, {
  3.762801932237381*^9, 
  3.7628019597157326`*^9}},ExpressionUUID->"c74d8d96-3c6e-4dec-95b1-\
d8cdf73c658f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn5", " ", "=", " ", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FlattenLayer", "[", "]"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", 
       RowBox[{"24", "*", "4"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", 
       RowBox[{"24", "*", "4"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "]"}], ",", "Ramp", ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", "\n", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", "class"}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "24"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7628019915744658`*^9, 3.762802015837571*^9}, {
  3.762802252991583*^9, 3.7628023036994715`*^9}, {3.76280243319942*^9, 
  3.762802437734079*^9}, {3.7628031484960575`*^9, 3.762803173309881*^9}, {
  3.7628033267703648`*^9, 3.7628033271577296`*^9}, {3.762803390732748*^9, 
  3.7628033911545086`*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"c3f552b6-3b4e-4df2-9a33-7dda98b2a3a4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"24\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 24}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 96}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"]
                     -> NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 24}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {2883060, 12561520, 7940434, 11858125, 
                    3391327, 15102130, 12095037, 13072823, 466994, 8530001, 
                    5792212, 8468973, 14092741, 4325655, 14975215, 15915716, 
                    1580403, 13925119, 14202249, 11583503}, "InputDepth" -> 1,
                     "Dimensions" -> 20, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"24\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.762802946430442*^9, 3.7628033284606876`*^9, 
  3.762803412142562*^9, 3.762804043964354*^9, 3.7628069161344852`*^9, 
  3.7628070882716074`*^9, 3.764684062256913*^9, 3.764686770080158*^9, 
  3.7647049699108977`*^9, 3.7647058657161083`*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"a8a098d4-b814-494c-b689-ca85c6323b18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "31416", "]"}], "\[IndentingNewLine]", 
 RowBox[{"net5", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"nn5", ",", "TrainingSample24", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "ValidationSample24"}], ",", " ", 
    RowBox[{"TargetDevice", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GPU\>\"", ",", "2"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.762802379181331*^9, 3.762802395927357*^9}, {
  3.7647053233975964`*^9, 3.764705324078682*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"781a0a9b-e941-4d11-9c0a-c33b3f9977d0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"24\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 24}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{96, 96}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{96, 96}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 96}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 24}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {2883060, 12561520, 7940434, 11858125, 
                    3391327, 15102130, 12095037, 13072823, 466994, 8530001, 
                    5792212, 8468973, 14092741, 4325655, 14975215, 15915716, 
                    1580403, 13925119, 14202249, 11583503}, "InputDepth" -> 1,
                     "Dimensions" -> 20, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"24\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7628029981561227`*^9, 3.762803375144537*^9, 
  3.762803459431031*^9, 3.7628040933461213`*^9, 3.7628069521992292`*^9, 
  3.7628071207048593`*^9, 3.7646841069944925`*^9, 3.764686836866519*^9, 
  3.764705017540773*^9, 3.76470537363888*^9, 3.764705908866315*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"1fc61091-6bb4-429e-b13a-d85c5434477f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net5", ",", " ", "TestSample24", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7628023406181097`*^9, {3.7628024010933113`*^9, 3.7628024064285297`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"f4c768e3-d489-4c88-894d-6749d9e23f79"],

Cell[BoxData["0.6147757255936676`"], "Output",
 CellChangeTimes->{3.762802998359005*^9, 3.7628033752744627`*^9, 
  3.7628034596055794`*^9, 3.7628040935070276`*^9, 3.762806952371131*^9, 
  3.76280712085777*^9, 3.764684107172389*^9, 3.7646868370384274`*^9, 
  3.7647042310067415`*^9, 3.7647050177226677`*^9, 3.764705373821771*^9, 
  3.7647059090352187`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"4832c779-e92b-47b3-8459-14368b063806"]
}, Open  ]],

Cell["Now, lets try the smaller model.", "Text",
 CellChangeTimes->{{3.7628034186675396`*^9, 
  3.7628034296116624`*^9}},ExpressionUUID->"1f2395db-0a7f-414d-ae39-\
c3de850e23d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn6", " ", "=", " ", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FlattenLayer", "[", "]"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", 
       RowBox[{"24", "*", "4"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "]"}], ",", "Ramp", ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", "\n", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", "class"}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "24"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7628034430309362`*^9, 3.762803454885606*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"9875b533-db16-4b52-9824-ad535eb59ed9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"24\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 24}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 96}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 24}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {2883060, 12561520, 7940434, 11858125, 
                    3391327, 15102130, 12095037, 13072823, 466994, 8530001, 
                    5792212, 8468973, 14092741, 4325655, 14975215, 15915716, 
                    1580403, 13925119, 14202249, 11583503}, "InputDepth" -> 1,
                     "Dimensions" -> 20, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"24\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.762803464343603*^9, 3.7628040936189632`*^9, 
  3.76280695247707*^9, 3.762807121020677*^9, 3.764684107305314*^9, 
  3.7646868371519456`*^9, 3.7647050178266087`*^9, 3.7647059091451564`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"5a9683f2-27d6-4c4d-aa3f-d9a2d4d200ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "31416", "]"}], "\[IndentingNewLine]", 
 RowBox[{"net6", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"nn6", ",", "TrainingSample24", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "ValidationSample24"}], ",", " ", 
    RowBox[{"TargetDevice", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GPU\>\"", ",", "2"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.762803468789688*^9, 3.7628034738868484`*^9}, {
  3.764705247406303*^9, 3.7647052607187743`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"43ed097b-79cb-4bfc-a1fe-6805785d8322"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"24\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 24}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{96, 96}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 96}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 24}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {2883060, 12561520, 7940434, 11858125, 
                    3391327, 15102130, 12095037, 13072823, 466994, 8530001, 
                    5792212, 8468973, 14092741, 4325655, 14975215, 15915716, 
                    1580403, 13925119, 14202249, 11583503}, "InputDepth" -> 1,
                     "Dimensions" -> 20, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"24\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"96\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.762803516930682*^9, 3.7628041612158766`*^9, 
  3.7628070024088326`*^9, 3.762807168779218*^9, 3.764684219512739*^9, 
  3.76468693022799*^9, 3.764705084563007*^9, 3.764705302075528*^9, 
  3.7647059655337095`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"4812131a-ee54-4bb2-9569-0ec8f4396c23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"net6", ",", " ", "TestSample24", ",", " ", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.762803487651326*^9, 3.7628034931646805`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"60c8931c-2b4f-46a6-bfd0-f779a133b840"],

Cell[BoxData["0.6411609498680739`"], "Output",
 CellChangeTimes->{3.762803517064604*^9, 3.7628041614037666`*^9, 
  3.7628070025627403`*^9, 3.762807168939574*^9, 3.764684219738609*^9, 
  3.7646869304248767`*^9, 3.764705084740902*^9, 3.7647053023523684`*^9, 
  3.764705965687544*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"af1b13b6-2db6-4fbb-b248-0e44d7651fb1"]
}, Open  ]],

Cell["We can say that the performance is lower.", "Text",
 CellChangeTimes->{{3.762804190621267*^9, 
  3.7628042279958105`*^9}},ExpressionUUID->"4f9562dd-f204-440c-8172-\
383fb4c7dec2"],

Cell[CellGroupData[{

Cell["The Performance of an Algorithmic Classifier.", "Subsection",
 CellChangeTimes->{{3.7628042328192816`*^9, 
  3.762804255442974*^9}},ExpressionUUID->"948a4356-af1a-4b74-9d09-\
1f83e7047ab0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model24", " ", "=", " ", 
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"toBinaryInt", "[", 
       RowBox[{"0", ",", "24"}], "]"}], "&"}], ",", "class"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.762804994865248*^9, 3.7628050123733053`*^9}, 
   3.7628131259667478`*^9},
 CellLabel->
  "In[173]:=",ExpressionUUID->"55cec6e4-5514-4988-8ddf-61dde0aec2d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"train", "[", 
   RowBox[{"st_", ",", "model_", ",", 
    RowBox[{"searchSet_:", "searchSet"}], ",", " ", "data_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Keys", "@", "model"}], " ", "->", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"cls", " ", "=", " ", 
           RowBox[{"class", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"old", " ", "=", " ", 
           RowBox[{"model", "[", 
            RowBox[{"class", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ss", " ", "=", " ", 
           RowBox[{"ChooseDat", "[", 
            RowBox[{"data", ",", 
             RowBox[{"class", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"With", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", " ", "=", " ", 
            RowBox[{
             RowBox[{"MinimalBy", "[", "\[IndentingNewLine]", 
              RowBox[{"searchSet", ",", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"cost", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"replace", "[", 
                   RowBox[{"old", ",", "#", ",", "st"}], "]"}], ",", 
                  "\[IndentingNewLine]", "ss", ",", "\[IndentingNewLine]", 
                  "6", ",", "6"}], "\[IndentingNewLine]", "]"}], 
                "\[IndentingNewLine]", "&"}], ",", "1"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"replace", "[", 
           RowBox[{"old", ",", "r", ",", "st"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "@", "class"}]}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7628052142568736`*^9, 3.762805247726564*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"e1e09a8d-5848-4bd4-9eee-5992acb04b02"],

Cell[CellGroupData[{

Cell[BoxData["class"], "Input",
 CellChangeTimes->{{3.7628054961093187`*^9, 3.762805497220244*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"f9a87905-e63a-4728-ba43-2fc13ed5fe4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2883060", ",", "12561520", ",", "7940434", ",", "11858125", ",", "3391327",
    ",", "15102130", ",", "12095037", ",", "13072823", ",", "466994", ",", 
   "8530001", ",", "5792212", ",", "8468973", ",", "14092741", ",", "4325655",
    ",", "14975215", ",", "15915716", ",", "1580403", ",", "13925119", ",", 
   "14202249", ",", "11583503"}], "}"}]], "Output",
 CellChangeTimes->{3.762805497783538*^9, 3.7628070026696796`*^9, 
  3.764684219868535*^9, 3.7646869305228205`*^9, 3.764705084875825*^9, 
  3.764705965785488*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"5d39f7f8-bcc8-40af-b9a5-d140944f8b04"]
}, Open  ]],

Cell["Sanity check.", "Text",
 CellChangeTimes->{{3.7628057086922493`*^9, 
  3.76280571429926*^9}},ExpressionUUID->"c5932ea3-0be4-477a-bb3c-\
f0ec831c1bde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cost", "[", 
  RowBox[{
   RowBox[{"classB", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ChooseDat", "[", 
    RowBox[{"TrainingSample24", ",", 
     RowBox[{"class", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", "6", ",", "6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7628056051799755`*^9, 3.762805611396945*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"8cec1676-a814-4f04-a138-ac850b483545"],

Cell[BoxData["117553.70457311062`"], "Output",
 CellChangeTimes->{3.762805612689339*^9, 3.7628070027026606`*^9, 
  3.7646842199245033`*^9, 3.7646869305647974`*^9, 3.764705084922798*^9, 
  3.7647059658264647`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"1c269727-1e9c-4bc0-a827-dfff6269ffee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cost", "[", 
  RowBox[{
   RowBox[{"classB", "[", 
    RowBox[{"[", "12", "]"}], "]"}], ",", 
   RowBox[{"ChooseDat", "[", 
    RowBox[{"TrainingSample24", ",", 
     RowBox[{"class", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", "6", ",", "6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7628056174559555`*^9, 3.7628056208543005`*^9}, {
  3.7628056592951145`*^9, 3.7628056982081585`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"a3b4bd80-cb5d-4c62-a594-4f3c22cec4c9"],

Cell[BoxData["1.607540658728956`*^6"], "Output",
 CellChangeTimes->{
  3.7628056216945505`*^9, {3.7628056611803055`*^9, 3.762805699734868*^9}, 
   3.7628070027296453`*^9, 3.764684219952488*^9, 3.764686930605774*^9, 
   3.7647050849524827`*^9, 3.7647059658654423`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"bf657baf-9798-4acc-8481-bde90109d26e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "=", " ", 
  RowBox[{"classB", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7628062696296463`*^9, 3.7628062752240486`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"cc023f20-99fa-4bd3-8a03-253f92d76a00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7628062770901613`*^9, 3.762807002753631*^9, 
  3.7646842199784737`*^9, 3.7646869306357574`*^9, 3.7647050849774714`*^9, 
  3.764705965897324*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"a0da7b29-d561-4be5-a184-d84903667ce4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"model24", " ", "=", 
   RowBox[{"train", "[", 
    RowBox[{
    "0", ",", "model24", ",", "searchSet", ",", " ", "TrainingSample24"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762805105724114*^9, 3.7628051373492875`*^9}, {
   3.7628052592510767`*^9, 3.7628052658893523`*^9}, {3.7628053110683374`*^9, 
   3.762805311525076*^9}, {3.7628054456012993`*^9, 3.7628054457232313`*^9}, {
   3.762812839911973*^9, 3.76281284085798*^9}, 3.7628129653349857`*^9},
 CellLabel->
  "In[179]:=",ExpressionUUID->"7ce9b273-58aa-424d-9185-4bd96bbf03ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model24", " ", "=", 
   RowBox[{"train", "[", 
    RowBox[{
    "6", ",", "model24", ",", "searchSet", ",", " ", "TrainingSample24"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7628129743337717`*^9, 3.7628129808671513`*^9}, {
  3.762813219234761*^9, 3.762813219457246*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"9d55571c-45b1-4ab2-9799-53d1be6a6e5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model24", " ", "=", 
   RowBox[{"train", "[", 
    RowBox[{
    "12", ",", "model24", ",", "searchSet", ",", " ", "TrainingSample24"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762812978027991*^9, 3.762812986443949*^9}, {
  3.7628132246510477`*^9, 3.7628132296107225`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"7d48cc96-577b-4dff-8031-88edfaf3d0d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model24", " ", "=", 
   RowBox[{"train", "[", 
    RowBox[{
    "18", ",", "model24", ",", "searchSet", ",", " ", "TrainingSample24"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7628129899566946`*^9, 3.7628130112978363`*^9}, {
  3.762813234468927*^9, 3.762813235417994*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"60d3585b-39fa-4151-bdfd-de94d0551853"],

Cell["Lets measure the accuracy of the model. ", "Text",
 CellChangeTimes->{{3.762813259938629*^9, 
  3.7628132688815084`*^9}},ExpressionUUID->"1c3ee56f-f5ff-49a2-9dc3-\
4a156dbf9243"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"acc", "[", 
     RowBox[{"model_", ",", " ", "set_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Total", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"pred", "[", "\[IndentingNewLine]", 
            RowBox[{"model", ",", " ", 
             RowBox[{
              RowBox[{"set", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "6", ",", "6"}], 
            "\[IndentingNewLine]", "]"}], "\[Equal]", " ", 
           RowBox[{
            RowBox[{"set", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "1",
           ",", "\[IndentingNewLine]", "0"}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "set", "]"}]}], "}"}]}], "]"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"Length", "@", "set"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.762813659348072*^9, 3.762813724770162*^9}, {
  3.762813810939005*^9, 3.7628138625220976`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"18565358-f8ba-431a-80b7-6e5c960532c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"acc", "[", 
   RowBox[{"model24", ",", "TestSample24"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.762813959680833*^9, 3.762813993205236*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"e55e1dc8-10f6-462d-892e-d5c6d1e9862a"],

Cell[BoxData["0.9656992084432717`"], "Output",
 CellChangeTimes->{{3.7628139882560673`*^9, 3.7628139943006105`*^9}, 
   3.7646842275426836`*^9, 3.7646869373800297`*^9, 3.7647050915280952`*^9, 
   3.764705972496785*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"13ce25ea-acda-4169-8246-5f09097bb410"]
}, Open  ]],

Cell["\<\
In contrast, the accuracy of the algorithmic model increased to 96%!\
\>", "Text",
 CellChangeTimes->{{3.762813999161826*^9, 
  3.7628140287169085`*^9}},ExpressionUUID->"c7086442-4536-4cfb-8927-\
4fe23c33163d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"right", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wrong3", " ", "=", " ", 
  RowBox[{"List", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pred", "[", "\[IndentingNewLine]", 
        RowBox[{"model2", ",", " ", 
         RowBox[{
          RowBox[{"TrainingSample24", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "6", ",", "6"}], 
        "\[IndentingNewLine]", "]"}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"TrainingSample24", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"right", " ", "=", " ", 
       RowBox[{"right", " ", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"wrong2", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"wrong2", ",", 
         RowBox[{"TrainingSample24", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "TrainingSample24", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7646854459620953`*^9, 3.7646854636992826`*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"928da650-c42b-43df-823d-9490ea820dc7"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7646869374190083`*^9, 3.76470509159006*^9, 
  3.764705972539761*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"cb1238e0-3232-4c36-aeec-d7f53951a223"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"acc", "[", 
   RowBox[{"model24", ",", "TrainingSample24"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.764685469937722*^9, 3.7646854762161393`*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"a805a423-ce45-4a13-8f51-a0352a3a2beb"],

Cell[BoxData["0.9838709677419355`"], "Output",
 CellChangeTimes->{3.7646869379377117`*^9, 3.7647050921000767`*^9, 
  3.764705973059464*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"c9b9a266-874e-4552-b3de-e417572e3814"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1393, 574},
WindowMargins->{{Automatic, 256}, {145, Automatic}},
Magnification->1.25,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 237, 4, 121, "Title",ExpressionUUID->"7e7ce25d-69cb-457d-9794-43456421d5ad"],
Cell[820, 28, 299, 8, 43, "Text",ExpressionUUID->"9f7f39b6-654b-4ccc-96e7-916d3b12f15e"],
Cell[CellGroupData[{
Cell[1144, 40, 158, 3, 79, "Subchapter",ExpressionUUID->"b14af9c2-8923-4133-b655-96be83b8c98c"],
Cell[1305, 45, 359, 9, 43, "Text",ExpressionUUID->"c14fd1da-fe0c-496c-8d65-0aaaf1fdab94"],
Cell[1667, 56, 292, 7, 43, "Text",ExpressionUUID->"b8b02f2c-0c5f-444c-8a48-f18d2d570beb"],
Cell[1962, 65, 465, 9, 64, "Code",ExpressionUUID->"b3abc2fb-f1ff-49f5-8fbe-0e871fba0d9a"],
Cell[2430, 76, 312, 7, 64, "Code",ExpressionUUID->"24f0a916-d946-4271-ba5e-1a258debe037"],
Cell[2745, 85, 404, 9, 43, "Text",ExpressionUUID->"330c34e0-aaa9-4fa1-9298-5019daa2abb5"],
Cell[CellGroupData[{
Cell[3174, 98, 814, 15, 111, "Code",ExpressionUUID->"79a8ebc7-a022-4fd9-bcb7-a1253552f629"],
Cell[3991, 115, 2264, 33, 40, "Output",ExpressionUUID->"bcaa3621-513a-45f8-967c-dde521c68678"],
Cell[6258, 150, 3828, 71, 89, "Output",ExpressionUUID->"18adb36b-41d4-4e8e-86aa-22f309824476"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10123, 226, 169, 3, 162, "Subsection",ExpressionUUID->"e7f144d5-af9c-44a2-823e-50eb89acd30b"],
Cell[10295, 231, 291, 4, 104, "Text",ExpressionUUID->"4f631990-1d75-4ff5-954d-55702e0f7815"],
Cell[10589, 237, 663, 11, 214, "Code",ExpressionUUID->"ff1ffc72-f9cd-47b3-a092-68a66916d13a"],
Cell[11255, 250, 4524, 109, 1842, "Code",ExpressionUUID->"39a6d33f-a5f1-45d3-a5c3-9468db0dafb8"],
Cell[15782, 361, 195, 3, 104, "Text",ExpressionUUID->"1c23506d-e288-4136-98ae-081a32475c06"],
Cell[CellGroupData[{
Cell[16002, 368, 293, 5, 84, "Input",ExpressionUUID->"275e3797-b171-4bc1-a6c0-abd4fe1b4a31"],
Cell[16298, 375, 2303, 42, 157, "Output",ExpressionUUID->"fb7d87f9-4389-4e8d-bd9c-d2c3544641d7"]
}, Open  ]],
Cell[18616, 420, 219, 4, 104, "Text",ExpressionUUID->"c41f58fb-aecc-4b9a-b457-03fe31aca1b9"],
Cell[CellGroupData[{
Cell[18860, 428, 359, 7, 84, "Input",ExpressionUUID->"658a3dfc-6c04-47d6-8a79-e07e49905f6b"],
Cell[19222, 437, 1803, 31, 448, "Output",ExpressionUUID->"40f58b58-2432-4341-b8d1-b892d755aecf"]
}, Open  ]],
Cell[21040, 471, 172, 3, 104, "Text",ExpressionUUID->"bbfe2385-96fd-4068-972f-8bdd07c9743b"],
Cell[CellGroupData[{
Cell[21237, 478, 349, 8, 84, "Input",ExpressionUUID->"8237f6de-421e-439d-a2e8-d08077a229b3"],
Cell[21589, 488, 1665, 29, 162, "Output",ExpressionUUID->"6a532833-c794-4b7d-9a2f-0fe64926d586"]
}, Open  ]],
Cell[23269, 520, 176, 3, 104, "Text",ExpressionUUID->"3c73f526-faef-4787-af58-fbc0346183ae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23494, 529, 192, 3, 209, "Chapter",ExpressionUUID->"185fce28-9713-4a40-b449-63d035343cf5"],
Cell[23689, 534, 210, 4, 104, "Text",ExpressionUUID->"824e4c34-421f-46d1-a0df-733980801e02"],
Cell[23902, 540, 1445, 41, 204, "Input",ExpressionUUID->"6f5bed40-b6b1-4aa8-b619-229b04d690f2"],
Cell[CellGroupData[{
Cell[25372, 585, 237, 4, 84, "Input",ExpressionUUID->"ba55610e-e13d-4481-9666-e019bf7d7d04"],
Cell[25612, 591, 1100, 25, 157, "Output",ExpressionUUID->"8db416dc-eb42-400e-83fb-2ea7c4b0a9fa"]
}, Open  ]],
Cell[26727, 619, 1840, 37, 145, "Input",ExpressionUUID->"7568163f-1c42-427a-8476-9044b65f2e44"],
Cell[CellGroupData[{
Cell[28592, 660, 783, 15, 84, "Input",ExpressionUUID->"046c6b85-8f7c-490a-a473-54b63f410a41"],
Cell[29378, 677, 29110, 590, 287, "Output",ExpressionUUID->"d52fef66-2c58-42f6-997f-32dd66142573"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58525, 1272, 370, 6, 84, "Input",ExpressionUUID->"96f00197-c666-4cab-b9e3-e263a2de3675"],
Cell[58898, 1280, 1637, 23, 96, "Output",ExpressionUUID->"ec290824-5cee-4098-8a9f-746fabe77af5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60572, 1308, 299, 5, 84, "Input",ExpressionUUID->"5d268186-8cca-46b4-8931-b667b892a195"],
Cell[60874, 1315, 281, 4, 96, "Output",ExpressionUUID->"f94058cd-b485-44b7-ad8c-92d6d0d01afe"]
}, Open  ]],
Cell[61170, 1322, 240, 4, 104, "Text",ExpressionUUID->"9536722d-333f-427e-a2ac-cb973287f4cb"],
Cell[61413, 1328, 316, 9, 104, "Text",ExpressionUUID->"0a201a19-8bdb-4742-8ce7-57d82a740b67"],
Cell[CellGroupData[{
Cell[61754, 1341, 1322, 29, 439, "Input",ExpressionUUID->"bf013759-4993-4cc4-af80-b4b37776fd29"],
Cell[63079, 1372, 32966, 668, 287, "Output",ExpressionUUID->"04ca0dd4-8974-425e-8d40-ec448fd70b18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96082, 2045, 743, 13, 145, "Input",ExpressionUUID->"f3560168-2f5a-43fe-ac23-f7116aa06cd1"],
Cell[96828, 2060, 32119, 646, 287, "Output",ExpressionUUID->"d84ed597-7340-4e2a-a597-8d1dd2d2b4b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128984, 2711, 345, 6, 84, "Input",ExpressionUUID->"479442f9-a63a-4d8c-bd28-5e7b1b1546e1"],
Cell[129332, 2719, 1860, 26, 96, "Output",ExpressionUUID->"d1670529-738f-4df4-b88f-28cab3a3af37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131229, 2750, 328, 6, 84, "Input",ExpressionUUID->"2b2faf8b-6861-4d7c-939f-e5a64d94b2f2"],
Cell[131560, 2758, 240, 3, 96, "Output",ExpressionUUID->"68fc90ff-08c3-46c6-9665-f70987914d4d"]
}, Open  ]],
Cell[131815, 2764, 978, 18, 104, "Text",ExpressionUUID->"b272a8aa-15a4-45ea-a6b4-3f860f1c622f"],
Cell[132796, 2784, 207, 3, 104, "Text",ExpressionUUID->"82cc9e35-e722-42c5-b27f-6d097c11e6b3"],
Cell[CellGroupData[{
Cell[133028, 2791, 1336, 26, 439, "Input",ExpressionUUID->"aa2d1b7a-591b-4a0c-b459-aac580c61776"],
Cell[134367, 2819, 37989, 781, 287, "Output",ExpressionUUID->"6fd9f6fc-4d21-4b2f-a209-24748fcd73b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172393, 3605, 468, 9, 84, "Input",ExpressionUUID->"8567b610-7a35-49ca-933f-5109388488e7"],
Cell[172864, 3616, 37089, 756, 287, "Output",ExpressionUUID->"be5f9544-bb52-4bfb-a832-4ec1b7be662f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209990, 4377, 297, 5, 84, "Input",ExpressionUUID->"91205fac-5b8c-41b7-94dd-581a85001996"],
Cell[210290, 4384, 578, 8, 96, "Output",ExpressionUUID->"a2b238f4-2c0a-4fd1-9f8c-a177462d9ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210905, 4397, 297, 5, 84, "Input",ExpressionUUID->"563bf8fc-8f98-45cc-a17c-f1f69da7a800"],
Cell[211205, 4404, 216, 3, 96, "Output",ExpressionUUID->"6c542516-f93f-43a1-b804-6a082ab05e5c"]
}, Open  ]],
Cell[211436, 4410, 449, 8, 104, "Text",ExpressionUUID->"78b4d022-cf3a-423c-8e5a-596c308a005b"],
Cell[CellGroupData[{
Cell[211910, 4422, 1718, 32, 673, "Input",ExpressionUUID->"7d0f15f8-8faf-4697-bf31-6c4a5a6c8478"],
Cell[213631, 4456, 61740, 1273, 287, "Output",ExpressionUUID->"63c051ba-80fe-40da-909f-7df85c5838a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275408, 5734, 669, 13, 145, "Input",ExpressionUUID->"cf679df0-ab00-43f0-9abb-bc26fd845a82"],
Cell[276080, 5749, 60533, 1241, 287, "Output",ExpressionUUID->"a2effc5c-9eb8-478b-afcf-616dab5cd8f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336650, 6995, 293, 5, 84, "Input",ExpressionUUID->"7aade69d-ec5f-403a-b23c-971452e2baf7"],
Cell[336946, 7002, 579, 8, 96, "Output",ExpressionUUID->"c0eb8de8-b878-4290-bdcb-ddc956741eaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337562, 7015, 301, 5, 84, "Input",ExpressionUUID->"fc81d96e-2c76-400e-9326-81edcae54e98"],
Cell[337866, 7022, 517, 7, 96, "Output",ExpressionUUID->"5a06cac5-3f66-41b8-aee0-b35bf3f51ed4"]
}, Open  ]],
Cell[338398, 7032, 337, 5, 104, "Text",ExpressionUUID->"4ba9015c-e5f7-42a1-9932-d2e718871d06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338772, 7042, 249, 4, 209, "Chapter",ExpressionUUID->"05d2e5cf-1ec6-45de-95f1-e3c492411593"],
Cell[CellGroupData[{
Cell[339046, 7050, 213, 7, 192, "Subchapter",ExpressionUUID->"9ad25ff9-3b52-477b-9db8-8916466eae33"],
Cell[CellGroupData[{
Cell[339284, 7061, 165, 3, 135, "Subsubsection",ExpressionUUID->"98c33cfe-5504-4a66-946e-4cc01426da38"],
Cell[339452, 7066, 348, 11, 104, "Text",ExpressionUUID->"518bc4dd-542b-446e-a67a-32efd912514f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339837, 7082, 273, 8, 201, "Section",ExpressionUUID->"d22f02e5-b828-40f4-a74d-1ef35c286df4"],
Cell[340113, 7092, 1119, 39, 240, "Text",ExpressionUUID->"fe75cbd9-33fc-4a69-a9da-f2cc61b0768c"],
Cell[341235, 7133, 450, 8, 171, "Text",ExpressionUUID->"b01d8c44-c8cb-4c2e-b342-c9f34dbb91ae"],
Cell[341688, 7143, 321, 6, 84, "Input",ExpressionUUID->"e9627754-aa0b-4d0c-b243-a1fe999aab2f"],
Cell[342012, 7151, 542, 12, 171, "Text",ExpressionUUID->"f2de6c5b-9056-4ba4-82a3-f78158d67fde"],
Cell[342557, 7165, 442, 8, 84, "Input",ExpressionUUID->"3102c833-01de-45fb-821e-d564dff4fc76"],
Cell[CellGroupData[{
Cell[343024, 7177, 232, 4, 84, "Input",ExpressionUUID->"ef3e63d7-dd6e-4c46-99be-21d8b50434b9"],
Cell[343259, 7183, 981, 14, 96, "Output",ExpressionUUID->"df16cc08-8ec2-45a4-abb5-33b6d39b421c"]
}, Open  ]],
Cell[344255, 7200, 168, 3, 104, "Text",ExpressionUUID->"4dbe268f-de4e-4978-88d4-8f0a79ec196b"],
Cell[CellGroupData[{
Cell[344448, 7207, 471, 12, 84, "Input",ExpressionUUID->"b4e18a5f-75c6-4d81-87f5-13b62108e15b"],
Cell[344922, 7221, 1458, 31, 96, "Output",ExpressionUUID->"5dbed850-e55d-459e-95f8-6075a027ad51"]
}, Open  ]],
Cell[346395, 7255, 287, 7, 104, "Text",ExpressionUUID->"31b91aa7-24d4-4b52-9df7-06d32bd045d7"],
Cell[346685, 7264, 877, 20, 439, "Input",ExpressionUUID->"f98bd51d-4010-4ab0-b15f-9b0f98e8e5c7"],
Cell[CellGroupData[{
Cell[347587, 7288, 175, 3, 162, "Subsection",ExpressionUUID->"e7f3b51f-8746-4d86-9f82-da7a9642e3c1"],
Cell[347765, 7293, 533, 13, 171, "Text",ExpressionUUID->"775a5f4c-3655-43c9-8f17-e80ebec1f92d"],
Cell[CellGroupData[{
Cell[348323, 7310, 232, 4, 84, "Input",ExpressionUUID->"8e11c054-c6eb-4c87-b640-1fef669b5f0b"],
Cell[348558, 7316, 906, 12, 96, "Output",ExpressionUUID->"d749f0a3-2f61-4598-8927-bb0cadb0caa4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349501, 7333, 271, 5, 84, "Input",ExpressionUUID->"7e32bb5a-4fe8-4208-aa78-d2cd89390d26"],
Cell[349775, 7340, 803, 11, 96, "Output",ExpressionUUID->"14f1f76c-faad-453e-ae16-df6b798eacb4"]
}, Open  ]],
Cell[350593, 7354, 770, 14, 145, "Input",ExpressionUUID->"28314e95-58db-4a2f-ab06-18940a4a8301"],
Cell[351366, 7370, 156, 3, 104, "Text",ExpressionUUID->"23ff0a64-0c7b-4c37-b395-021db6a9bab2"],
Cell[CellGroupData[{
Cell[351547, 7377, 616, 12, 84, "Input",ExpressionUUID->"ab775d2e-9e63-48ca-944d-7c8fa1de41f1"],
Cell[352166, 7391, 1885, 36, 157, "Output",ExpressionUUID->"b8e244c6-7ce8-4841-b9f9-fc0f1e90e740"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354088, 7432, 1134, 26, 84, "Input",ExpressionUUID->"7a5b22d6-cad0-492a-88c4-028cef1fb818"],
Cell[355225, 7460, 1674, 24, 139, "Output",ExpressionUUID->"c7222dac-fb84-4854-a8d2-c7e8d8118999"]
}, Open  ]],
Cell[356914, 7487, 172, 3, 104, "Text",ExpressionUUID->"1fbef7b2-3058-401f-a9f8-454d6ea7298f"],
Cell[CellGroupData[{
Cell[357111, 7494, 857, 22, 84, "Input",ExpressionUUID->"18b5c3f9-2c98-4305-a4d7-4cf381ae88ef"],
Cell[357971, 7518, 1027, 15, 96, "Output",ExpressionUUID->"d24fac32-0c0c-407a-bd55-a6d40d5198dd"]
}, Open  ]],
Cell[359013, 7536, 176, 3, 104, "Text",ExpressionUUID->"83ddaf1e-d52b-4e98-8222-f2aed3301b47"],
Cell[359192, 7541, 492, 9, 104, "Text",ExpressionUUID->"ed822238-bd4e-4ed4-9359-379fd2c1e964"],
Cell[CellGroupData[{
Cell[359709, 7554, 327, 8, 84, "Input",ExpressionUUID->"30e58d5e-893b-453b-a23f-8734de043880"],
Cell[360039, 7564, 966, 13, 96, "Output",ExpressionUUID->"31e70168-c8e8-4aa0-a8f8-16158f692e7c"]
}, Open  ]],
Cell[361020, 7580, 455, 7, 84, "Input",ExpressionUUID->"311e7515-5a1e-4aa9-ab59-9aeb94fff8c1"],
Cell[361478, 7589, 1488, 40, 439, "Input",ExpressionUUID->"79045886-39e0-42c0-aab4-6d15371dbce6"],
Cell[CellGroupData[{
Cell[362991, 7633, 1008, 25, 84, "Input",ExpressionUUID->"b23e1b8d-7355-4de3-b766-d3fdcfc87ed3"],
Cell[364002, 7660, 1505, 20, 96, "Output",ExpressionUUID->"a3af0628-5c5d-472a-92c8-c410bd125c3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365544, 7685, 891, 23, 84, "Input",ExpressionUUID->"d819c1b6-c57b-41e7-8a5c-4ffd50d8cdc3"],
Cell[366438, 7710, 1075, 15, 96, "Output",ExpressionUUID->"236962b8-af31-4318-ae7b-b48109f096c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[367574, 7732, 166, 3, 201, "Section",ExpressionUUID->"89e68c1a-a124-47fa-8fe6-3915ad386378"],
Cell[367743, 7737, 250, 4, 104, "Text",ExpressionUUID->"3781c310-9325-493d-84cd-c1a2d85efc33"],
Cell[367996, 7743, 592, 16, 204, "Input",ExpressionUUID->"ea0752b8-fc06-470f-b44c-0292c92ed67d"],
Cell[368591, 7761, 2196, 51, 614, "Input",ExpressionUUID->"7dbcb2bc-811d-4eff-9fbf-940519166bfe"],
Cell[CellGroupData[{
Cell[370812, 7816, 1461, 31, 145, "Input",ExpressionUUID->"c2c8fdd8-17e8-4108-a6b6-ec164faaa5a1"],
Cell[372276, 7849, 1366, 19, 96, "Output",ExpressionUUID->"93017bc2-609a-486e-ac45-9e227e5f135c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373679, 7873, 523, 11, 84, "Input",ExpressionUUID->"fcefae1f-7845-4c90-b832-9ee57f832b50"],
Cell[374205, 7886, 1939, 37, 157, "Output",ExpressionUUID->"883d75f5-d1f0-4104-bbdb-538531e056f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376181, 7928, 1478, 32, 204, "Input",ExpressionUUID->"898392fc-5e85-4172-a764-7d051e092435"],
Cell[377662, 7962, 1301, 17, 96, "Output",ExpressionUUID->"334d8297-4a1b-4a59-b31d-2f819428a8ee"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[379024, 7986, 185, 4, 300, "Subchapter",ExpressionUUID->"a804a73c-37ad-4916-b223-63fe141eee9c"],
Cell[379212, 7992, 296, 6, 162, "Text",ExpressionUUID->"ba20ef52-30ac-470f-8200-6a5027c944f8"],
Cell[CellGroupData[{
Cell[379533, 8002, 527, 11, 131, "Input",ExpressionUUID->"d81acffa-9668-4776-acb5-852f100552d3"],
Cell[380063, 8015, 3435, 71, 429, "Output",ExpressionUUID->"f1e70342-854b-46a8-a158-99b85867358b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383535, 8091, 170, 3, 253, "Subsection",ExpressionUUID->"6fe75526-2e3d-4688-88e0-0440365fcc71"],
Cell[383708, 8096, 194, 3, 162, "Text",ExpressionUUID->"03176702-842b-4fc4-81fc-cfeb79858fa3"],
Cell[383905, 8101, 482, 13, 131, "Input",ExpressionUUID->"4fca058b-e24c-4b6e-8724-e8333317c628"],
Cell[384390, 8116, 1112, 24, 409, "Input",ExpressionUUID->"b2478de8-ad8f-4b0f-988a-ab84f72dbc3a"],
Cell[CellGroupData[{
Cell[385527, 8144, 237, 4, 131, "Input",ExpressionUUID->"f61de796-dca9-4123-8eab-b2d12a44c3e4"],
Cell[385767, 8150, 1497, 30, 245, "Output",ExpressionUUID->"ef829601-986b-47df-bbf5-94350695fdbd"]
}, Open  ]],
Cell[387279, 8183, 207, 4, 162, "Text",ExpressionUUID->"005350aa-c297-49bb-a91b-894b1e755683"],
Cell[CellGroupData[{
Cell[387511, 8191, 607, 13, 131, "Input",ExpressionUUID->"d648c8aa-f99f-4386-8924-84256f66e2ec"],
Cell[388121, 8206, 620, 11, 150, "Output",ExpressionUUID->"427d1b8b-5e28-4475-b21d-9125fffd3306"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388778, 8222, 582, 13, 131, "Input",ExpressionUUID->"f66e6171-148d-492e-81e2-a921b9b5a162"],
Cell[389363, 8237, 1293, 18, 150, "Output",ExpressionUUID->"299480a8-9d04-4e1e-a1a7-05757747bdab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390693, 8260, 774, 16, 131, "Input",ExpressionUUID->"cb58006a-a07f-4455-ac87-5d54a3ab3b95"],
Cell[391470, 8278, 1223, 17, 150, "Output",ExpressionUUID->"2cd2f3a6-2ff4-43a6-9490-7c4f32adee17"]
}, Open  ]],
Cell[392708, 8298, 1207, 24, 131, "Input",ExpressionUUID->"713e5033-6e8d-4bba-a810-57797a2a2f34"],
Cell[393918, 8324, 358, 12, 162, "Text",ExpressionUUID->"68e6b6ab-ab1d-41b4-8343-d000279c30d9"],
Cell[394279, 8338, 2601, 50, 868, "Input",ExpressionUUID->"a15a4f8c-1639-4fa4-b434-0a0584b98e94"],
Cell[CellGroupData[{
Cell[396905, 8392, 204, 3, 84, "Input",ExpressionUUID->"99b81959-ed09-4b5a-acf2-8f085ada8fe6"],
Cell[397112, 8397, 3390, 71, 275, "Output",ExpressionUUID->"bc87dca7-6cd7-47fe-9321-e397d002f180"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400539, 8473, 307, 5, 84, "Input",ExpressionUUID->"c76b7f57-5792-4ac4-a5a5-31f8384487d6"],
Cell[400849, 8480, 3371, 86, 275, "Output",ExpressionUUID->"f4235757-473c-4ddb-b760-e8a1d7dc6d6a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[404281, 8573, 166, 3, 192, "Subchapter",ExpressionUUID->"e942fb1a-1cf8-4f25-b798-190a9b2be271"],
Cell[404450, 8578, 182, 3, 104, "Text",ExpressionUUID->"9b61cdc4-a961-4008-bda2-846ed5280990"],
Cell[404635, 8583, 778, 19, 84, "Input",ExpressionUUID->"3aa4477a-e46b-4bbc-bd18-db21b3488342"],
Cell[CellGroupData[{
Cell[405438, 8606, 399, 8, 84, "Input",ExpressionUUID->"17e0edd1-9535-4a9d-861f-d20daf656dbe"],
Cell[405840, 8616, 860, 12, 96, "Output",ExpressionUUID->"b2b430cc-3656-4a34-be54-079169dab068"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406737, 8633, 1561, 37, 673, "Input",ExpressionUUID->"55de0096-97ef-4f34-b5a3-be955ba2537a"],
Cell[408301, 8672, 870, 13, 150, "Output",ExpressionUUID->"2ae0fa78-db18-47b5-b6f1-5ed4beaf84f2"]
}, Open  ]],
Cell[409186, 8688, 160, 2, 162, "Text",ExpressionUUID->"1e25dbed-aad5-467b-acf7-6e036db139e2"],
Cell[CellGroupData[{
Cell[409371, 8694, 180, 2, 131, "Input",ExpressionUUID->"e5c3c409-f786-4ce5-915c-6c7e1e9c4480"],
Cell[409554, 8698, 830, 11, 150, "Output",ExpressionUUID->"dcae0356-de32-493d-9705-a4b5ad04f2a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410421, 8714, 263, 5, 131, "Input",ExpressionUUID->"143f2708-cbfa-412c-a62e-242a054a02cf"],
Cell[410687, 8721, 881, 12, 150, "Output",ExpressionUUID->"75832b34-f54b-4f96-addc-8ee2c00c6263"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411605, 8738, 212, 3, 131, "Input",ExpressionUUID->"766103ec-b00e-42ae-b3b8-d9261dafecba"],
Cell[411820, 8743, 459, 6, 150, "Output",ExpressionUUID->"5830530d-0bc4-46bd-93ef-640044fa17c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412316, 8754, 152, 2, 131, "Input",ExpressionUUID->"4c112ff3-71eb-4cd8-accd-e978221b6997"],
Cell[412471, 8758, 498, 7, 150, "Output",ExpressionUUID->"ceb6bd1c-61b7-4446-8478-72d25665d4c4"]
}, Open  ]],
Cell[412984, 8768, 228, 4, 162, "Text",ExpressionUUID->"1927dca6-014f-48e2-ae12-350a9dae1ecf"],
Cell[CellGroupData[{
Cell[413237, 8776, 279, 5, 131, "Input",ExpressionUUID->"2e8b3b2c-c587-4736-b534-bb4388d18749"],
Cell[413519, 8783, 1187, 24, 150, "Output",ExpressionUUID->"d8ac7ae3-338e-4e67-a846-e81b63312aba"]
}, Open  ]],
Cell[414721, 8810, 177, 3, 162, "Text",ExpressionUUID->"259c1b44-9850-4db5-956c-e199e9097641"],
Cell[CellGroupData[{
Cell[414923, 8817, 549, 13, 131, "Input",ExpressionUUID->"1530797a-f531-4ce0-aaf5-b8dd07aff0e0"],
Cell[415475, 8832, 1128, 22, 150, "Output",ExpressionUUID->"8ba4aff9-dbd5-4d9a-b2fe-1848f26055ce"]
}, Open  ]],
Cell[416618, 8857, 320, 6, 162, "Text",ExpressionUUID->"c24163c4-5ba3-42b2-9780-67ddeb1788cb"],
Cell[416941, 8865, 240, 6, 162, "Text",ExpressionUUID->"aac1761b-75ff-4e26-a79f-b47d02608444"],
Cell[417184, 8873, 229, 4, 131, "Input",ExpressionUUID->"185ac22e-e241-4fd9-bb66-63ff06742c70"],
Cell[CellGroupData[{
Cell[417438, 8881, 1182, 28, 226, "Input",ExpressionUUID->"cb094d41-b389-4055-8065-1f014f4750c2"],
Cell[418623, 8911, 728, 10, 150, "Output",ExpressionUUID->"079f8fc0-292b-4401-a339-9659be38a403"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419388, 8926, 1207, 29, 318, "Input",ExpressionUUID->"e41b7ab9-e123-4c5f-abc0-abffe72efd20"],
Cell[420598, 8957, 752, 10, 150, "Output",ExpressionUUID->"7f8946bf-8145-4432-98ea-027783661c9e"]
}, Open  ]],
Cell[421365, 8970, 1400, 35, 868, "Input",ExpressionUUID->"a4e22edc-e972-4f96-b8c5-57ffdd1958ff"],
Cell[422768, 9007, 161, 3, 162, "Text",ExpressionUUID->"50e933ac-a487-48c0-90fe-4dc731e3910a"],
Cell[CellGroupData[{
Cell[422954, 9014, 1537, 37, 1051, "Input",ExpressionUUID->"d07f782e-badb-432e-baaf-72f3def4c80e"],
Cell[424494, 9053, 619, 9, 150, "Output",ExpressionUUID->"5913f64c-2447-4956-aa3f-98067906a831"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425150, 9067, 239, 5, 131, "Input",ExpressionUUID->"1a1c63fa-02ce-4786-8686-2bde25f75ca2"],
Cell[425392, 9074, 643, 9, 150, "Output",ExpressionUUID->"c2be46f4-2564-4737-b90d-732c4758cb71"]
}, Open  ]],
Cell[426050, 9086, 240, 6, 162, "Text",ExpressionUUID->"161650d8-ca0f-41c1-b871-21ec6845e924"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426327, 9097, 167, 3, 300, "Subchapter",ExpressionUUID->"33fdfe77-6dfb-4579-a6cd-1bd64b00bb3a"],
Cell[426497, 9102, 243, 4, 162, "Text",ExpressionUUID->"1333d468-ad7a-4576-8e9d-bebc9885eca9"],
Cell[CellGroupData[{
Cell[426765, 9110, 306, 7, 131, "Input",ExpressionUUID->"c32d9e77-0664-4cca-8860-a5cb1d0acb24"],
Cell[427074, 9119, 574, 9, 150, "Output",ExpressionUUID->"7cc8b0e9-adfc-4e52-ac8f-e13761f4bb38"]
}, Open  ]],
Cell[427663, 9131, 273, 6, 162, "Text",ExpressionUUID->"2d252f8b-1516-4f24-ac5c-cd3f8de2ea4f"],
Cell[427939, 9139, 778, 22, 267, "Text",ExpressionUUID->"6a20b7fc-2006-424d-bb5b-5ef238e693c6"],
Cell[428720, 9163, 437, 10, 162, "Text",ExpressionUUID->"b2e0ae44-f910-4105-9fc8-c8b299d38b6f"],
Cell[429160, 9175, 300, 7, 162, "Text",ExpressionUUID->"a31fcf37-30c9-43db-9ed8-69d0cfa73bbc"],
Cell[429463, 9184, 919, 23, 592, "Input",ExpressionUUID->"8775897f-63e0-4a6a-b2a4-c011091f7c2f"],
Cell[430385, 9209, 338, 8, 131, "Input",ExpressionUUID->"8ed3a49f-90a4-4e34-966f-ab7ea9df55ce"],
Cell[430726, 9219, 854, 18, 226, "Input",ExpressionUUID->"2bcf0c89-fb5e-4338-b537-72a6f47e6c88"],
Cell[CellGroupData[{
Cell[431605, 9241, 240, 5, 131, "Input",ExpressionUUID->"4bb29281-352d-4141-aca2-c6257ad88c37"],
Cell[431848, 9248, 594, 9, 150, "Output",ExpressionUUID->"25a51c5b-7c0f-43af-87c1-199f3a2b9ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432479, 9262, 1452, 36, 1051, "Input",ExpressionUUID->"af3b1068-f792-4d05-a90b-e1e02f89b779"],
Cell[433934, 9300, 566, 9, 150, "Output",ExpressionUUID->"827e1e02-be5d-4474-bd00-95db67f8a4d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434537, 9314, 180, 3, 131, "Input",ExpressionUUID->"7e86ae91-b08c-4bc6-ad2c-5ba46de7a4c0"],
Cell[434720, 9319, 517, 8, 150, "Output",ExpressionUUID->"abaa9d2a-be74-4edc-8bca-72e0a21a536a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435274, 9332, 243, 6, 131, "Input",ExpressionUUID->"7b4f0d4d-7a86-4b3b-b63a-8ed04dce51e6"],
Cell[435520, 9340, 535, 8, 150, "Output",ExpressionUUID->"f856b8dd-e684-4b82-b02c-ff1549b7ae2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436092, 9353, 1405, 35, 1051, "Input",ExpressionUUID->"e1788dce-def5-4002-86f0-22649b2ed108"],
Cell[437500, 9390, 192, 4, 150, "Output",ExpressionUUID->"eb29a64a-0e22-4c8f-9cf5-d982202147b0"],
Cell[437695, 9396, 4614, 65, 387, "Message",ExpressionUUID->"376ac7d4-6cfc-47af-ac03-7e4f8852c40e"],
Cell[442312, 9463, 4612, 65, 387, "Message",ExpressionUUID->"91caf25e-a571-494a-88d3-4326f5c73595"]
}, Open  ]],
Cell[446939, 9531, 500, 14, 162, "Text",ExpressionUUID->"aca2d8e7-5d03-4f84-980f-dc21928054a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447476, 9550, 177, 3, 300, "Subchapter",ExpressionUUID->"7a2fa883-52f0-4bb5-bb9b-b5f2ef741599"],
Cell[447656, 9555, 310, 9, 162, "Text",ExpressionUUID->"0ee2c19d-c4e2-45d2-9f4a-bb59cf8859d4"],
Cell[447969, 9566, 329, 8, 131, "Input",ExpressionUUID->"c11e0086-8da1-4f37-8384-02617b6008e6"],
Cell[CellGroupData[{
Cell[448323, 9578, 163, 3, 314, "Section",ExpressionUUID->"e5fd90db-66c9-4ffc-969c-dd47ec636c46"],
Cell[448489, 9583, 226, 5, 162, "Text",ExpressionUUID->"4a241345-1a39-434e-8ed6-f12c09e3121c"],
Cell[448718, 9590, 181, 3, 162, "Text",ExpressionUUID->"08d73047-be6e-4de6-98ce-0b50ef4c3a5c"],
Cell[CellGroupData[{
Cell[448924, 9597, 377, 10, 84, "Input",ExpressionUUID->"d57c97da-b70f-4494-8181-8e17fe443a56"],
Cell[449304, 9609, 2993, 66, 275, "Output",ExpressionUUID->"a07d8b9e-5864-4584-a4e5-a228617e1e02"]
}, Open  ]],
Cell[452312, 9678, 349, 7, 104, "Text",ExpressionUUID->"c45afb69-5fda-4185-9b84-c06111de1616"],
Cell[452664, 9687, 551, 13, 84, "Input",ExpressionUUID->"355aa621-65f4-490c-9425-def591c70bb6"],
Cell[453218, 9702, 230, 4, 104, "Text",ExpressionUUID->"d9cf0d8d-1b7e-4c4c-b5b1-bb1dcf319daa"],
Cell[453451, 9708, 1773, 43, 790, "Input",ExpressionUUID->"2fb878be-6b43-4b7c-b157-c4fc928b1987"],
Cell[455227, 9753, 199, 3, 104, "Text",ExpressionUUID->"4e1525cd-8e14-4950-b9fa-e2e796d20ce2"],
Cell[455429, 9758, 3247, 67, 1434, "Input",ExpressionUUID->"2ca21aee-58a1-49a1-b6a5-8a13d937322e"],
Cell[458679, 9827, 169, 3, 162, "Text",ExpressionUUID->"88b35a71-18e2-4c2a-9eb0-a347ce2bc4bd"],
Cell[458851, 9832, 435, 9, 131, "Input",ExpressionUUID->"4564b195-c829-44c4-8b4e-48eba7ca57dc"],
Cell[459289, 9843, 1309, 24, 409, "Input",ExpressionUUID->"1a75405c-2052-4165-8030-43617d55ca07"],
Cell[460601, 9869, 399, 11, 131, "Input",ExpressionUUID->"852f62df-8453-4d38-a437-8d10179c1813"],
Cell[CellGroupData[{
Cell[461025, 9884, 422, 9, 131, "Input",ExpressionUUID->"3c6e4f04-cae0-4d54-82e5-ab025de8d1eb"],
Cell[461450, 9895, 3002, 66, 429, "Output",ExpressionUUID->"d07ed396-faad-441f-b171-0c529fc198a3"]
}, Open  ]],
Cell[464467, 9964, 201, 3, 104, "Text",ExpressionUUID->"f916bf52-15b1-41e1-a56e-dec62470ee07"],
Cell[CellGroupData[{
Cell[464693, 9971, 1608, 38, 673, "Input",ExpressionUUID->"524ba3e5-c2c2-40fa-807b-7849980416e3"],
Cell[466304, 10011, 547, 9, 96, "Output",ExpressionUUID->"2f6122cf-7972-4b58-b334-cc7d1e946256"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466888, 10025, 243, 6, 84, "Input",ExpressionUUID->"b3b840cd-65ad-4fdd-8e60-30425634f566"],
Cell[467134, 10033, 551, 8, 96, "Output",ExpressionUUID->"1c174761-d227-4606-8dcf-3662a64409d8"]
}, Open  ]],
Cell[467700, 10044, 224, 4, 104, "Text",ExpressionUUID->"c9710ae7-e3e1-4e5c-891b-f2f4e5e3da07"],
Cell[467927, 10050, 169, 3, 104, "Text",ExpressionUUID->"c6a15976-f518-42a8-a108-d9129ee696cd"],
Cell[CellGroupData[{
Cell[468121, 10057, 1477, 36, 673, "Input",ExpressionUUID->"87304602-74de-48f4-8782-321d3f8f1f7f"],
Cell[469601, 10095, 223, 5, 96, "Output",ExpressionUUID->"b5be46bf-e99e-4d3f-915a-894a9873a122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469861, 10105, 275, 6, 84, "Input",ExpressionUUID->"d654745a-9a37-4bec-a981-d2e13c41da76"],
Cell[470139, 10113, 218, 4, 96, "Output",ExpressionUUID->"535e48d8-ec78-4e93-a151-f83298727e96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470394, 10122, 216, 4, 135, "Subsubsection",ExpressionUUID->"b156e1cb-3e08-4c47-b74c-21e420a3f381"],
Cell[470613, 10128, 190, 3, 104, "Text",ExpressionUUID->"db2a88ee-0b60-48b2-bee4-88a3a84c2b9e"],
Cell[CellGroupData[{
Cell[470828, 10135, 377, 10, 84, "Input",ExpressionUUID->"2a33c4d9-1abb-4e97-9000-3c6932ff4cf8"],
Cell[471208, 10147, 2825, 64, 275, "Output",ExpressionUUID->"7b16af06-9032-4649-a9e0-05b541d5f20d"]
}, Open  ]],
Cell[474048, 10214, 462, 10, 84, "Input",ExpressionUUID->"0e3a2675-85d8-4784-a045-4d137ab174e7"],
Cell[CellGroupData[{
Cell[474535, 10228, 549, 11, 84, "Input",ExpressionUUID->"6b1345e4-8d2c-4051-9355-7bb876048060"],
Cell[475087, 10241, 2879, 65, 275, "Output",ExpressionUUID->"0cca9c64-564e-48fb-a082-43b6a953cd53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478003, 10311, 267, 6, 84, "Input",ExpressionUUID->"fd333718-8fb2-4295-9fc6-c0f287caa34a"],
Cell[478273, 10319, 475, 7, 96, "Output",ExpressionUUID->"8a9cc738-cd2d-48c3-94ab-0df9fa744cb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478785, 10331, 683, 18, 204, "Input",ExpressionUUID->"ee61b7ec-483f-460d-aaa1-0d3dc6f82359"],
Cell[479471, 10351, 561, 10, 96, "Output",ExpressionUUID->"1f884925-33cd-4b3d-a547-12246aa08846"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480069, 10366, 1563, 38, 673, "Input",ExpressionUUID->"f9acf1c8-ad19-4d90-99c7-a10422ec1c63"],
Cell[481635, 10406, 461, 8, 150, "Output",ExpressionUUID->"d219139a-450f-49cf-95eb-3035d29a2215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482133, 10419, 245, 6, 131, "Input",ExpressionUUID->"ad3ca5f1-3881-4387-b8a8-808890a2b499"],
Cell[482381, 10427, 466, 7, 150, "Output",ExpressionUUID->"bb6618d6-43e2-4d68-9e19-17fde5763a6b"]
}, Open  ]],
Cell[482862, 10437, 228, 4, 162, "Text",ExpressionUUID->"94ba56d1-8fbf-41b7-83ff-43439a688c9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483127, 10446, 167, 3, 253, "Subsection",ExpressionUUID->"b2148fbf-6011-4bbc-a4ab-455620907acd"],
Cell[483297, 10451, 424, 12, 162, "Text",ExpressionUUID->"c9be1b2a-b78d-42a1-832f-0ef864eb6e30"],
Cell[CellGroupData[{
Cell[483746, 10467, 162, 3, 210, "Subsubsection",ExpressionUUID->"56edc8f4-e7ae-49b4-b283-9e6f279c79ab"],
Cell[483911, 10472, 459, 12, 131, "Input",ExpressionUUID->"205d4bfd-6cb1-4a55-8c68-cf878a189fc2"],
Cell[484373, 10486, 452, 12, 131, "Input",ExpressionUUID->"84ce7a10-7c44-4035-842c-70a8eca21ce8"],
Cell[CellGroupData[{
Cell[484850, 10502, 379, 10, 131, "Input",ExpressionUUID->"1d26d946-7432-4be1-82e8-40326817225a"],
Cell[485232, 10514, 2531, 60, 429, "Output",ExpressionUUID->"27516a97-9013-4d70-a63c-d2a943d61612"]
}, Open  ]],
Cell[487778, 10577, 248, 4, 162, "Text",ExpressionUUID->"2e13d31e-1998-4627-85be-43babced8cfd"],
Cell[CellGroupData[{
Cell[488051, 10585, 395, 8, 131, "Input",ExpressionUUID->"e093ac02-e503-465f-89c2-41aa20c42bdb"],
Cell[488449, 10595, 2552, 60, 429, "Output",ExpressionUUID->"4812194f-2944-40c0-8ac1-93cb325d98d9"]
}, Open  ]],
Cell[491016, 10658, 170, 3, 162, "Text",ExpressionUUID->"119bd202-560f-4d9c-a215-a4c1c75cbbd7"],
Cell[CellGroupData[{
Cell[491211, 10665, 389, 8, 131, "Input",ExpressionUUID->"82cf5747-a18e-47e6-872a-4af1f932bb85"],
Cell[491603, 10675, 2603, 60, 429, "Output",ExpressionUUID->"49c2061f-fb49-40fd-bb12-b6421074c266"]
}, Open  ]],
Cell[494221, 10738, 185, 3, 162, "Text",ExpressionUUID->"71850fc1-8ba4-480b-876f-c494b93e0a60"],
Cell[CellGroupData[{
Cell[494431, 10745, 1461, 36, 1051, "Input",ExpressionUUID->"10705c40-ec8e-49ec-8de3-ae77cfb76d48"],
Cell[495895, 10783, 385, 7, 150, "Output",ExpressionUUID->"beb42127-8d98-4f70-8d62-ce99aad578cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496317, 10795, 243, 6, 84, "Input",ExpressionUUID->"ec0cd2ba-b34a-441d-8200-61b1d2884a5a"],
Cell[496563, 10803, 396, 7, 96, "Output",ExpressionUUID->"4b01f3de-2261-4482-a049-c2a17e6ec639"]
}, Open  ]],
Cell[496974, 10813, 251, 4, 104, "Text",ExpressionUUID->"b5463b30-9aa9-4f6b-ae31-f0945f558c80"],
Cell[497228, 10819, 188, 3, 104, "Text",ExpressionUUID->"481939cf-d97b-4b57-a641-6a5233a1930d"],
Cell[CellGroupData[{
Cell[497441, 10826, 375, 10, 84, "Input",ExpressionUUID->"98231863-565e-467b-a3c8-84ac86a2d869"],
Cell[497819, 10838, 2527, 60, 275, "Output",ExpressionUUID->"7b6e286b-d7bf-4520-8576-a788d08ebf98"]
}, Open  ]],
Cell[500361, 10901, 202, 3, 104, "Text",ExpressionUUID->"c1321681-0df1-4b24-83a7-286cf66795c6"],
Cell[500566, 10906, 407, 11, 84, "Input",ExpressionUUID->"864c0851-d854-4179-80ce-895e6bd744e9"],
Cell[500976, 10919, 406, 11, 84, "Input",ExpressionUUID->"caace4e9-8f22-4fe3-9f91-10ffea5ebd90"],
Cell[CellGroupData[{
Cell[501407, 10934, 400, 8, 84, "Input",ExpressionUUID->"0be57e80-aeeb-4a61-9d81-fa0e8704355f"],
Cell[501810, 10944, 2505, 59, 275, "Output",ExpressionUUID->"0248cb77-c3a0-4ee9-9d1e-3f22006ab19a"]
}, Open  ]],
Cell[504330, 11006, 166, 3, 104, "Text",ExpressionUUID->"1d81ee2c-8a02-4311-8146-637627a92129"],
Cell[CellGroupData[{
Cell[504521, 11013, 290, 6, 84, "Input",ExpressionUUID->"a0dd6f19-9eb6-4282-a263-d0dabddf45f3"],
Cell[504814, 11021, 2473, 59, 275, "Output",ExpressionUUID->"489079e2-fb4e-4d11-9bdb-d286b67366df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[507324, 11085, 1458, 36, 673, "Input",ExpressionUUID->"aa8c9061-6d1a-4c73-b3f9-87b85bf82b20"],
Cell[508785, 11123, 337, 6, 96, "Output",ExpressionUUID->"f5b6dc90-bdbf-448d-aae3-2eecbd84ac7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509159, 11134, 245, 6, 84, "Input",ExpressionUUID->"7f2de653-ae01-4edc-8339-a15fe41529bf"],
Cell[509407, 11142, 341, 5, 96, "Output",ExpressionUUID->"1cb97f08-520a-46fa-9db5-7ebf2eab715d"]
}, Open  ]],
Cell[509763, 11150, 306, 7, 104, "Text",ExpressionUUID->"b8eca864-e1ea-4ab8-ad4e-12737703333e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[510142, 11165, 217, 4, 192, "Subchapter",ExpressionUUID->"d07a1918-1c49-43d9-aa4e-0f943315b1a0"],
Cell[510362, 11171, 274, 6, 104, "Text",ExpressionUUID->"490b2a65-4f03-4ea7-adce-6b11f6074dd8"],
Cell[510639, 11179, 293, 7, 84, "Input",ExpressionUUID->"a4f9d2bc-5034-4d7c-8dce-68a74d73ea48"],
Cell[510935, 11188, 234, 5, 84, "Input",ExpressionUUID->"4fcc3790-975b-4e42-b320-3928b9c9db7d"],
Cell[CellGroupData[{
Cell[511194, 11197, 561, 13, 145, "Input",ExpressionUUID->"92f45d98-710b-4c87-b08c-89658e2a6ba9"],
Cell[511758, 11212, 721, 13, 157, "Output",ExpressionUUID->"942e9591-4886-4392-b601-812992aac0da"],
Cell[512482, 11227, 6414, 128, 626, "Output",ExpressionUUID->"8ea8d3b9-22d4-42ee-b5ba-1867333e9af2"]
}, Open  ]],
Cell[518911, 11358, 4144, 102, 1785, "Input",ExpressionUUID->"cc87bdcf-9f1b-44b7-a73b-80b988780969"],
Cell[523058, 11462, 269, 6, 104, "Text",ExpressionUUID->"c74d8d96-3c6e-4dec-95b1-d8cdf73c658f"],
Cell[CellGroupData[{
Cell[523352, 11472, 1390, 29, 439, "Input",ExpressionUUID->"c3f552b6-3b4e-4df2-9a33-7dda98b2a3a4"],
Cell[524745, 11503, 37891, 779, 287, "Output",ExpressionUUID->"a8a098d4-b814-494c-b689-ca85c6323b18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562673, 12287, 598, 12, 145, "Input",ExpressionUUID->"781a0a9b-e941-4d11-9c0a-c33b3f9977d0"],
Cell[563274, 12301, 37002, 754, 287, "Output",ExpressionUUID->"1fc61091-6bb4-429e-b13a-d85c5434477f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600313, 13060, 330, 7, 84, "Input",ExpressionUUID->"f4c768e3-d489-4c88-894d-6749d9e23f79"],
Cell[600646, 13069, 438, 7, 96, "Output",ExpressionUUID->"4832c779-e92b-47b3-8459-14368b063806"]
}, Open  ]],
Cell[601099, 13079, 178, 3, 162, "Text",ExpressionUUID->"1f2395db-0a7f-414d-ae39-c3de850e23d0"],
Cell[CellGroupData[{
Cell[601302, 13086, 974, 22, 592, "Input",ExpressionUUID->"9875b533-db16-4b52-9824-ad535eb59ed9"],
Cell[602279, 13110, 31439, 647, 448, "Output",ExpressionUUID->"5a9683f2-27d6-4c4d-aa3f-d9a2d4d200ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[633755, 13762, 600, 12, 226, "Input",ExpressionUUID->"43ed097b-79cb-4bfc-a1fe-6805785d8322"],
Cell[634358, 13776, 30685, 627, 448, "Output",ExpressionUUID->"4812131a-ee54-4bb2-9569-0ec8f4396c23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665080, 14408, 301, 6, 131, "Input",ExpressionUUID->"60c8931c-2b4f-46a6-bfd0-f779a133b840"],
Cell[665384, 14416, 364, 6, 96, "Output",ExpressionUUID->"af1b13b6-2db6-4fbb-b248-0e44d7651fb1"]
}, Open  ]],
Cell[665763, 14425, 185, 3, 104, "Text",ExpressionUUID->"4f9562dd-f204-440c-8172-383fb4c7dec2"],
Cell[CellGroupData[{
Cell[665973, 14432, 195, 3, 162, "Subsection",ExpressionUUID->"948a4356-af1a-4b74-9d09-1f83e7047ab0"],
Cell[666171, 14437, 428, 12, 84, "Input",ExpressionUUID->"55cec6e4-5514-4988-8ddf-61dde0aec2d4"],
Cell[666602, 14451, 2494, 56, 1434, "Input",ExpressionUUID->"e1e09a8d-5848-4bd4-9eee-5992acb04b02"],
Cell[CellGroupData[{
Cell[669121, 14511, 182, 3, 84, "Input",ExpressionUUID->"f9a87905-e63a-4728-ba43-2fc13ed5fe4f"],
Cell[669306, 14516, 647, 12, 157, "Output",ExpressionUUID->"5d39f7f8-bcc8-40af-b9a5-d140944f8b04"]
}, Open  ]],
Cell[669968, 14531, 156, 3, 104, "Text",ExpressionUUID->"c5932ea3-0be4-477a-bb3c-f0ec831c1bde"],
Cell[CellGroupData[{
Cell[670149, 14538, 457, 12, 84, "Input",ExpressionUUID->"8cec1676-a814-4f04-a138-ac850b483545"],
Cell[670609, 14552, 295, 5, 96, "Output",ExpressionUUID->"1c269727-1e9c-4bc0-a827-dfff6269ffee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670941, 14562, 513, 13, 84, "Input",ExpressionUUID->"a3b4bd80-cb5d-4c62-a594-4f3c22cec4c9"],
Cell[671457, 14577, 350, 6, 96, "Output",ExpressionUUID->"bf657baf-9798-4acc-8481-bde90109d26e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671844, 14588, 269, 6, 84, "Input",ExpressionUUID->"cc023f20-99fa-4bd3-8a03-253f92d76a00"],
Cell[672116, 14596, 557, 11, 96, "Output",ExpressionUUID->"a0da7b29-d561-4be5-a184-d84903667ce4"]
}, Open  ]],
Cell[672688, 14610, 580, 12, 84, "Input",ExpressionUUID->"7ce9b273-58aa-424d-9185-4bd96bbf03ec"],
Cell[673271, 14624, 402, 10, 84, "Input",ExpressionUUID->"9d55571c-45b1-4ab2-9799-53d1be6a6e5f"],
Cell[673676, 14636, 403, 10, 84, "Input",ExpressionUUID->"7d48cc96-577b-4dff-8031-88edfaf3d0d9"],
Cell[674082, 14648, 403, 10, 84, "Input",ExpressionUUID->"60d3585b-39fa-4151-bdfd-de94d0551853"],
Cell[674488, 14660, 184, 3, 104, "Text",ExpressionUUID->"1c3ee56f-f5ff-49a2-9dc3-4a156dbf9243"],
Cell[674675, 14665, 1416, 35, 673, "Input",ExpressionUUID->"18565358-f8ba-431a-80b7-6e5c960532c7"],
Cell[CellGroupData[{
Cell[676116, 14704, 269, 6, 84, "Input",ExpressionUUID->"e55e1dc8-10f6-462d-892e-d5c6d1e9862a"],
Cell[676388, 14712, 301, 5, 96, "Output",ExpressionUUID->"13ce25ea-acda-4169-8246-5f09097bb410"]
}, Open  ]],
Cell[676704, 14720, 220, 5, 104, "Text",ExpressionUUID->"c7086442-4536-4cfb-8927-4fe23c33163d"],
Cell[CellGroupData[{
Cell[676949, 14729, 1487, 36, 673, "Input",ExpressionUUID->"928da650-c42b-43df-823d-9490ea820dc7"],
Cell[678439, 14767, 218, 5, 96, "Output",ExpressionUUID->"cb1238e0-3232-4c36-aeec-d7f53951a223"]
}, Open  ]],
Cell[CellGroupData[{
Cell[678694, 14777, 275, 6, 84, "Input",ExpressionUUID->"a805a423-ce45-4a13-8f51-a0352a3a2beb"],
Cell[678972, 14785, 222, 4, 96, "Output",ExpressionUUID->"c9b9a266-874e-4552-b3de-e417572e3814"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

